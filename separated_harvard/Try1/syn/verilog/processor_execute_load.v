// ==============================================================
// Generated by Vitis HLS v2023.1.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module processor_execute_load (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        funct3_val,
        imm_I_val,
        p_read,
        data_memory_address0,
        data_memory_ce0,
        data_memory_q0,
        source1_val,
        g_error,
        g_error_ap_vld,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [2:0] funct3_val;
input  [11:0] imm_I_val;
input  [31:0] p_read;
output  [15:0] data_memory_address0;
output   data_memory_ce0;
input  [31:0] data_memory_q0;
input  [31:0] source1_val;
output  [0:0] g_error;
output   g_error_ap_vld;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[15:0] data_memory_address0;
reg data_memory_ce0;
reg g_error_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
reg   [31:0] p_read_1_reg_657;
wire    ap_block_pp0_stage0_11001;
wire   [2:0] funct3_val_read_read_fu_104_p2;
reg   [2:0] funct3_val_read_reg_666;
wire   [2:0] select_ln120_fu_490_p3;
reg   [2:0] select_ln120_reg_670;
wire   [0:0] or_ln124_fu_504_p2;
reg   [0:0] or_ln124_reg_674;
reg   [0:0] ap_phi_mux_g_error_flag_1_phi_fu_223_p36;
reg   [0:0] ap_phi_reg_pp0_iter1_g_error_flag_1_reg_219;
wire   [0:0] ap_phi_reg_pp0_iter0_g_error_flag_1_reg_219;
reg   [31:0] ap_phi_mux_phi_ln169_phi_fu_265_p36;
reg   [31:0] ap_phi_reg_pp0_iter1_phi_ln169_reg_262;
wire   [31:0] ap_phi_reg_pp0_iter0_phi_ln169_reg_262;
wire   [31:0] zext_ln161_1_fu_575_p1;
wire   [31:0] zext_ln159_1_fu_584_p1;
wire   [31:0] zext_ln154_1_fu_589_p1;
wire   [31:0] zext_ln152_1_fu_594_p1;
wire   [31:0] zext_ln150_1_fu_599_p1;
wire   [31:0] zext_ln148_1_fu_608_p1;
wire  signed [31:0] sext_ln140_fu_613_p1;
wire  signed [31:0] sext_ln138_fu_622_p1;
wire  signed [31:0] sext_ln133_fu_627_p1;
wire  signed [31:0] sext_ln131_fu_632_p1;
wire  signed [31:0] sext_ln129_fu_637_p1;
wire  signed [31:0] sext_ln127_fu_646_p1;
wire   [63:0] zext_ln161_fu_510_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln159_fu_515_p1;
wire   [63:0] zext_ln154_fu_520_p1;
wire   [63:0] zext_ln152_fu_525_p1;
wire   [63:0] zext_ln150_fu_530_p1;
wire   [63:0] zext_ln148_fu_535_p1;
wire   [63:0] zext_ln144_fu_540_p1;
wire   [63:0] zext_ln140_fu_545_p1;
wire   [63:0] zext_ln138_fu_550_p1;
wire   [63:0] zext_ln133_fu_555_p1;
wire   [63:0] zext_ln131_fu_560_p1;
wire   [63:0] zext_ln129_fu_565_p1;
wire   [63:0] zext_ln127_fu_570_p1;
wire  signed [11:0] imm_I_val_cast_fu_344_p0;
wire  signed [11:0] sext_ln113_fu_352_p0;
wire   [33:0] zext_ln113_fu_348_p1;
wire  signed [33:0] sext_ln113_fu_352_p1;
wire   [33:0] add_ln113_fu_356_p2;
wire  signed [11:0] sext_ln113_1_fu_370_p0;
wire  signed [11:0] sext_ln113_2_fu_378_p0;
wire  signed [31:0] imm_I_val_cast_fu_344_p1;
wire  signed [27:0] sext_ln113_2_fu_378_p1;
wire   [27:0] trunc_ln113_2_fu_374_p1;
wire  signed [28:0] sext_ln113_1_fu_370_p1;
wire   [28:0] trunc_ln113_1_fu_366_p1;
wire   [28:0] add_ln113_3_fu_394_p2;
wire   [0:0] tmp_fu_400_p3;
wire   [27:0] add_ln113_2_fu_388_p2;
wire   [25:0] tmp_s_fu_414_p4;
wire   [27:0] pos_3_fu_424_p3;
wire   [31:0] zext_ln113_1_fu_432_p1;
wire   [31:0] pos_fu_382_p2;
wire   [31:0] pos_4_fu_436_p3;
wire   [1:0] trunc_ln113_fu_362_p1;
wire   [1:0] sub_ln120_fu_462_p2;
wire   [2:0] p_and_t_fu_468_p3;
wire   [0:0] tmp_13_fu_454_p3;
wire   [2:0] sub_ln120_1_fu_476_p2;
wire   [2:0] tmp_12_fu_482_p3;
wire   [0:0] icmp_ln121_fu_498_p2;
wire   [0:0] xor_ln114_fu_408_p2;
wire   [15:0] pos_5_fu_444_p4;
wire   [15:0] grp_fu_304_p4;
wire   [15:0] trunc_ln159_fu_580_p1;
wire   [7:0] grp_fu_314_p4;
wire   [7:0] grp_fu_324_p4;
wire   [7:0] grp_fu_334_p4;
wire   [7:0] trunc_ln148_fu_604_p1;
wire   [15:0] trunc_ln138_fu_618_p1;
wire   [7:0] trunc_ln127_fu_642_p1;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_186;
reg    ap_condition_179;
reg    ap_condition_259;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_179)) begin
        if ((1'b1 == ap_condition_186)) begin
            ap_phi_reg_pp0_iter1_g_error_flag_1_reg_219 <= 1'd1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_g_error_flag_1_reg_219 <= ap_phi_reg_pp0_iter0_g_error_flag_1_reg_219;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_179)) begin
        if ((1'b1 == ap_condition_186)) begin
            ap_phi_reg_pp0_iter1_phi_ln169_reg_262 <= p_read;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_phi_ln169_reg_262 <= ap_phi_reg_pp0_iter0_phi_ln169_reg_262;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        funct3_val_read_reg_666 <= funct3_val;
        or_ln124_reg_674 <= or_ln124_fu_504_p2;
        p_read_1_reg_657 <= p_read;
        select_ln120_reg_670 <= select_ln120_fu_490_p3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((funct3_val_read_reg_666 == 3'd2) | (~(select_ln120_reg_670 == 3'd3) & ~(select_ln120_reg_670 == 3'd1) & ~(select_ln120_reg_670 == 3'd2) & ~(select_ln120_reg_670 == 3'd0) & (funct3_val_read_reg_666 == 3'd0)) | (~(select_ln120_reg_670 == 3'd3) & ~(select_ln120_reg_670 == 3'd1) & ~(select_ln120_reg_670 == 3'd2) & ~(select_ln120_reg_670 == 3'd0) & (funct3_val_read_reg_666 == 3'd4)) | ((select_ln120_reg_670 == 3'd3) & (funct3_val_read_reg_666 == 3'd0)) | ((select_ln120_reg_670 == 3'd3) & (funct3_val_read_reg_666 == 3'd4)) | ((select_ln120_reg_670 == 3'd1) & (funct3_val_read_reg_666 == 3'd0)) | ((select_ln120_reg_670 == 3'd1) & (funct3_val_read_reg_666 == 3'd4)) | (~(select_ln120_reg_670 == 3'd2) & ~(select_ln120_reg_670 == 3'd0) & (funct3_val_read_reg_666 == 3'd1)) | (~(select_ln120_reg_670 == 3'd2) & ~(select_ln120_reg_670 == 3'd0) & (funct3_val_read_reg_666 == 3'd5)) | ((select_ln120_reg_670 == 3'd2) & (funct3_val_read_reg_666 == 3'd0)) | ((select_ln120_reg_670 == 3'd2) & (funct3_val_read_reg_666 == 3'd1)) | ((select_ln120_reg_670 
    == 3'd2) & (funct3_val_read_reg_666 == 3'd4)) | ((select_ln120_reg_670 == 3'd2) & (funct3_val_read_reg_666 == 3'd5)) | ((select_ln120_reg_670 == 3'd0) & (funct3_val_read_reg_666 == 3'd0)) | ((select_ln120_reg_670 == 3'd0) & (funct3_val_read_reg_666 == 3'd1)) | ((select_ln120_reg_670 == 3'd0) & (funct3_val_read_reg_666 == 3'd4)) | ((select_ln120_reg_670 == 3'd0) & (funct3_val_read_reg_666 == 3'd5)))) begin
        ap_phi_mux_g_error_flag_1_phi_fu_223_p36 = or_ln124_reg_674;
    end else begin
        ap_phi_mux_g_error_flag_1_phi_fu_223_p36 = ap_phi_reg_pp0_iter1_g_error_flag_1_reg_219;
    end
end

always @ (*) begin
    if (((select_ln120_reg_670 == 3'd0) & (funct3_val_read_reg_666 == 3'd0))) begin
        ap_phi_mux_phi_ln169_phi_fu_265_p36 = sext_ln127_fu_646_p1;
    end else if (((select_ln120_reg_670 == 3'd1) & (funct3_val_read_reg_666 == 3'd0))) begin
        ap_phi_mux_phi_ln169_phi_fu_265_p36 = sext_ln129_fu_637_p1;
    end else if (((select_ln120_reg_670 == 3'd2) & (funct3_val_read_reg_666 == 3'd0))) begin
        ap_phi_mux_phi_ln169_phi_fu_265_p36 = sext_ln131_fu_632_p1;
    end else if (((select_ln120_reg_670 == 3'd3) & (funct3_val_read_reg_666 == 3'd0))) begin
        ap_phi_mux_phi_ln169_phi_fu_265_p36 = sext_ln133_fu_627_p1;
    end else if (((select_ln120_reg_670 == 3'd0) & (funct3_val_read_reg_666 == 3'd1))) begin
        ap_phi_mux_phi_ln169_phi_fu_265_p36 = sext_ln138_fu_622_p1;
    end else if (((select_ln120_reg_670 == 3'd2) & (funct3_val_read_reg_666 == 3'd1))) begin
        ap_phi_mux_phi_ln169_phi_fu_265_p36 = sext_ln140_fu_613_p1;
    end else if (((select_ln120_reg_670 == 3'd0) & (funct3_val_read_reg_666 == 3'd4))) begin
        ap_phi_mux_phi_ln169_phi_fu_265_p36 = zext_ln148_1_fu_608_p1;
    end else if (((select_ln120_reg_670 == 3'd1) & (funct3_val_read_reg_666 == 3'd4))) begin
        ap_phi_mux_phi_ln169_phi_fu_265_p36 = zext_ln150_1_fu_599_p1;
    end else if (((select_ln120_reg_670 == 3'd2) & (funct3_val_read_reg_666 == 3'd4))) begin
        ap_phi_mux_phi_ln169_phi_fu_265_p36 = zext_ln152_1_fu_594_p1;
    end else if (((select_ln120_reg_670 == 3'd3) & (funct3_val_read_reg_666 == 3'd4))) begin
        ap_phi_mux_phi_ln169_phi_fu_265_p36 = zext_ln154_1_fu_589_p1;
    end else if (((select_ln120_reg_670 == 3'd0) & (funct3_val_read_reg_666 == 3'd5))) begin
        ap_phi_mux_phi_ln169_phi_fu_265_p36 = zext_ln159_1_fu_584_p1;
    end else if (((select_ln120_reg_670 == 3'd2) & (funct3_val_read_reg_666 == 3'd5))) begin
        ap_phi_mux_phi_ln169_phi_fu_265_p36 = zext_ln161_1_fu_575_p1;
    end else if ((funct3_val_read_reg_666 == 3'd2)) begin
        ap_phi_mux_phi_ln169_phi_fu_265_p36 = data_memory_q0;
    end else if (((~(select_ln120_reg_670 == 3'd3) & ~(select_ln120_reg_670 == 3'd1) & ~(select_ln120_reg_670 == 3'd2) & ~(select_ln120_reg_670 == 3'd0) & (funct3_val_read_reg_666 == 3'd0)) | (~(select_ln120_reg_670 == 3'd3) & ~(select_ln120_reg_670 == 3'd1) & ~(select_ln120_reg_670 == 3'd2) & ~(select_ln120_reg_670 == 3'd0) & (funct3_val_read_reg_666 == 3'd4)) | (~(select_ln120_reg_670 == 3'd2) & ~(select_ln120_reg_670 == 3'd0) & (funct3_val_read_reg_666 == 3'd1)) | (~(select_ln120_reg_670 == 3'd2) & ~(select_ln120_reg_670 == 3'd0) & (funct3_val_read_reg_666 == 3'd5)))) begin
        ap_phi_mux_phi_ln169_phi_fu_265_p36 = p_read_1_reg_657;
    end else begin
        ap_phi_mux_phi_ln169_phi_fu_265_p36 = ap_phi_reg_pp0_iter1_phi_ln169_reg_262;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_259)) begin
        if (((select_ln120_fu_490_p3 == 3'd0) & (funct3_val_read_read_fu_104_p2 == 3'd0))) begin
            data_memory_address0 = zext_ln127_fu_570_p1;
        end else if (((select_ln120_fu_490_p3 == 3'd1) & (funct3_val_read_read_fu_104_p2 == 3'd0))) begin
            data_memory_address0 = zext_ln129_fu_565_p1;
        end else if (((select_ln120_fu_490_p3 == 3'd2) & (funct3_val_read_read_fu_104_p2 == 3'd0))) begin
            data_memory_address0 = zext_ln131_fu_560_p1;
        end else if (((select_ln120_fu_490_p3 == 3'd3) & (funct3_val_read_read_fu_104_p2 == 3'd0))) begin
            data_memory_address0 = zext_ln133_fu_555_p1;
        end else if (((select_ln120_fu_490_p3 == 3'd0) & (funct3_val_read_read_fu_104_p2 == 3'd1))) begin
            data_memory_address0 = zext_ln138_fu_550_p1;
        end else if (((select_ln120_fu_490_p3 == 3'd2) & (funct3_val_read_read_fu_104_p2 == 3'd1))) begin
            data_memory_address0 = zext_ln140_fu_545_p1;
        end else if ((funct3_val_read_read_fu_104_p2 == 3'd2)) begin
            data_memory_address0 = zext_ln144_fu_540_p1;
        end else if (((select_ln120_fu_490_p3 == 3'd0) & (funct3_val_read_read_fu_104_p2 == 3'd4))) begin
            data_memory_address0 = zext_ln148_fu_535_p1;
        end else if (((select_ln120_fu_490_p3 == 3'd1) & (funct3_val_read_read_fu_104_p2 == 3'd4))) begin
            data_memory_address0 = zext_ln150_fu_530_p1;
        end else if (((select_ln120_fu_490_p3 == 3'd2) & (funct3_val_read_read_fu_104_p2 == 3'd4))) begin
            data_memory_address0 = zext_ln152_fu_525_p1;
        end else if (((select_ln120_fu_490_p3 == 3'd3) & (funct3_val_read_read_fu_104_p2 == 3'd4))) begin
            data_memory_address0 = zext_ln154_fu_520_p1;
        end else if (((select_ln120_fu_490_p3 == 3'd0) & (funct3_val_read_read_fu_104_p2 == 3'd5))) begin
            data_memory_address0 = zext_ln159_fu_515_p1;
        end else if (((select_ln120_fu_490_p3 == 3'd2) & (funct3_val_read_read_fu_104_p2 == 3'd5))) begin
            data_memory_address0 = zext_ln161_fu_510_p1;
        end else begin
            data_memory_address0 = 'bx;
        end
    end else begin
        data_memory_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((select_ln120_fu_490_p3 == 3'd1) & (funct3_val_read_read_fu_104_p2 == 3'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((select_ln120_fu_490_p3 == 3'd1) & (funct3_val_read_read_fu_104_p2 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((select_ln120_fu_490_p3 == 3'd3) & (funct3_val_read_read_fu_104_p2 == 3'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((select_ln120_fu_490_p3 == 3'd3) & (funct3_val_read_read_fu_104_p2 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((select_ln120_fu_490_p3 == 3'd0) & (funct3_val_read_read_fu_104_p2 == 3'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((select_ln120_fu_490_p3 == 3'd0) & (funct3_val_read_read_fu_104_p2 == 3'd5) & (1'b0 == ap_block_pp0_stage0_11001) 
    & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((select_ln120_fu_490_p3 == 3'd0) & (funct3_val_read_read_fu_104_p2 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((select_ln120_fu_490_p3 == 3'd0) & (funct3_val_read_read_fu_104_p2 == 3'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((select_ln120_fu_490_p3 == 3'd2) & (funct3_val_read_read_fu_104_p2 == 3'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((select_ln120_fu_490_p3 == 3'd2) & (funct3_val_read_read_fu_104_p2 == 3'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((select_ln120_fu_490_p3 == 3'd2) & (funct3_val_read_read_fu_104_p2 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((select_ln120_fu_490_p3 
    == 3'd2) & (funct3_val_read_read_fu_104_p2 == 3'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((funct3_val_read_read_fu_104_p2 == 3'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        data_memory_ce0 = 1'b1;
    end else begin
        data_memory_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_phi_mux_g_error_flag_1_phi_fu_223_p36 == 1'd1))) begin
        g_error_ap_vld = 1'b1;
    end else begin
        g_error_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln113_2_fu_388_p2 = ($signed(sext_ln113_2_fu_378_p1) + $signed(trunc_ln113_2_fu_374_p1));

assign add_ln113_3_fu_394_p2 = ($signed(sext_ln113_1_fu_370_p1) + $signed(trunc_ln113_1_fu_366_p1));

assign add_ln113_fu_356_p2 = ($signed(zext_ln113_fu_348_p1) + $signed(sext_ln113_fu_352_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_179 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_186 = ((funct3_val_read_read_fu_104_p2 == 3'd3) | ((funct3_val_read_read_fu_104_p2 == 3'd6) | (funct3_val_read_read_fu_104_p2 == 3'd7)));
end

always @ (*) begin
    ap_condition_259 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_g_error_flag_1_reg_219 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln169_reg_262 = 'bx;

assign ap_return = ap_phi_mux_phi_ln169_phi_fu_265_p36;

assign funct3_val_read_read_fu_104_p2 = funct3_val;

assign g_error = 1'd1;

assign grp_fu_304_p4 = {{data_memory_q0[31:16]}};

assign grp_fu_314_p4 = {{data_memory_q0[31:24]}};

assign grp_fu_324_p4 = {{data_memory_q0[23:16]}};

assign grp_fu_334_p4 = {{data_memory_q0[15:8]}};

assign icmp_ln121_fu_498_p2 = ((pos_4_fu_436_p3 > 32'd204799) ? 1'b1 : 1'b0);

assign imm_I_val_cast_fu_344_p0 = imm_I_val;

assign imm_I_val_cast_fu_344_p1 = imm_I_val_cast_fu_344_p0;

assign or_ln124_fu_504_p2 = (xor_ln114_fu_408_p2 | icmp_ln121_fu_498_p2);

assign p_and_t_fu_468_p3 = {{1'd0}, {sub_ln120_fu_462_p2}};

assign pos_3_fu_424_p3 = {{tmp_s_fu_414_p4}, {2'd0}};

assign pos_4_fu_436_p3 = ((tmp_fu_400_p3[0:0] == 1'b1) ? zext_ln113_1_fu_432_p1 : pos_fu_382_p2);

assign pos_5_fu_444_p4 = {{pos_4_fu_436_p3[17:2]}};

assign pos_fu_382_p2 = ($signed(imm_I_val_cast_fu_344_p1) + $signed(source1_val));

assign select_ln120_fu_490_p3 = ((tmp_13_fu_454_p3[0:0] == 1'b1) ? sub_ln120_1_fu_476_p2 : tmp_12_fu_482_p3);

assign sext_ln113_1_fu_370_p0 = imm_I_val;

assign sext_ln113_1_fu_370_p1 = sext_ln113_1_fu_370_p0;

assign sext_ln113_2_fu_378_p0 = imm_I_val;

assign sext_ln113_2_fu_378_p1 = sext_ln113_2_fu_378_p0;

assign sext_ln113_fu_352_p0 = imm_I_val;

assign sext_ln113_fu_352_p1 = sext_ln113_fu_352_p0;

assign sext_ln127_fu_646_p1 = $signed(trunc_ln127_fu_642_p1);

assign sext_ln129_fu_637_p1 = $signed(grp_fu_334_p4);

assign sext_ln131_fu_632_p1 = $signed(grp_fu_324_p4);

assign sext_ln133_fu_627_p1 = $signed(grp_fu_314_p4);

assign sext_ln138_fu_622_p1 = $signed(trunc_ln138_fu_618_p1);

assign sext_ln140_fu_613_p1 = $signed(grp_fu_304_p4);

assign sub_ln120_1_fu_476_p2 = (3'd0 - p_and_t_fu_468_p3);

assign sub_ln120_fu_462_p2 = (2'd0 - trunc_ln113_fu_362_p1);

assign tmp_12_fu_482_p3 = {{1'd0}, {trunc_ln113_fu_362_p1}};

assign tmp_13_fu_454_p3 = add_ln113_fu_356_p2[32'd33];

assign tmp_fu_400_p3 = add_ln113_3_fu_394_p2[32'd28];

assign tmp_s_fu_414_p4 = {{add_ln113_2_fu_388_p2[27:2]}};

assign trunc_ln113_1_fu_366_p1 = source1_val[28:0];

assign trunc_ln113_2_fu_374_p1 = source1_val[27:0];

assign trunc_ln113_fu_362_p1 = add_ln113_fu_356_p2[1:0];

assign trunc_ln127_fu_642_p1 = data_memory_q0[7:0];

assign trunc_ln138_fu_618_p1 = data_memory_q0[15:0];

assign trunc_ln148_fu_604_p1 = data_memory_q0[7:0];

assign trunc_ln159_fu_580_p1 = data_memory_q0[15:0];

assign xor_ln114_fu_408_p2 = (tmp_fu_400_p3 ^ 1'd1);

assign zext_ln113_1_fu_432_p1 = pos_3_fu_424_p3;

assign zext_ln113_fu_348_p1 = source1_val;

assign zext_ln127_fu_570_p1 = pos_5_fu_444_p4;

assign zext_ln129_fu_565_p1 = pos_5_fu_444_p4;

assign zext_ln131_fu_560_p1 = pos_5_fu_444_p4;

assign zext_ln133_fu_555_p1 = pos_5_fu_444_p4;

assign zext_ln138_fu_550_p1 = pos_5_fu_444_p4;

assign zext_ln140_fu_545_p1 = pos_5_fu_444_p4;

assign zext_ln144_fu_540_p1 = pos_5_fu_444_p4;

assign zext_ln148_1_fu_608_p1 = trunc_ln148_fu_604_p1;

assign zext_ln148_fu_535_p1 = pos_5_fu_444_p4;

assign zext_ln150_1_fu_599_p1 = grp_fu_334_p4;

assign zext_ln150_fu_530_p1 = pos_5_fu_444_p4;

assign zext_ln152_1_fu_594_p1 = grp_fu_324_p4;

assign zext_ln152_fu_525_p1 = pos_5_fu_444_p4;

assign zext_ln154_1_fu_589_p1 = grp_fu_314_p4;

assign zext_ln154_fu_520_p1 = pos_5_fu_444_p4;

assign zext_ln159_1_fu_584_p1 = trunc_ln159_fu_580_p1;

assign zext_ln159_fu_515_p1 = pos_5_fu_444_p4;

assign zext_ln161_1_fu_575_p1 = grp_fu_304_p4;

assign zext_ln161_fu_510_p1 = pos_5_fu_444_p4;

endmodule //processor_execute_load
