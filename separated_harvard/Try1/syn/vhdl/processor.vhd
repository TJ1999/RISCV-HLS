-- ==============================================================
-- Generated by Vitis HLS v2023.1.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity processor is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    instr_memory_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    instr_memory_ce0 : OUT STD_LOGIC;
    instr_memory_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    data_memory_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_memory_ce0 : OUT STD_LOGIC;
    data_memory_we0 : OUT STD_LOGIC;
    data_memory_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    data_memory_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    error : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of processor is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "processor_processor,hls_ip_2023_1_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100t-csg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.178000,HLS_SYN_LAT=4,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1635,HLS_SYN_LUT=3047,HLS_VERSION=2023_1_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (11 downto 0) := "000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (11 downto 0) := "000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (11 downto 0) := "000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (11 downto 0) := "000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (11 downto 0) := "001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (11 downto 0) := "010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (11 downto 0) := "100000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv7_67 : STD_LOGIC_VECTOR (6 downto 0) := "1100111";
    constant ap_const_lv7_6F : STD_LOGIC_VECTOR (6 downto 0) := "1101111";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv7_63 : STD_LOGIC_VECTOR (6 downto 0) := "1100011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv7_23 : STD_LOGIC_VECTOR (6 downto 0) := "0100011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv5_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv5_B : STD_LOGIC_VECTOR (4 downto 0) := "01011";
    constant ap_const_lv5_C : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_const_lv5_D : STD_LOGIC_VECTOR (4 downto 0) := "01101";
    constant ap_const_lv5_E : STD_LOGIC_VECTOR (4 downto 0) := "01110";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_11 : STD_LOGIC_VECTOR (4 downto 0) := "10001";
    constant ap_const_lv5_12 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_const_lv5_13 : STD_LOGIC_VECTOR (4 downto 0) := "10011";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv5_15 : STD_LOGIC_VECTOR (4 downto 0) := "10101";
    constant ap_const_lv5_16 : STD_LOGIC_VECTOR (4 downto 0) := "10110";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv5_1A : STD_LOGIC_VECTOR (4 downto 0) := "11010";
    constant ap_const_lv5_1B : STD_LOGIC_VECTOR (4 downto 0) := "11011";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv5_1D : STD_LOGIC_VECTOR (4 downto 0) := "11101";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_31FFF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000110001111111111111";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv7_3 : STD_LOGIC_VECTOR (6 downto 0) := "0000011";

    signal g_pc : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal g_error : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal p_ZL6g_xreg_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZL6g_xreg_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZL6g_xreg_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZL6g_xreg_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZL6g_xreg_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZL6g_xreg_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZL6g_xreg_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZL6g_xreg_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZL6g_xreg_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZL6g_xreg_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZL6g_xreg_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZL6g_xreg_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZL6g_xreg_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZL6g_xreg_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZL6g_xreg_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZL6g_xreg_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZL6g_xreg_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZL6g_xreg_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZL6g_xreg_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZL6g_xreg_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZL6g_xreg_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZL6g_xreg_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZL6g_xreg_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZL6g_xreg_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZL6g_xreg_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZL6g_xreg_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZL6g_xreg_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZL6g_xreg_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZL6g_xreg_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZL6g_xreg_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal p_ZL6g_xreg_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal old_pc_reg_1598 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal result_2_fu_565_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_2_reg_1614 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal op_code_fu_570_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal op_code_reg_1637 : STD_LOGIC_VECTOR (6 downto 0);
    signal funct3_fu_574_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal funct3_reg_1642 : STD_LOGIC_VECTOR (2 downto 0);
    signal funct7_reg_1648 : STD_LOGIC_VECTOR (6 downto 0);
    signal rd_reg_1653 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln40_fu_654_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln40_reg_1657 : STD_LOGIC_VECTOR (31 downto 0);
    signal imm_I_fu_658_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal imm_I_reg_1662 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln41_fu_668_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln41_reg_1668 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln42_fu_714_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln42_reg_1673 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_738_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_4_reg_1678 : STD_LOGIC_VECTOR (11 downto 0);
    signal imm_U_fu_756_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal imm_U_reg_1686 : STD_LOGIC_VECTOR (31 downto 0);
    signal source1_fu_908_p34 : STD_LOGIC_VECTOR (31 downto 0);
    signal source1_reg_1691 : STD_LOGIC_VECTOR (31 downto 0);
    signal source2_fu_978_p34 : STD_LOGIC_VECTOR (31 downto 0);
    signal source2_reg_1705 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_502_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln96_reg_1720 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal icmp_ln91_reg_1725 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_506_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln86_reg_1730 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln81_reg_1735 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_510_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln76_reg_1740 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln71_reg_1745 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln96_fu_1054_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal select_ln91_fu_1060_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln86_fu_1066_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln81_fu_1072_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln76_fu_1078_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln71_fu_1084_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln64_fu_1090_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal add_ln59_fu_1094_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_execute_load_fu_477_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal pos_3_fu_1190_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal pos_3_reg_1795 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal select_ln178_fu_1236_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln178_reg_1805 : STD_LOGIC_VECTOR (2 downto 0);
    signal data_memory_addr_6_reg_1812 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal data_memory_addr_5_reg_1817 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_memory_addr_4_reg_1822 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_memory_addr_3_reg_1827 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_memory_addr_2_reg_1832 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_memory_addr_1_reg_1837 : STD_LOGIC_VECTOR (15 downto 0);
    signal result_reg_1842 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal write_back_reg_1847 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_execute_load_fu_477_ap_start : STD_LOGIC;
    signal grp_execute_load_fu_477_ap_done : STD_LOGIC;
    signal grp_execute_load_fu_477_ap_idle : STD_LOGIC;
    signal grp_execute_load_fu_477_ap_ready : STD_LOGIC;
    signal grp_execute_load_fu_477_data_memory_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_execute_load_fu_477_data_memory_ce0 : STD_LOGIC;
    signal grp_execute_load_fu_477_g_error : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_execute_load_fu_477_g_error_ap_vld : STD_LOGIC;
    signal call_ret8_execute_arithm_fu_488_ap_ready : STD_LOGIC;
    signal call_ret8_execute_arithm_fu_488_g_error : STD_LOGIC_VECTOR (0 downto 0);
    signal call_ret8_execute_arithm_fu_488_g_error_ap_vld : STD_LOGIC;
    signal call_ret8_execute_arithm_fu_488_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret8_execute_arithm_fu_488_ap_return_1 : STD_LOGIC_VECTOR (0 downto 0);
    signal g_pc_new_7_reg_371 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_phi_mux_write_back_1_phi_fu_403_p22 : STD_LOGIC_VECTOR (0 downto 0);
    signal write_back_1_reg_398 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_19_reg_437 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_g_pc_new_8_phi_fu_467_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal grp_execute_load_fu_477_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal zext_ln28_fu_560_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln202_fu_1262_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln198_fu_1273_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln196_fu_1277_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln191_fu_1281_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln189_fu_1285_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln187_fu_1289_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln185_fu_1293_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln182_fu_1250_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln26_fu_548_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_1300_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_fu_1316_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_fu_1332_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_1348_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_1364_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_1380_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln26_fu_522_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln26_fu_526_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln26_1_fu_542_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lshr_ln_fu_532_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1_fu_632_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_624_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_614_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp4_fu_604_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal imm_B_fu_640_p6 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_5_fu_690_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_fu_682_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_672_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal imm_J_fu_700_p6 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_7_fu_728_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_6_fu_718_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_8_fu_746_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal source1_fu_908_p33 : STD_LOGIC_VECTOR (4 downto 0);
    signal source2_fu_978_p33 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_514_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln171_fu_1098_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal sext_ln171_fu_1101_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal add_ln171_fu_1107_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal sext_ln171_1_fu_1104_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln171_2_fu_1126_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln171_3_fu_1123_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal trunc_ln171_1_fu_1120_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal sext_ln171_2_fu_1117_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal add_ln171_3_fu_1140_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_9_fu_1146_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln171_2_fu_1134_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_10_fu_1160_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal pos_1_fu_1170_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal zext_ln171_1_fu_1178_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal pos_fu_1129_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal pos_2_fu_1182_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln171_fu_1113_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln178_fu_1208_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_and_t_fu_1214_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_11_fu_1200_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln178_1_fu_1222_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_12_fu_1228_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln179_fu_1244_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln172_fu_1154_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln198_fu_1297_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln196_fu_1313_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln191_fu_1329_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln189_fu_1345_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln187_fu_1361_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln185_fu_1377_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component processor_execute_load IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        funct3_val : IN STD_LOGIC_VECTOR (2 downto 0);
        imm_I_val : IN STD_LOGIC_VECTOR (11 downto 0);
        data_memory_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        data_memory_ce0 : OUT STD_LOGIC;
        data_memory_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        source1_val : IN STD_LOGIC_VECTOR (31 downto 0);
        g_error : OUT STD_LOGIC_VECTOR (0 downto 0);
        g_error_ap_vld : OUT STD_LOGIC;
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component processor_execute_arithm IS
    port (
        ap_ready : OUT STD_LOGIC;
        op_code_val : IN STD_LOGIC_VECTOR (6 downto 0);
        funct3_val : IN STD_LOGIC_VECTOR (2 downto 0);
        funct7_val : IN STD_LOGIC_VECTOR (6 downto 0);
        source1_val : IN STD_LOGIC_VECTOR (31 downto 0);
        source2_val : IN STD_LOGIC_VECTOR (31 downto 0);
        imm_I_val : IN STD_LOGIC_VECTOR (11 downto 0);
        imm_U_val : IN STD_LOGIC_VECTOR (31 downto 0);
        old_pc_val : IN STD_LOGIC_VECTOR (31 downto 0);
        g_error : OUT STD_LOGIC_VECTOR (0 downto 0);
        g_error_ap_vld : OUT STD_LOGIC;
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component processor_mux_32_5_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        din17_WIDTH : INTEGER;
        din18_WIDTH : INTEGER;
        din19_WIDTH : INTEGER;
        din20_WIDTH : INTEGER;
        din21_WIDTH : INTEGER;
        din22_WIDTH : INTEGER;
        din23_WIDTH : INTEGER;
        din24_WIDTH : INTEGER;
        din25_WIDTH : INTEGER;
        din26_WIDTH : INTEGER;
        din27_WIDTH : INTEGER;
        din28_WIDTH : INTEGER;
        din29_WIDTH : INTEGER;
        din30_WIDTH : INTEGER;
        din31_WIDTH : INTEGER;
        din32_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        din10 : IN STD_LOGIC_VECTOR (31 downto 0);
        din11 : IN STD_LOGIC_VECTOR (31 downto 0);
        din12 : IN STD_LOGIC_VECTOR (31 downto 0);
        din13 : IN STD_LOGIC_VECTOR (31 downto 0);
        din14 : IN STD_LOGIC_VECTOR (31 downto 0);
        din15 : IN STD_LOGIC_VECTOR (31 downto 0);
        din16 : IN STD_LOGIC_VECTOR (31 downto 0);
        din17 : IN STD_LOGIC_VECTOR (31 downto 0);
        din18 : IN STD_LOGIC_VECTOR (31 downto 0);
        din19 : IN STD_LOGIC_VECTOR (31 downto 0);
        din20 : IN STD_LOGIC_VECTOR (31 downto 0);
        din21 : IN STD_LOGIC_VECTOR (31 downto 0);
        din22 : IN STD_LOGIC_VECTOR (31 downto 0);
        din23 : IN STD_LOGIC_VECTOR (31 downto 0);
        din24 : IN STD_LOGIC_VECTOR (31 downto 0);
        din25 : IN STD_LOGIC_VECTOR (31 downto 0);
        din26 : IN STD_LOGIC_VECTOR (31 downto 0);
        din27 : IN STD_LOGIC_VECTOR (31 downto 0);
        din28 : IN STD_LOGIC_VECTOR (31 downto 0);
        din29 : IN STD_LOGIC_VECTOR (31 downto 0);
        din30 : IN STD_LOGIC_VECTOR (31 downto 0);
        din31 : IN STD_LOGIC_VECTOR (31 downto 0);
        din32 : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_execute_load_fu_477 : component processor_execute_load
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_execute_load_fu_477_ap_start,
        ap_done => grp_execute_load_fu_477_ap_done,
        ap_idle => grp_execute_load_fu_477_ap_idle,
        ap_ready => grp_execute_load_fu_477_ap_ready,
        funct3_val => funct3_reg_1642,
        imm_I_val => imm_I_reg_1662,
        data_memory_address0 => grp_execute_load_fu_477_data_memory_address0,
        data_memory_ce0 => grp_execute_load_fu_477_data_memory_ce0,
        data_memory_q0 => data_memory_q0,
        source1_val => source1_reg_1691,
        g_error => grp_execute_load_fu_477_g_error,
        g_error_ap_vld => grp_execute_load_fu_477_g_error_ap_vld,
        ap_return => grp_execute_load_fu_477_ap_return);

    call_ret8_execute_arithm_fu_488 : component processor_execute_arithm
    port map (
        ap_ready => call_ret8_execute_arithm_fu_488_ap_ready,
        op_code_val => op_code_reg_1637,
        funct3_val => funct3_reg_1642,
        funct7_val => funct7_reg_1648,
        source1_val => source1_reg_1691,
        source2_val => source2_reg_1705,
        imm_I_val => imm_I_reg_1662,
        imm_U_val => imm_U_reg_1686,
        old_pc_val => old_pc_reg_1598,
        g_error => call_ret8_execute_arithm_fu_488_g_error,
        g_error_ap_vld => call_ret8_execute_arithm_fu_488_g_error_ap_vld,
        ap_return_0 => call_ret8_execute_arithm_fu_488_ap_return_0,
        ap_return_1 => call_ret8_execute_arithm_fu_488_ap_return_1);

    mux_32_5_32_1_1_U15 : component processor_mux_32_5_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 32,
        din24_WIDTH => 32,
        din25_WIDTH => 32,
        din26_WIDTH => 32,
        din27_WIDTH => 32,
        din28_WIDTH => 32,
        din29_WIDTH => 32,
        din30_WIDTH => 32,
        din31_WIDTH => 32,
        din32_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_0,
        din1 => p_ZL6g_xreg_1,
        din2 => p_ZL6g_xreg_2,
        din3 => p_ZL6g_xreg_3,
        din4 => p_ZL6g_xreg_4,
        din5 => p_ZL6g_xreg_5,
        din6 => p_ZL6g_xreg_6,
        din7 => p_ZL6g_xreg_7,
        din8 => p_ZL6g_xreg_8,
        din9 => p_ZL6g_xreg_9,
        din10 => p_ZL6g_xreg_10,
        din11 => p_ZL6g_xreg_11,
        din12 => p_ZL6g_xreg_12,
        din13 => p_ZL6g_xreg_13,
        din14 => p_ZL6g_xreg_14,
        din15 => p_ZL6g_xreg_15,
        din16 => p_ZL6g_xreg_16,
        din17 => p_ZL6g_xreg_17,
        din18 => p_ZL6g_xreg_18,
        din19 => p_ZL6g_xreg_19,
        din20 => p_ZL6g_xreg_20,
        din21 => p_ZL6g_xreg_21,
        din22 => p_ZL6g_xreg_22,
        din23 => p_ZL6g_xreg_23,
        din24 => p_ZL6g_xreg_24,
        din25 => p_ZL6g_xreg_25,
        din26 => p_ZL6g_xreg_26,
        din27 => p_ZL6g_xreg_27,
        din28 => p_ZL6g_xreg_28,
        din29 => p_ZL6g_xreg_29,
        din30 => p_ZL6g_xreg_30,
        din31 => p_ZL6g_xreg_31,
        din32 => source1_fu_908_p33,
        dout => source1_fu_908_p34);

    mux_32_5_32_1_1_U16 : component processor_mux_32_5_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 32,
        din24_WIDTH => 32,
        din25_WIDTH => 32,
        din26_WIDTH => 32,
        din27_WIDTH => 32,
        din28_WIDTH => 32,
        din29_WIDTH => 32,
        din30_WIDTH => 32,
        din31_WIDTH => 32,
        din32_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_0,
        din1 => p_ZL6g_xreg_1,
        din2 => p_ZL6g_xreg_2,
        din3 => p_ZL6g_xreg_3,
        din4 => p_ZL6g_xreg_4,
        din5 => p_ZL6g_xreg_5,
        din6 => p_ZL6g_xreg_6,
        din7 => p_ZL6g_xreg_7,
        din8 => p_ZL6g_xreg_8,
        din9 => p_ZL6g_xreg_9,
        din10 => p_ZL6g_xreg_10,
        din11 => p_ZL6g_xreg_11,
        din12 => p_ZL6g_xreg_12,
        din13 => p_ZL6g_xreg_13,
        din14 => p_ZL6g_xreg_14,
        din15 => p_ZL6g_xreg_15,
        din16 => p_ZL6g_xreg_16,
        din17 => p_ZL6g_xreg_17,
        din18 => p_ZL6g_xreg_18,
        din19 => p_ZL6g_xreg_19,
        din20 => p_ZL6g_xreg_20,
        din21 => p_ZL6g_xreg_21,
        din22 => p_ZL6g_xreg_22,
        din23 => p_ZL6g_xreg_23,
        din24 => p_ZL6g_xreg_24,
        din25 => p_ZL6g_xreg_25,
        din26 => p_ZL6g_xreg_26,
        din27 => p_ZL6g_xreg_27,
        din28 => p_ZL6g_xreg_28,
        din29 => p_ZL6g_xreg_29,
        din30 => p_ZL6g_xreg_30,
        din31 => p_ZL6g_xreg_31,
        din32 => source2_fu_978_p33,
        dout => source2_fu_978_p34);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    g_pc_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                g_pc <= ap_const_lv32_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                    g_pc <= ap_phi_mux_g_pc_new_8_phi_fu_467_p6;
                end if; 
            end if;
        end if;
    end process;


    grp_execute_load_fu_477_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_execute_load_fu_477_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    grp_execute_load_fu_477_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_execute_load_fu_477_ap_ready = ap_const_logic_1)) then 
                    grp_execute_load_fu_477_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    g_error_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state2) and (((funct3_fu_574_p4 = ap_const_lv3_2) and (op_code_fu_570_p1 = ap_const_lv7_63)) or ((funct3_fu_574_p4 = ap_const_lv3_3) and (op_code_fu_570_p1 = ap_const_lv7_63)))) or ((or_ln26_fu_548_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1)) or (not((funct3_reg_1642 = ap_const_lv3_2)) and not((funct3_reg_1642 = ap_const_lv3_0)) and not((funct3_reg_1642 = ap_const_lv3_1)) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((or_ln182_fu_1250_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
                g_error <= ap_const_lv1_1;
            elsif (((call_ret8_execute_arithm_fu_488_g_error_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                g_error <= call_ret8_execute_arithm_fu_488_g_error;
            elsif (((grp_execute_load_fu_477_g_error_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                g_error <= grp_execute_load_fu_477_g_error;
            end if; 
        end if;
    end process;

    g_pc_new_7_reg_371_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((funct3_reg_1642 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                g_pc_new_7_reg_371 <= select_ln71_fu_1084_p3;
            elsif (((funct3_reg_1642 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                g_pc_new_7_reg_371 <= select_ln76_fu_1078_p3;
            elsif (((funct3_reg_1642 = ap_const_lv3_4) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                g_pc_new_7_reg_371 <= select_ln81_fu_1072_p3;
            elsif (((funct3_reg_1642 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                g_pc_new_7_reg_371 <= select_ln86_fu_1066_p3;
            elsif (((funct3_reg_1642 = ap_const_lv3_6) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                g_pc_new_7_reg_371 <= select_ln91_fu_1060_p3;
            elsif (((funct3_reg_1642 = ap_const_lv3_7) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                g_pc_new_7_reg_371 <= select_ln96_fu_1054_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (((funct3_fu_574_p4 = ap_const_lv3_2) and (op_code_fu_570_p1 = ap_const_lv7_63)) or ((funct3_fu_574_p4 = ap_const_lv3_3) and (op_code_fu_570_p1 = ap_const_lv7_63))))) then 
                g_pc_new_7_reg_371 <= result_2_fu_565_p2;
            elsif (((op_code_reg_1637 = ap_const_lv7_6F) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                g_pc_new_7_reg_371 <= add_ln59_fu_1094_p2;
            elsif (((op_code_reg_1637 = ap_const_lv7_67) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                g_pc_new_7_reg_371 <= add_ln64_fu_1090_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or ((grp_execute_load_fu_477_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
                g_pc_new_7_reg_371 <= result_2_reg_1614;
            end if; 
        end if;
    end process;

    result_19_reg_437_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (((funct3_fu_574_p4 = ap_const_lv3_2) and (op_code_fu_570_p1 = ap_const_lv7_63)) or ((funct3_fu_574_p4 = ap_const_lv3_3) and (op_code_fu_570_p1 = ap_const_lv7_63))))) then 
                result_19_reg_437 <= result_2_fu_565_p2;
            elsif (((grp_execute_load_fu_477_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                result_19_reg_437 <= grp_execute_load_fu_477_ap_return;
            elsif ((((op_code_reg_1637 = ap_const_lv7_6F) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((op_code_reg_1637 = ap_const_lv7_67) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((funct3_reg_1642 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((funct3_reg_1642 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((funct3_reg_1642 = ap_const_lv3_4) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((funct3_reg_1642 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((funct3_reg_1642 = ap_const_lv3_6) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((funct3_reg_1642 = ap_const_lv3_7) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
                result_19_reg_437 <= result_2_reg_1614;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                result_19_reg_437 <= result_reg_1842;
            end if; 
        end if;
    end process;

    write_back_1_reg_398_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state2) and (((funct3_fu_574_p4 = ap_const_lv3_2) and (op_code_fu_570_p1 = ap_const_lv7_63)) or ((funct3_fu_574_p4 = ap_const_lv3_3) and (op_code_fu_570_p1 = ap_const_lv7_63)))) or ((funct3_reg_1642 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((funct3_reg_1642 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((funct3_reg_1642 = ap_const_lv3_4) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((funct3_reg_1642 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((funct3_reg_1642 = ap_const_lv3_6) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((funct3_reg_1642 = ap_const_lv3_7) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
                write_back_1_reg_398 <= ap_const_lv1_0;
            elsif ((((grp_execute_load_fu_477_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((op_code_reg_1637 = ap_const_lv7_6F) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((op_code_reg_1637 = ap_const_lv7_67) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
                write_back_1_reg_398 <= ap_const_lv1_1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                write_back_1_reg_398 <= write_back_reg_1847;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((funct3_reg_1642 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state9) and (select_ln178_reg_1805 = ap_const_lv3_0))) then
                data_memory_addr_1_reg_1837 <= zext_ln185_fu_1293_p1(16 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((funct3_reg_1642 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state9) and (select_ln178_reg_1805 = ap_const_lv3_1))) then
                data_memory_addr_2_reg_1832 <= zext_ln187_fu_1289_p1(16 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((funct3_reg_1642 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state9) and (select_ln178_reg_1805 = ap_const_lv3_2))) then
                data_memory_addr_3_reg_1827 <= zext_ln189_fu_1285_p1(16 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((funct3_reg_1642 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state9) and (select_ln178_reg_1805 = ap_const_lv3_3))) then
                data_memory_addr_4_reg_1822 <= zext_ln191_fu_1281_p1(16 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((funct3_reg_1642 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state9) and (select_ln178_reg_1805 = ap_const_lv3_0))) then
                data_memory_addr_5_reg_1817 <= zext_ln196_fu_1277_p1(16 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((funct3_reg_1642 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state9) and (select_ln178_reg_1805 = ap_const_lv3_2))) then
                data_memory_addr_6_reg_1812 <= zext_ln198_fu_1273_p1(16 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                funct3_reg_1642 <= instr_memory_q0(14 downto 12);
                funct7_reg_1648 <= instr_memory_q0(31 downto 25);
                imm_I_reg_1662 <= instr_memory_q0(31 downto 20);
                    imm_U_reg_1686(31 downto 12) <= imm_U_fu_756_p3(31 downto 12);
                op_code_reg_1637 <= op_code_fu_570_p1;
                rd_reg_1653 <= instr_memory_q0(11 downto 7);
                result_2_reg_1614 <= result_2_fu_565_p2;
                    sext_ln40_reg_1657(31 downto 1) <= sext_ln40_fu_654_p1(31 downto 1);
                sext_ln41_reg_1668 <= sext_ln41_fu_668_p1;
                    sext_ln42_reg_1673(31 downto 1) <= sext_ln42_fu_714_p1(31 downto 1);
                source1_reg_1691 <= source1_fu_908_p34;
                source2_reg_1705 <= source2_fu_978_p34;
                tmp_4_reg_1678 <= tmp_4_fu_738_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((funct3_reg_1642 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                icmp_ln71_reg_1745 <= grp_fu_510_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((funct3_reg_1642 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                icmp_ln76_reg_1740 <= grp_fu_510_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((funct3_reg_1642 = ap_const_lv3_4) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                icmp_ln81_reg_1735 <= grp_fu_506_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((funct3_reg_1642 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                icmp_ln86_reg_1730 <= grp_fu_506_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((funct3_reg_1642 = ap_const_lv3_6) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                icmp_ln91_reg_1725 <= grp_fu_502_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((funct3_reg_1642 = ap_const_lv3_7) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                icmp_ln96_reg_1720 <= grp_fu_502_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                old_pc_reg_1598 <= g_pc;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((op_code_reg_1637 = ap_const_lv7_23)) and (rd_reg_1653 = ap_const_lv5_1) and (ap_phi_mux_write_back_1_phi_fu_403_p22 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                p_ZL6g_xreg_1 <= result_19_reg_437;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((op_code_reg_1637 = ap_const_lv7_23)) and (rd_reg_1653 = ap_const_lv5_A) and (ap_phi_mux_write_back_1_phi_fu_403_p22 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                p_ZL6g_xreg_10 <= result_19_reg_437;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((op_code_reg_1637 = ap_const_lv7_23)) and (rd_reg_1653 = ap_const_lv5_B) and (ap_phi_mux_write_back_1_phi_fu_403_p22 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                p_ZL6g_xreg_11 <= result_19_reg_437;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((op_code_reg_1637 = ap_const_lv7_23)) and (rd_reg_1653 = ap_const_lv5_C) and (ap_phi_mux_write_back_1_phi_fu_403_p22 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                p_ZL6g_xreg_12 <= result_19_reg_437;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((op_code_reg_1637 = ap_const_lv7_23)) and (rd_reg_1653 = ap_const_lv5_D) and (ap_phi_mux_write_back_1_phi_fu_403_p22 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                p_ZL6g_xreg_13 <= result_19_reg_437;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((op_code_reg_1637 = ap_const_lv7_23)) and (rd_reg_1653 = ap_const_lv5_E) and (ap_phi_mux_write_back_1_phi_fu_403_p22 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                p_ZL6g_xreg_14 <= result_19_reg_437;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((op_code_reg_1637 = ap_const_lv7_23)) and (rd_reg_1653 = ap_const_lv5_F) and (ap_phi_mux_write_back_1_phi_fu_403_p22 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                p_ZL6g_xreg_15 <= result_19_reg_437;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((op_code_reg_1637 = ap_const_lv7_23)) and (rd_reg_1653 = ap_const_lv5_10) and (ap_phi_mux_write_back_1_phi_fu_403_p22 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                p_ZL6g_xreg_16 <= result_19_reg_437;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((op_code_reg_1637 = ap_const_lv7_23)) and (rd_reg_1653 = ap_const_lv5_11) and (ap_phi_mux_write_back_1_phi_fu_403_p22 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                p_ZL6g_xreg_17 <= result_19_reg_437;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((op_code_reg_1637 = ap_const_lv7_23)) and (rd_reg_1653 = ap_const_lv5_12) and (ap_phi_mux_write_back_1_phi_fu_403_p22 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                p_ZL6g_xreg_18 <= result_19_reg_437;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((op_code_reg_1637 = ap_const_lv7_23)) and (rd_reg_1653 = ap_const_lv5_13) and (ap_phi_mux_write_back_1_phi_fu_403_p22 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                p_ZL6g_xreg_19 <= result_19_reg_437;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((op_code_reg_1637 = ap_const_lv7_23)) and (rd_reg_1653 = ap_const_lv5_2) and (ap_phi_mux_write_back_1_phi_fu_403_p22 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                p_ZL6g_xreg_2 <= result_19_reg_437;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((op_code_reg_1637 = ap_const_lv7_23)) and (rd_reg_1653 = ap_const_lv5_14) and (ap_phi_mux_write_back_1_phi_fu_403_p22 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                p_ZL6g_xreg_20 <= result_19_reg_437;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((op_code_reg_1637 = ap_const_lv7_23)) and (rd_reg_1653 = ap_const_lv5_15) and (ap_phi_mux_write_back_1_phi_fu_403_p22 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                p_ZL6g_xreg_21 <= result_19_reg_437;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((op_code_reg_1637 = ap_const_lv7_23)) and (rd_reg_1653 = ap_const_lv5_16) and (ap_phi_mux_write_back_1_phi_fu_403_p22 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                p_ZL6g_xreg_22 <= result_19_reg_437;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((op_code_reg_1637 = ap_const_lv7_23)) and (rd_reg_1653 = ap_const_lv5_17) and (ap_phi_mux_write_back_1_phi_fu_403_p22 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                p_ZL6g_xreg_23 <= result_19_reg_437;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((op_code_reg_1637 = ap_const_lv7_23)) and (rd_reg_1653 = ap_const_lv5_18) and (ap_phi_mux_write_back_1_phi_fu_403_p22 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                p_ZL6g_xreg_24 <= result_19_reg_437;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((op_code_reg_1637 = ap_const_lv7_23)) and (rd_reg_1653 = ap_const_lv5_19) and (ap_phi_mux_write_back_1_phi_fu_403_p22 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                p_ZL6g_xreg_25 <= result_19_reg_437;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((op_code_reg_1637 = ap_const_lv7_23)) and (rd_reg_1653 = ap_const_lv5_1A) and (ap_phi_mux_write_back_1_phi_fu_403_p22 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                p_ZL6g_xreg_26 <= result_19_reg_437;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((op_code_reg_1637 = ap_const_lv7_23)) and (rd_reg_1653 = ap_const_lv5_1B) and (ap_phi_mux_write_back_1_phi_fu_403_p22 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                p_ZL6g_xreg_27 <= result_19_reg_437;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((op_code_reg_1637 = ap_const_lv7_23)) and (rd_reg_1653 = ap_const_lv5_1C) and (ap_phi_mux_write_back_1_phi_fu_403_p22 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                p_ZL6g_xreg_28 <= result_19_reg_437;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((op_code_reg_1637 = ap_const_lv7_23)) and (rd_reg_1653 = ap_const_lv5_1D) and (ap_phi_mux_write_back_1_phi_fu_403_p22 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                p_ZL6g_xreg_29 <= result_19_reg_437;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((op_code_reg_1637 = ap_const_lv7_23)) and (rd_reg_1653 = ap_const_lv5_3) and (ap_phi_mux_write_back_1_phi_fu_403_p22 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                p_ZL6g_xreg_3 <= result_19_reg_437;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((op_code_reg_1637 = ap_const_lv7_23)) and (rd_reg_1653 = ap_const_lv5_1E) and (ap_phi_mux_write_back_1_phi_fu_403_p22 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                p_ZL6g_xreg_30 <= result_19_reg_437;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((op_code_reg_1637 = ap_const_lv7_23)) and (rd_reg_1653 = ap_const_lv5_1F) and (ap_phi_mux_write_back_1_phi_fu_403_p22 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                p_ZL6g_xreg_31 <= result_19_reg_437;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((op_code_reg_1637 = ap_const_lv7_23)) and (rd_reg_1653 = ap_const_lv5_4) and (ap_phi_mux_write_back_1_phi_fu_403_p22 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                p_ZL6g_xreg_4 <= result_19_reg_437;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((op_code_reg_1637 = ap_const_lv7_23)) and (rd_reg_1653 = ap_const_lv5_5) and (ap_phi_mux_write_back_1_phi_fu_403_p22 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                p_ZL6g_xreg_5 <= result_19_reg_437;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((op_code_reg_1637 = ap_const_lv7_23)) and (rd_reg_1653 = ap_const_lv5_6) and (ap_phi_mux_write_back_1_phi_fu_403_p22 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                p_ZL6g_xreg_6 <= result_19_reg_437;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((op_code_reg_1637 = ap_const_lv7_23)) and (rd_reg_1653 = ap_const_lv5_7) and (ap_phi_mux_write_back_1_phi_fu_403_p22 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                p_ZL6g_xreg_7 <= result_19_reg_437;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((op_code_reg_1637 = ap_const_lv7_23)) and (rd_reg_1653 = ap_const_lv5_8) and (ap_phi_mux_write_back_1_phi_fu_403_p22 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                p_ZL6g_xreg_8 <= result_19_reg_437;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((op_code_reg_1637 = ap_const_lv7_23)) and (rd_reg_1653 = ap_const_lv5_9) and (ap_phi_mux_write_back_1_phi_fu_403_p22 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                p_ZL6g_xreg_9 <= result_19_reg_437;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                pos_3_reg_1795 <= pos_2_fu_1182_p3(17 downto 2);
                select_ln178_reg_1805 <= select_ln178_fu_1236_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                result_reg_1842 <= call_ret8_execute_arithm_fu_488_ap_return_0;
                write_back_reg_1847 <= call_ret8_execute_arithm_fu_488_ap_return_1;
            end if;
        end if;
    end process;
    sext_ln40_reg_1657(0) <= '0';
    sext_ln42_reg_1673(0) <= '0';
    imm_U_reg_1686(11 downto 0) <= "000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state2, op_code_fu_570_p1, funct3_fu_574_p4, funct3_reg_1642, ap_CS_fsm_state7, ap_CS_fsm_state8, grp_execute_load_fu_477_ap_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (((funct3_fu_574_p4 = ap_const_lv3_2) and (op_code_fu_570_p1 = ap_const_lv7_63)) or ((funct3_fu_574_p4 = ap_const_lv3_3) and (op_code_fu_570_p1 = ap_const_lv7_63))))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                elsif ((not((funct3_fu_574_p4 = ap_const_lv3_2)) and not((funct3_fu_574_p4 = ap_const_lv3_3)) and (op_code_fu_570_p1 = ap_const_lv7_63) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                elsif ((not((op_code_fu_570_p1 = ap_const_lv7_63)) and not((op_code_fu_570_p1 = ap_const_lv7_23)) and not((op_code_fu_570_p1 = ap_const_lv7_3)) and not((op_code_fu_570_p1 = ap_const_lv7_6F)) and not((op_code_fu_570_p1 = ap_const_lv7_67)) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                elsif (((op_code_fu_570_p1 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                elsif (((op_code_fu_570_p1 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((grp_execute_load_fu_477_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if ((not((funct3_reg_1642 = ap_const_lv3_0)) and not((funct3_reg_1642 = ap_const_lv3_1)) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXX";
        end case;
    end process;
    add_ln171_2_fu_1134_p2 <= std_logic_vector(unsigned(trunc_ln171_2_fu_1126_p1) + unsigned(sext_ln171_3_fu_1123_p1));
    add_ln171_3_fu_1140_p2 <= std_logic_vector(unsigned(trunc_ln171_1_fu_1120_p1) + unsigned(sext_ln171_2_fu_1117_p1));
    add_ln171_fu_1107_p2 <= std_logic_vector(unsigned(zext_ln171_fu_1098_p1) + unsigned(sext_ln171_fu_1101_p1));
    add_ln59_fu_1094_p2 <= std_logic_vector(unsigned(old_pc_reg_1598) + unsigned(sext_ln42_reg_1673));
    add_ln64_fu_1090_p2 <= std_logic_vector(unsigned(source1_reg_1691) + unsigned(sext_ln41_reg_1668));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state1_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;

    ap_ST_fsm_state7_blk_assign_proc : process(grp_execute_load_fu_477_ap_done)
    begin
        if ((grp_execute_load_fu_477_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_phi_mux_g_pc_new_8_phi_fu_467_p6_assign_proc : process(result_2_reg_1614, op_code_reg_1637, g_pc_new_7_reg_371, ap_phi_mux_write_back_1_phi_fu_403_p22, ap_CS_fsm_state10)
    begin
        if (((op_code_reg_1637 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            ap_phi_mux_g_pc_new_8_phi_fu_467_p6 <= result_2_reg_1614;
        elsif (((not((op_code_reg_1637 = ap_const_lv7_23)) and (ap_phi_mux_write_back_1_phi_fu_403_p22 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10)) or (not((op_code_reg_1637 = ap_const_lv7_23)) and (ap_phi_mux_write_back_1_phi_fu_403_p22 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            ap_phi_mux_g_pc_new_8_phi_fu_467_p6 <= g_pc_new_7_reg_371;
        else 
            ap_phi_mux_g_pc_new_8_phi_fu_467_p6 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    ap_phi_mux_write_back_1_phi_fu_403_p22 <= write_back_1_reg_398;

    data_memory_address0_assign_proc : process(op_code_reg_1637, funct3_reg_1642, ap_CS_fsm_state7, ap_CS_fsm_state8, select_ln178_reg_1805, data_memory_addr_6_reg_1812, ap_CS_fsm_state9, data_memory_addr_5_reg_1817, data_memory_addr_4_reg_1822, data_memory_addr_3_reg_1827, data_memory_addr_2_reg_1832, data_memory_addr_1_reg_1837, grp_execute_load_fu_477_data_memory_address0, ap_CS_fsm_state10, zext_ln202_fu_1262_p1, zext_ln198_fu_1273_p1, zext_ln196_fu_1277_p1, zext_ln191_fu_1281_p1, zext_ln189_fu_1285_p1, zext_ln187_fu_1289_p1, zext_ln185_fu_1293_p1)
    begin
        if (((funct3_reg_1642 = ap_const_lv3_0) and (op_code_reg_1637 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state10) and (select_ln178_reg_1805 = ap_const_lv3_0))) then 
            data_memory_address0 <= data_memory_addr_1_reg_1837;
        elsif (((funct3_reg_1642 = ap_const_lv3_0) and (op_code_reg_1637 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state10) and (select_ln178_reg_1805 = ap_const_lv3_1))) then 
            data_memory_address0 <= data_memory_addr_2_reg_1832;
        elsif (((funct3_reg_1642 = ap_const_lv3_0) and (op_code_reg_1637 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state10) and (select_ln178_reg_1805 = ap_const_lv3_2))) then 
            data_memory_address0 <= data_memory_addr_3_reg_1827;
        elsif (((funct3_reg_1642 = ap_const_lv3_0) and (op_code_reg_1637 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state10) and (select_ln178_reg_1805 = ap_const_lv3_3))) then 
            data_memory_address0 <= data_memory_addr_4_reg_1822;
        elsif (((funct3_reg_1642 = ap_const_lv3_1) and (op_code_reg_1637 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state10) and (select_ln178_reg_1805 = ap_const_lv3_0))) then 
            data_memory_address0 <= data_memory_addr_5_reg_1817;
        elsif (((funct3_reg_1642 = ap_const_lv3_1) and (op_code_reg_1637 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state10) and (select_ln178_reg_1805 = ap_const_lv3_2))) then 
            data_memory_address0 <= data_memory_addr_6_reg_1812;
        elsif (((funct3_reg_1642 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state9) and (select_ln178_reg_1805 = ap_const_lv3_0))) then 
            data_memory_address0 <= zext_ln185_fu_1293_p1(16 - 1 downto 0);
        elsif (((funct3_reg_1642 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state9) and (select_ln178_reg_1805 = ap_const_lv3_1))) then 
            data_memory_address0 <= zext_ln187_fu_1289_p1(16 - 1 downto 0);
        elsif (((funct3_reg_1642 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state9) and (select_ln178_reg_1805 = ap_const_lv3_2))) then 
            data_memory_address0 <= zext_ln189_fu_1285_p1(16 - 1 downto 0);
        elsif (((funct3_reg_1642 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state9) and (select_ln178_reg_1805 = ap_const_lv3_3))) then 
            data_memory_address0 <= zext_ln191_fu_1281_p1(16 - 1 downto 0);
        elsif (((funct3_reg_1642 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state9) and (select_ln178_reg_1805 = ap_const_lv3_0))) then 
            data_memory_address0 <= zext_ln196_fu_1277_p1(16 - 1 downto 0);
        elsif (((funct3_reg_1642 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state9) and (select_ln178_reg_1805 = ap_const_lv3_2))) then 
            data_memory_address0 <= zext_ln198_fu_1273_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            data_memory_address0 <= zext_ln202_fu_1262_p1(16 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            data_memory_address0 <= grp_execute_load_fu_477_data_memory_address0;
        else 
            data_memory_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    data_memory_ce0_assign_proc : process(op_code_reg_1637, funct3_reg_1642, ap_CS_fsm_state7, ap_CS_fsm_state8, select_ln178_reg_1805, ap_CS_fsm_state9, grp_execute_load_fu_477_data_memory_ce0, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or ((funct3_reg_1642 = ap_const_lv3_0) and (op_code_reg_1637 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state10) and (select_ln178_reg_1805 = ap_const_lv3_1)) or ((funct3_reg_1642 = ap_const_lv3_0) and (op_code_reg_1637 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state10) and (select_ln178_reg_1805 = ap_const_lv3_3)) or ((funct3_reg_1642 = ap_const_lv3_0) and (op_code_reg_1637 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state10) and (select_ln178_reg_1805 = ap_const_lv3_0)) or ((funct3_reg_1642 = ap_const_lv3_0) and (op_code_reg_1637 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state10) and (select_ln178_reg_1805 = ap_const_lv3_2)) or ((funct3_reg_1642 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state9) and (select_ln178_reg_1805 = ap_const_lv3_1)) or ((funct3_reg_1642 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state9) and (select_ln178_reg_1805 = ap_const_lv3_3)) or ((funct3_reg_1642 = ap_const_lv3_0) and (ap_const_logic_1 
    = ap_CS_fsm_state9) and (select_ln178_reg_1805 = ap_const_lv3_0)) or ((funct3_reg_1642 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state9) and (select_ln178_reg_1805 = ap_const_lv3_2)) or ((funct3_reg_1642 = ap_const_lv3_1) and (op_code_reg_1637 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state10) and (select_ln178_reg_1805 = ap_const_lv3_0)) or ((funct3_reg_1642 = ap_const_lv3_1) and (op_code_reg_1637 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state10) and (select_ln178_reg_1805 = ap_const_lv3_2)) or ((funct3_reg_1642 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state9) and (select_ln178_reg_1805 = ap_const_lv3_0)) or ((funct3_reg_1642 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state9) and (select_ln178_reg_1805 = ap_const_lv3_2)))) then 
            data_memory_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            data_memory_ce0 <= grp_execute_load_fu_477_data_memory_ce0;
        else 
            data_memory_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    data_memory_d0_assign_proc : process(op_code_reg_1637, funct3_reg_1642, source2_reg_1705, ap_CS_fsm_state8, select_ln178_reg_1805, ap_CS_fsm_state10, tmp_18_fu_1300_p5, tmp_17_fu_1316_p5, tmp_16_fu_1332_p5, tmp_15_fu_1348_p5, tmp_14_fu_1364_p5, tmp_13_fu_1380_p5)
    begin
        if (((funct3_reg_1642 = ap_const_lv3_0) and (op_code_reg_1637 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state10) and (select_ln178_reg_1805 = ap_const_lv3_0))) then 
            data_memory_d0 <= tmp_13_fu_1380_p5;
        elsif (((funct3_reg_1642 = ap_const_lv3_0) and (op_code_reg_1637 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state10) and (select_ln178_reg_1805 = ap_const_lv3_1))) then 
            data_memory_d0 <= tmp_14_fu_1364_p5;
        elsif (((funct3_reg_1642 = ap_const_lv3_0) and (op_code_reg_1637 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state10) and (select_ln178_reg_1805 = ap_const_lv3_2))) then 
            data_memory_d0 <= tmp_15_fu_1348_p5;
        elsif (((funct3_reg_1642 = ap_const_lv3_0) and (op_code_reg_1637 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state10) and (select_ln178_reg_1805 = ap_const_lv3_3))) then 
            data_memory_d0 <= tmp_16_fu_1332_p5;
        elsif (((funct3_reg_1642 = ap_const_lv3_1) and (op_code_reg_1637 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state10) and (select_ln178_reg_1805 = ap_const_lv3_0))) then 
            data_memory_d0 <= tmp_17_fu_1316_p5;
        elsif (((funct3_reg_1642 = ap_const_lv3_1) and (op_code_reg_1637 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state10) and (select_ln178_reg_1805 = ap_const_lv3_2))) then 
            data_memory_d0 <= tmp_18_fu_1300_p5;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            data_memory_d0 <= source2_reg_1705;
        else 
            data_memory_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    data_memory_we0_assign_proc : process(op_code_reg_1637, funct3_reg_1642, ap_CS_fsm_state8, select_ln178_reg_1805, ap_CS_fsm_state10)
    begin
        if ((((funct3_reg_1642 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((funct3_reg_1642 = ap_const_lv3_0) and (op_code_reg_1637 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state10) and (select_ln178_reg_1805 = ap_const_lv3_1)) or ((funct3_reg_1642 = ap_const_lv3_0) and (op_code_reg_1637 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state10) and (select_ln178_reg_1805 = ap_const_lv3_3)) or ((funct3_reg_1642 = ap_const_lv3_0) and (op_code_reg_1637 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state10) and (select_ln178_reg_1805 = ap_const_lv3_0)) or ((funct3_reg_1642 = ap_const_lv3_0) and (op_code_reg_1637 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state10) and (select_ln178_reg_1805 = ap_const_lv3_2)) or ((funct3_reg_1642 = ap_const_lv3_1) and (op_code_reg_1637 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state10) and (select_ln178_reg_1805 = ap_const_lv3_0)) or ((funct3_reg_1642 = ap_const_lv3_1) and (op_code_reg_1637 = ap_const_lv7_23) and (ap_const_logic_1 
    = ap_CS_fsm_state10) and (select_ln178_reg_1805 = ap_const_lv3_2)))) then 
            data_memory_we0 <= ap_const_logic_1;
        else 
            data_memory_we0 <= ap_const_logic_0;
        end if; 
    end process;

    error <= g_error;
    funct3_fu_574_p4 <= instr_memory_q0(14 downto 12);
    grp_execute_load_fu_477_ap_start <= grp_execute_load_fu_477_ap_start_reg;
    grp_fu_502_p2 <= "1" when (unsigned(source1_reg_1691) < unsigned(source2_reg_1705)) else "0";
    grp_fu_506_p2 <= "1" when (signed(source1_reg_1691) < signed(source2_reg_1705)) else "0";
    grp_fu_510_p2 <= "1" when (source1_reg_1691 = source2_reg_1705) else "0";
    grp_fu_514_p2 <= std_logic_vector(unsigned(old_pc_reg_1598) + unsigned(sext_ln40_reg_1657));
    icmp_ln179_fu_1244_p2 <= "1" when (unsigned(pos_2_fu_1182_p3) > unsigned(ap_const_lv32_31FFF)) else "0";
    icmp_ln26_1_fu_542_p2 <= "1" when (unsigned(g_pc) > unsigned(ap_const_lv32_31FFF)) else "0";
    icmp_ln26_fu_526_p2 <= "0" when (trunc_ln26_fu_522_p1 = ap_const_lv2_0) else "1";
    imm_B_fu_640_p6 <= ((((tmp_1_fu_632_p3 & tmp_fu_624_p3) & tmp_s_fu_614_p4) & tmp4_fu_604_p4) & ap_const_lv1_0);
    imm_I_fu_658_p4 <= instr_memory_q0(31 downto 20);
    imm_J_fu_700_p6 <= ((((tmp_1_fu_632_p3 & tmp_5_fu_690_p4) & tmp_3_fu_682_p3) & tmp_2_fu_672_p4) & ap_const_lv1_0);
    imm_U_fu_756_p3 <= (tmp_8_fu_746_p4 & ap_const_lv12_0);
    instr_memory_address0 <= zext_ln28_fu_560_p1(16 - 1 downto 0);

    instr_memory_ce0_assign_proc : process(ap_CS_fsm_state1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            instr_memory_ce0 <= ap_const_logic_1;
        else 
            instr_memory_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    lshr_ln_fu_532_p4 <= g_pc(17 downto 2);
    op_code_fu_570_p1 <= instr_memory_q0(7 - 1 downto 0);
    or_ln182_fu_1250_p2 <= (xor_ln172_fu_1154_p2 or icmp_ln179_fu_1244_p2);
    or_ln26_fu_548_p2 <= (icmp_ln26_fu_526_p2 or icmp_ln26_1_fu_542_p2);
    p_and_t_fu_1214_p3 <= (ap_const_lv1_0 & sub_ln178_fu_1208_p2);
    pos_1_fu_1170_p3 <= (tmp_10_fu_1160_p4 & ap_const_lv2_0);
    pos_2_fu_1182_p3 <= 
        zext_ln171_1_fu_1178_p1 when (tmp_9_fu_1146_p3(0) = '1') else 
        pos_fu_1129_p2;
    pos_3_fu_1190_p4 <= pos_2_fu_1182_p3(17 downto 2);
    pos_fu_1129_p2 <= std_logic_vector(unsigned(source1_reg_1691) + unsigned(sext_ln171_1_fu_1104_p1));
    result_2_fu_565_p2 <= std_logic_vector(unsigned(old_pc_reg_1598) + unsigned(ap_const_lv32_4));
    select_ln178_fu_1236_p3 <= 
        sub_ln178_1_fu_1222_p2 when (tmp_11_fu_1200_p3(0) = '1') else 
        tmp_12_fu_1228_p3;
    select_ln71_fu_1084_p3 <= 
        grp_fu_514_p2 when (icmp_ln71_reg_1745(0) = '1') else 
        result_2_reg_1614;
    select_ln76_fu_1078_p3 <= 
        result_2_reg_1614 when (icmp_ln76_reg_1740(0) = '1') else 
        grp_fu_514_p2;
    select_ln81_fu_1072_p3 <= 
        grp_fu_514_p2 when (icmp_ln81_reg_1735(0) = '1') else 
        result_2_reg_1614;
    select_ln86_fu_1066_p3 <= 
        result_2_reg_1614 when (icmp_ln86_reg_1730(0) = '1') else 
        grp_fu_514_p2;
    select_ln91_fu_1060_p3 <= 
        grp_fu_514_p2 when (icmp_ln91_reg_1725(0) = '1') else 
        result_2_reg_1614;
    select_ln96_fu_1054_p3 <= 
        result_2_reg_1614 when (icmp_ln96_reg_1720(0) = '1') else 
        grp_fu_514_p2;
        sext_ln171_1_fu_1104_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_4_reg_1678),32));

        sext_ln171_2_fu_1117_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_4_reg_1678),29));

        sext_ln171_3_fu_1123_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_4_reg_1678),28));

        sext_ln171_fu_1101_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_4_reg_1678),34));

        sext_ln40_fu_654_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(imm_B_fu_640_p6),32));

        sext_ln41_fu_668_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(imm_I_fu_658_p4),32));

        sext_ln42_fu_714_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(imm_J_fu_700_p6),32));

    source1_fu_908_p33 <= instr_memory_q0(19 downto 15);
    source2_fu_978_p33 <= instr_memory_q0(24 downto 20);
    sub_ln178_1_fu_1222_p2 <= std_logic_vector(unsigned(ap_const_lv3_0) - unsigned(p_and_t_fu_1214_p3));
    sub_ln178_fu_1208_p2 <= std_logic_vector(unsigned(ap_const_lv2_0) - unsigned(trunc_ln171_fu_1113_p1));
    tmp4_fu_604_p4 <= instr_memory_q0(11 downto 8);
    tmp_10_fu_1160_p4 <= add_ln171_2_fu_1134_p2(27 downto 2);
    tmp_11_fu_1200_p3 <= add_ln171_fu_1107_p2(33 downto 33);
    tmp_12_fu_1228_p3 <= (ap_const_lv1_0 & trunc_ln171_fu_1113_p1);
    tmp_13_fu_1380_p5 <= (data_memory_q0(31 downto 8) & trunc_ln185_fu_1377_p1);
    tmp_14_fu_1364_p5 <= (data_memory_q0(31 downto 16) & trunc_ln187_fu_1361_p1 & data_memory_q0(7 downto 0));
    tmp_15_fu_1348_p5 <= (data_memory_q0(31 downto 24) & trunc_ln189_fu_1345_p1 & data_memory_q0(15 downto 0));
    tmp_16_fu_1332_p5 <= (trunc_ln191_fu_1329_p1 & data_memory_q0(23 downto 0));
    tmp_17_fu_1316_p5 <= (data_memory_q0(31 downto 16) & trunc_ln196_fu_1313_p1);
    tmp_18_fu_1300_p5 <= (trunc_ln198_fu_1297_p1 & data_memory_q0(15 downto 0));
    tmp_1_fu_632_p3 <= instr_memory_q0(31 downto 31);
    tmp_2_fu_672_p4 <= instr_memory_q0(30 downto 21);
    tmp_3_fu_682_p3 <= instr_memory_q0(20 downto 20);
    tmp_4_fu_738_p3 <= (tmp_7_fu_728_p4 & tmp_6_fu_718_p4);
    tmp_5_fu_690_p4 <= instr_memory_q0(19 downto 12);
    tmp_6_fu_718_p4 <= instr_memory_q0(11 downto 7);
    tmp_7_fu_728_p4 <= instr_memory_q0(31 downto 25);
    tmp_8_fu_746_p4 <= instr_memory_q0(31 downto 12);
    tmp_9_fu_1146_p3 <= add_ln171_3_fu_1140_p2(28 downto 28);
    tmp_fu_624_p3 <= instr_memory_q0(7 downto 7);
    tmp_s_fu_614_p4 <= instr_memory_q0(30 downto 25);
    trunc_ln171_1_fu_1120_p1 <= source1_reg_1691(29 - 1 downto 0);
    trunc_ln171_2_fu_1126_p1 <= source1_reg_1691(28 - 1 downto 0);
    trunc_ln171_fu_1113_p1 <= add_ln171_fu_1107_p2(2 - 1 downto 0);
    trunc_ln185_fu_1377_p1 <= source2_reg_1705(8 - 1 downto 0);
    trunc_ln187_fu_1361_p1 <= source2_reg_1705(8 - 1 downto 0);
    trunc_ln189_fu_1345_p1 <= source2_reg_1705(8 - 1 downto 0);
    trunc_ln191_fu_1329_p1 <= source2_reg_1705(8 - 1 downto 0);
    trunc_ln196_fu_1313_p1 <= source2_reg_1705(16 - 1 downto 0);
    trunc_ln198_fu_1297_p1 <= source2_reg_1705(16 - 1 downto 0);
    trunc_ln26_fu_522_p1 <= g_pc(2 - 1 downto 0);
    xor_ln172_fu_1154_p2 <= (tmp_9_fu_1146_p3 xor ap_const_lv1_1);
    zext_ln171_1_fu_1178_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_1_fu_1170_p3),32));
    zext_ln171_fu_1098_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(source1_reg_1691),34));
    zext_ln185_fu_1293_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_3_reg_1795),64));
    zext_ln187_fu_1289_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_3_reg_1795),64));
    zext_ln189_fu_1285_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_3_reg_1795),64));
    zext_ln191_fu_1281_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_3_reg_1795),64));
    zext_ln196_fu_1277_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_3_reg_1795),64));
    zext_ln198_fu_1273_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_3_reg_1795),64));
    zext_ln202_fu_1262_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_3_fu_1190_p4),64));
    zext_ln28_fu_560_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_fu_532_p4),64));
end behav;
