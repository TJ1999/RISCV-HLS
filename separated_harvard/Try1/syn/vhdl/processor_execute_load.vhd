-- ==============================================================
-- Generated by Vitis HLS v2023.1.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity processor_execute_load is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    funct3_val : IN STD_LOGIC_VECTOR (2 downto 0);
    imm_I_val : IN STD_LOGIC_VECTOR (11 downto 0);
    p_read : IN STD_LOGIC_VECTOR (31 downto 0);
    data_memory_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_memory_ce0 : OUT STD_LOGIC;
    data_memory_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    source1_val : IN STD_LOGIC_VECTOR (31 downto 0);
    g_error : OUT STD_LOGIC_VECTOR (0 downto 0);
    g_error_ap_vld : OUT STD_LOGIC;
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of processor_execute_load is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_31FFF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000110001111111111111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal p_read_1_reg_657 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal funct3_val_read_read_fu_104_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal funct3_val_read_reg_666 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln120_fu_490_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln120_reg_670 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln124_fu_504_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln124_reg_674 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_g_error_flag_1_phi_fu_223_p36 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_g_error_flag_1_reg_219 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_g_error_flag_1_reg_219 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_phi_ln169_phi_fu_265_p36 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_phi_ln169_reg_262 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_phi_ln169_reg_262 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln161_1_fu_575_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln159_1_fu_584_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln154_1_fu_589_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln152_1_fu_594_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln150_1_fu_599_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln148_1_fu_608_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln140_fu_613_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln138_fu_622_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln133_fu_627_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln131_fu_632_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln129_fu_637_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln127_fu_646_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln161_fu_510_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln159_fu_515_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln154_fu_520_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln152_fu_525_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln150_fu_530_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln148_fu_535_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln144_fu_540_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln140_fu_545_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln138_fu_550_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln133_fu_555_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln131_fu_560_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln129_fu_565_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln127_fu_570_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal imm_I_val_cast_fu_344_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln113_fu_352_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln113_fu_348_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal sext_ln113_fu_352_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal add_ln113_fu_356_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal sext_ln113_1_fu_370_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln113_2_fu_378_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal imm_I_val_cast_fu_344_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln113_2_fu_378_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal trunc_ln113_2_fu_374_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln113_1_fu_370_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal trunc_ln113_1_fu_366_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal add_ln113_3_fu_394_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_fu_400_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln113_2_fu_388_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_s_fu_414_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal pos_3_fu_424_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal zext_ln113_1_fu_432_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal pos_fu_382_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal pos_4_fu_436_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln113_fu_362_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln120_fu_462_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_and_t_fu_468_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_13_fu_454_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln120_1_fu_476_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_12_fu_482_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln121_fu_498_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln114_fu_408_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal pos_5_fu_444_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_304_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln159_fu_580_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_314_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_324_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_334_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln148_fu_604_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln138_fu_618_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln127_fu_642_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_186 : BOOLEAN;
    signal ap_condition_179 : BOOLEAN;
    signal ap_condition_259 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_g_error_flag_1_reg_219_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_179)) then
                if ((ap_const_boolean_1 = ap_condition_186)) then 
                    ap_phi_reg_pp0_iter1_g_error_flag_1_reg_219 <= ap_const_lv1_1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_g_error_flag_1_reg_219 <= ap_phi_reg_pp0_iter0_g_error_flag_1_reg_219;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_phi_ln169_reg_262_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_179)) then
                if ((ap_const_boolean_1 = ap_condition_186)) then 
                    ap_phi_reg_pp0_iter1_phi_ln169_reg_262 <= p_read;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_phi_ln169_reg_262 <= ap_phi_reg_pp0_iter0_phi_ln169_reg_262;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                funct3_val_read_reg_666 <= funct3_val;
                or_ln124_reg_674 <= or_ln124_fu_504_p2;
                p_read_1_reg_657 <= p_read;
                select_ln120_reg_670 <= select_ln120_fu_490_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln113_2_fu_388_p2 <= std_logic_vector(signed(sext_ln113_2_fu_378_p1) + signed(trunc_ln113_2_fu_374_p1));
    add_ln113_3_fu_394_p2 <= std_logic_vector(signed(sext_ln113_1_fu_370_p1) + signed(trunc_ln113_1_fu_366_p1));
    add_ln113_fu_356_p2 <= std_logic_vector(unsigned(zext_ln113_fu_348_p1) + unsigned(sext_ln113_fu_352_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_179_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_179 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_186_assign_proc : process(funct3_val_read_read_fu_104_p2)
    begin
                ap_condition_186 <= ((funct3_val_read_read_fu_104_p2 = ap_const_lv3_3) or ((funct3_val_read_read_fu_104_p2 = ap_const_lv3_6) or (funct3_val_read_read_fu_104_p2 = ap_const_lv3_7)));
    end process;


    ap_condition_259_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0)
    begin
                ap_condition_259 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_g_error_flag_1_phi_fu_223_p36_assign_proc : process(funct3_val_read_reg_666, select_ln120_reg_670, or_ln124_reg_674, ap_phi_reg_pp0_iter1_g_error_flag_1_reg_219)
    begin
        if (((funct3_val_read_reg_666 = ap_const_lv3_2) or (not((select_ln120_reg_670 = ap_const_lv3_3)) and not((select_ln120_reg_670 = ap_const_lv3_1)) and not((select_ln120_reg_670 = ap_const_lv3_2)) and not((select_ln120_reg_670 = ap_const_lv3_0)) and (funct3_val_read_reg_666 = ap_const_lv3_0)) or (not((select_ln120_reg_670 = ap_const_lv3_3)) and not((select_ln120_reg_670 = ap_const_lv3_1)) and not((select_ln120_reg_670 = ap_const_lv3_2)) and not((select_ln120_reg_670 = ap_const_lv3_0)) and (funct3_val_read_reg_666 = ap_const_lv3_4)) or ((select_ln120_reg_670 = ap_const_lv3_3) and (funct3_val_read_reg_666 = ap_const_lv3_0)) or ((select_ln120_reg_670 = ap_const_lv3_3) and (funct3_val_read_reg_666 = ap_const_lv3_4)) or ((select_ln120_reg_670 = ap_const_lv3_1) and (funct3_val_read_reg_666 = ap_const_lv3_0)) or ((select_ln120_reg_670 = ap_const_lv3_1) and (funct3_val_read_reg_666 = ap_const_lv3_4)) or (not((select_ln120_reg_670 = ap_const_lv3_2)) and not((select_ln120_reg_670 = ap_const_lv3_0)) and (funct3_val_read_reg_666 
    = ap_const_lv3_1)) or (not((select_ln120_reg_670 = ap_const_lv3_2)) and not((select_ln120_reg_670 = ap_const_lv3_0)) and (funct3_val_read_reg_666 = ap_const_lv3_5)) or ((select_ln120_reg_670 = ap_const_lv3_2) and (funct3_val_read_reg_666 = ap_const_lv3_0)) or ((select_ln120_reg_670 = ap_const_lv3_2) and (funct3_val_read_reg_666 = ap_const_lv3_1)) or ((select_ln120_reg_670 = ap_const_lv3_2) and (funct3_val_read_reg_666 = ap_const_lv3_4)) or ((select_ln120_reg_670 = ap_const_lv3_2) and (funct3_val_read_reg_666 = ap_const_lv3_5)) or ((select_ln120_reg_670 = ap_const_lv3_0) and (funct3_val_read_reg_666 = ap_const_lv3_0)) or ((select_ln120_reg_670 = ap_const_lv3_0) and (funct3_val_read_reg_666 = ap_const_lv3_1)) or ((select_ln120_reg_670 = ap_const_lv3_0) and (funct3_val_read_reg_666 = ap_const_lv3_4)) or ((select_ln120_reg_670 = ap_const_lv3_0) and (funct3_val_read_reg_666 = ap_const_lv3_5)))) then 
            ap_phi_mux_g_error_flag_1_phi_fu_223_p36 <= or_ln124_reg_674;
        else 
            ap_phi_mux_g_error_flag_1_phi_fu_223_p36 <= ap_phi_reg_pp0_iter1_g_error_flag_1_reg_219;
        end if; 
    end process;


    ap_phi_mux_phi_ln169_phi_fu_265_p36_assign_proc : process(data_memory_q0, p_read_1_reg_657, funct3_val_read_reg_666, select_ln120_reg_670, ap_phi_reg_pp0_iter1_phi_ln169_reg_262, zext_ln161_1_fu_575_p1, zext_ln159_1_fu_584_p1, zext_ln154_1_fu_589_p1, zext_ln152_1_fu_594_p1, zext_ln150_1_fu_599_p1, zext_ln148_1_fu_608_p1, sext_ln140_fu_613_p1, sext_ln138_fu_622_p1, sext_ln133_fu_627_p1, sext_ln131_fu_632_p1, sext_ln129_fu_637_p1, sext_ln127_fu_646_p1)
    begin
        if (((select_ln120_reg_670 = ap_const_lv3_0) and (funct3_val_read_reg_666 = ap_const_lv3_0))) then 
            ap_phi_mux_phi_ln169_phi_fu_265_p36 <= sext_ln127_fu_646_p1;
        elsif (((select_ln120_reg_670 = ap_const_lv3_1) and (funct3_val_read_reg_666 = ap_const_lv3_0))) then 
            ap_phi_mux_phi_ln169_phi_fu_265_p36 <= sext_ln129_fu_637_p1;
        elsif (((select_ln120_reg_670 = ap_const_lv3_2) and (funct3_val_read_reg_666 = ap_const_lv3_0))) then 
            ap_phi_mux_phi_ln169_phi_fu_265_p36 <= sext_ln131_fu_632_p1;
        elsif (((select_ln120_reg_670 = ap_const_lv3_3) and (funct3_val_read_reg_666 = ap_const_lv3_0))) then 
            ap_phi_mux_phi_ln169_phi_fu_265_p36 <= sext_ln133_fu_627_p1;
        elsif (((select_ln120_reg_670 = ap_const_lv3_0) and (funct3_val_read_reg_666 = ap_const_lv3_1))) then 
            ap_phi_mux_phi_ln169_phi_fu_265_p36 <= sext_ln138_fu_622_p1;
        elsif (((select_ln120_reg_670 = ap_const_lv3_2) and (funct3_val_read_reg_666 = ap_const_lv3_1))) then 
            ap_phi_mux_phi_ln169_phi_fu_265_p36 <= sext_ln140_fu_613_p1;
        elsif (((select_ln120_reg_670 = ap_const_lv3_0) and (funct3_val_read_reg_666 = ap_const_lv3_4))) then 
            ap_phi_mux_phi_ln169_phi_fu_265_p36 <= zext_ln148_1_fu_608_p1;
        elsif (((select_ln120_reg_670 = ap_const_lv3_1) and (funct3_val_read_reg_666 = ap_const_lv3_4))) then 
            ap_phi_mux_phi_ln169_phi_fu_265_p36 <= zext_ln150_1_fu_599_p1;
        elsif (((select_ln120_reg_670 = ap_const_lv3_2) and (funct3_val_read_reg_666 = ap_const_lv3_4))) then 
            ap_phi_mux_phi_ln169_phi_fu_265_p36 <= zext_ln152_1_fu_594_p1;
        elsif (((select_ln120_reg_670 = ap_const_lv3_3) and (funct3_val_read_reg_666 = ap_const_lv3_4))) then 
            ap_phi_mux_phi_ln169_phi_fu_265_p36 <= zext_ln154_1_fu_589_p1;
        elsif (((select_ln120_reg_670 = ap_const_lv3_0) and (funct3_val_read_reg_666 = ap_const_lv3_5))) then 
            ap_phi_mux_phi_ln169_phi_fu_265_p36 <= zext_ln159_1_fu_584_p1;
        elsif (((select_ln120_reg_670 = ap_const_lv3_2) and (funct3_val_read_reg_666 = ap_const_lv3_5))) then 
            ap_phi_mux_phi_ln169_phi_fu_265_p36 <= zext_ln161_1_fu_575_p1;
        elsif ((funct3_val_read_reg_666 = ap_const_lv3_2)) then 
            ap_phi_mux_phi_ln169_phi_fu_265_p36 <= data_memory_q0;
        elsif (((not((select_ln120_reg_670 = ap_const_lv3_3)) and not((select_ln120_reg_670 = ap_const_lv3_1)) and not((select_ln120_reg_670 = ap_const_lv3_2)) and not((select_ln120_reg_670 = ap_const_lv3_0)) and (funct3_val_read_reg_666 = ap_const_lv3_0)) or (not((select_ln120_reg_670 = ap_const_lv3_3)) and not((select_ln120_reg_670 = ap_const_lv3_1)) and not((select_ln120_reg_670 = ap_const_lv3_2)) and not((select_ln120_reg_670 = ap_const_lv3_0)) and (funct3_val_read_reg_666 = ap_const_lv3_4)) or (not((select_ln120_reg_670 = ap_const_lv3_2)) and not((select_ln120_reg_670 = ap_const_lv3_0)) and (funct3_val_read_reg_666 = ap_const_lv3_1)) or (not((select_ln120_reg_670 = ap_const_lv3_2)) and not((select_ln120_reg_670 = ap_const_lv3_0)) and (funct3_val_read_reg_666 = ap_const_lv3_5)))) then 
            ap_phi_mux_phi_ln169_phi_fu_265_p36 <= p_read_1_reg_657;
        else 
            ap_phi_mux_phi_ln169_phi_fu_265_p36 <= ap_phi_reg_pp0_iter1_phi_ln169_reg_262;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_g_error_flag_1_reg_219 <= "X";
    ap_phi_reg_pp0_iter0_phi_ln169_reg_262 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_ready_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= ap_phi_mux_phi_ln169_phi_fu_265_p36;

    data_memory_address0_assign_proc : process(funct3_val_read_read_fu_104_p2, select_ln120_fu_490_p3, zext_ln161_fu_510_p1, zext_ln159_fu_515_p1, zext_ln154_fu_520_p1, zext_ln152_fu_525_p1, zext_ln150_fu_530_p1, zext_ln148_fu_535_p1, zext_ln144_fu_540_p1, zext_ln140_fu_545_p1, zext_ln138_fu_550_p1, zext_ln133_fu_555_p1, zext_ln131_fu_560_p1, zext_ln129_fu_565_p1, zext_ln127_fu_570_p1, ap_condition_259)
    begin
        if ((ap_const_boolean_1 = ap_condition_259)) then
            if (((select_ln120_fu_490_p3 = ap_const_lv3_0) and (funct3_val_read_read_fu_104_p2 = ap_const_lv3_0))) then 
                data_memory_address0 <= zext_ln127_fu_570_p1(16 - 1 downto 0);
            elsif (((select_ln120_fu_490_p3 = ap_const_lv3_1) and (funct3_val_read_read_fu_104_p2 = ap_const_lv3_0))) then 
                data_memory_address0 <= zext_ln129_fu_565_p1(16 - 1 downto 0);
            elsif (((select_ln120_fu_490_p3 = ap_const_lv3_2) and (funct3_val_read_read_fu_104_p2 = ap_const_lv3_0))) then 
                data_memory_address0 <= zext_ln131_fu_560_p1(16 - 1 downto 0);
            elsif (((select_ln120_fu_490_p3 = ap_const_lv3_3) and (funct3_val_read_read_fu_104_p2 = ap_const_lv3_0))) then 
                data_memory_address0 <= zext_ln133_fu_555_p1(16 - 1 downto 0);
            elsif (((select_ln120_fu_490_p3 = ap_const_lv3_0) and (funct3_val_read_read_fu_104_p2 = ap_const_lv3_1))) then 
                data_memory_address0 <= zext_ln138_fu_550_p1(16 - 1 downto 0);
            elsif (((select_ln120_fu_490_p3 = ap_const_lv3_2) and (funct3_val_read_read_fu_104_p2 = ap_const_lv3_1))) then 
                data_memory_address0 <= zext_ln140_fu_545_p1(16 - 1 downto 0);
            elsif ((funct3_val_read_read_fu_104_p2 = ap_const_lv3_2)) then 
                data_memory_address0 <= zext_ln144_fu_540_p1(16 - 1 downto 0);
            elsif (((select_ln120_fu_490_p3 = ap_const_lv3_0) and (funct3_val_read_read_fu_104_p2 = ap_const_lv3_4))) then 
                data_memory_address0 <= zext_ln148_fu_535_p1(16 - 1 downto 0);
            elsif (((select_ln120_fu_490_p3 = ap_const_lv3_1) and (funct3_val_read_read_fu_104_p2 = ap_const_lv3_4))) then 
                data_memory_address0 <= zext_ln150_fu_530_p1(16 - 1 downto 0);
            elsif (((select_ln120_fu_490_p3 = ap_const_lv3_2) and (funct3_val_read_read_fu_104_p2 = ap_const_lv3_4))) then 
                data_memory_address0 <= zext_ln152_fu_525_p1(16 - 1 downto 0);
            elsif (((select_ln120_fu_490_p3 = ap_const_lv3_3) and (funct3_val_read_read_fu_104_p2 = ap_const_lv3_4))) then 
                data_memory_address0 <= zext_ln154_fu_520_p1(16 - 1 downto 0);
            elsif (((select_ln120_fu_490_p3 = ap_const_lv3_0) and (funct3_val_read_read_fu_104_p2 = ap_const_lv3_5))) then 
                data_memory_address0 <= zext_ln159_fu_515_p1(16 - 1 downto 0);
            elsif (((select_ln120_fu_490_p3 = ap_const_lv3_2) and (funct3_val_read_read_fu_104_p2 = ap_const_lv3_5))) then 
                data_memory_address0 <= zext_ln161_fu_510_p1(16 - 1 downto 0);
            else 
                data_memory_address0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            data_memory_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    data_memory_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, funct3_val_read_read_fu_104_p2, select_ln120_fu_490_p3)
    begin
        if ((((select_ln120_fu_490_p3 = ap_const_lv3_1) and (funct3_val_read_read_fu_104_p2 = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((select_ln120_fu_490_p3 = ap_const_lv3_1) and (funct3_val_read_read_fu_104_p2 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((select_ln120_fu_490_p3 = ap_const_lv3_3) and (funct3_val_read_read_fu_104_p2 = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((select_ln120_fu_490_p3 = ap_const_lv3_3) and (funct3_val_read_read_fu_104_p2 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((select_ln120_fu_490_p3 = ap_const_lv3_0) 
    and (funct3_val_read_read_fu_104_p2 = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((select_ln120_fu_490_p3 = ap_const_lv3_0) and (funct3_val_read_read_fu_104_p2 = ap_const_lv3_5) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((select_ln120_fu_490_p3 = ap_const_lv3_0) and (funct3_val_read_read_fu_104_p2 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((select_ln120_fu_490_p3 = ap_const_lv3_0) and (funct3_val_read_read_fu_104_p2 = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((select_ln120_fu_490_p3 = ap_const_lv3_2) and (funct3_val_read_read_fu_104_p2 
    = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((select_ln120_fu_490_p3 = ap_const_lv3_2) and (funct3_val_read_read_fu_104_p2 = ap_const_lv3_5) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((select_ln120_fu_490_p3 = ap_const_lv3_2) and (funct3_val_read_read_fu_104_p2 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((select_ln120_fu_490_p3 = ap_const_lv3_2) and (funct3_val_read_read_fu_104_p2 = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((funct3_val_read_read_fu_104_p2 = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and 
    (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            data_memory_ce0 <= ap_const_logic_1;
        else 
            data_memory_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    funct3_val_read_read_fu_104_p2 <= funct3_val;
    g_error <= ap_const_lv1_1;

    g_error_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_phi_mux_g_error_flag_1_phi_fu_223_p36)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_phi_mux_g_error_flag_1_phi_fu_223_p36 = ap_const_lv1_1))) then 
            g_error_ap_vld <= ap_const_logic_1;
        else 
            g_error_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_304_p4 <= data_memory_q0(31 downto 16);
    grp_fu_314_p4 <= data_memory_q0(31 downto 24);
    grp_fu_324_p4 <= data_memory_q0(23 downto 16);
    grp_fu_334_p4 <= data_memory_q0(15 downto 8);
    icmp_ln121_fu_498_p2 <= "1" when (unsigned(pos_4_fu_436_p3) > unsigned(ap_const_lv32_31FFF)) else "0";
    imm_I_val_cast_fu_344_p0 <= imm_I_val;
        imm_I_val_cast_fu_344_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(imm_I_val_cast_fu_344_p0),32));

    or_ln124_fu_504_p2 <= (xor_ln114_fu_408_p2 or icmp_ln121_fu_498_p2);
    p_and_t_fu_468_p3 <= (ap_const_lv1_0 & sub_ln120_fu_462_p2);
    pos_3_fu_424_p3 <= (tmp_s_fu_414_p4 & ap_const_lv2_0);
    pos_4_fu_436_p3 <= 
        zext_ln113_1_fu_432_p1 when (tmp_fu_400_p3(0) = '1') else 
        pos_fu_382_p2;
    pos_5_fu_444_p4 <= pos_4_fu_436_p3(17 downto 2);
    pos_fu_382_p2 <= std_logic_vector(signed(imm_I_val_cast_fu_344_p1) + signed(source1_val));
    select_ln120_fu_490_p3 <= 
        sub_ln120_1_fu_476_p2 when (tmp_13_fu_454_p3(0) = '1') else 
        tmp_12_fu_482_p3;
    sext_ln113_1_fu_370_p0 <= imm_I_val;
        sext_ln113_1_fu_370_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln113_1_fu_370_p0),29));

    sext_ln113_2_fu_378_p0 <= imm_I_val;
        sext_ln113_2_fu_378_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln113_2_fu_378_p0),28));

    sext_ln113_fu_352_p0 <= imm_I_val;
        sext_ln113_fu_352_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln113_fu_352_p0),34));

        sext_ln127_fu_646_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln127_fu_642_p1),32));

        sext_ln129_fu_637_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_334_p4),32));

        sext_ln131_fu_632_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_324_p4),32));

        sext_ln133_fu_627_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_314_p4),32));

        sext_ln138_fu_622_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln138_fu_618_p1),32));

        sext_ln140_fu_613_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_304_p4),32));

    sub_ln120_1_fu_476_p2 <= std_logic_vector(unsigned(ap_const_lv3_0) - unsigned(p_and_t_fu_468_p3));
    sub_ln120_fu_462_p2 <= std_logic_vector(unsigned(ap_const_lv2_0) - unsigned(trunc_ln113_fu_362_p1));
    tmp_12_fu_482_p3 <= (ap_const_lv1_0 & trunc_ln113_fu_362_p1);
    tmp_13_fu_454_p3 <= add_ln113_fu_356_p2(33 downto 33);
    tmp_fu_400_p3 <= add_ln113_3_fu_394_p2(28 downto 28);
    tmp_s_fu_414_p4 <= add_ln113_2_fu_388_p2(27 downto 2);
    trunc_ln113_1_fu_366_p1 <= source1_val(29 - 1 downto 0);
    trunc_ln113_2_fu_374_p1 <= source1_val(28 - 1 downto 0);
    trunc_ln113_fu_362_p1 <= add_ln113_fu_356_p2(2 - 1 downto 0);
    trunc_ln127_fu_642_p1 <= data_memory_q0(8 - 1 downto 0);
    trunc_ln138_fu_618_p1 <= data_memory_q0(16 - 1 downto 0);
    trunc_ln148_fu_604_p1 <= data_memory_q0(8 - 1 downto 0);
    trunc_ln159_fu_580_p1 <= data_memory_q0(16 - 1 downto 0);
    xor_ln114_fu_408_p2 <= (tmp_fu_400_p3 xor ap_const_lv1_1);
    zext_ln113_1_fu_432_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_3_fu_424_p3),32));
    zext_ln113_fu_348_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(source1_val),34));
    zext_ln127_fu_570_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_5_fu_444_p4),64));
    zext_ln129_fu_565_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_5_fu_444_p4),64));
    zext_ln131_fu_560_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_5_fu_444_p4),64));
    zext_ln133_fu_555_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_5_fu_444_p4),64));
    zext_ln138_fu_550_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_5_fu_444_p4),64));
    zext_ln140_fu_545_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_5_fu_444_p4),64));
    zext_ln144_fu_540_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_5_fu_444_p4),64));
    zext_ln148_1_fu_608_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln148_fu_604_p1),32));
    zext_ln148_fu_535_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_5_fu_444_p4),64));
    zext_ln150_1_fu_599_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_334_p4),32));
    zext_ln150_fu_530_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_5_fu_444_p4),64));
    zext_ln152_1_fu_594_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_324_p4),32));
    zext_ln152_fu_525_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_5_fu_444_p4),64));
    zext_ln154_1_fu_589_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_314_p4),32));
    zext_ln154_fu_520_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_5_fu_444_p4),64));
    zext_ln159_1_fu_584_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln159_fu_580_p1),32));
    zext_ln159_fu_515_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_5_fu_444_p4),64));
    zext_ln161_1_fu_575_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_304_p4),32));
    zext_ln161_fu_510_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_5_fu_444_p4),64));
end behav;
