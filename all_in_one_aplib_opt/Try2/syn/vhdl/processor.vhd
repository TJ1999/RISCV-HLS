-- ==============================================================
-- Generated by Vitis HLS v2023.1.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity processor is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    memory_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
    memory_ce0 : OUT STD_LOGIC;
    memory_we0 : OUT STD_LOGIC;
    memory_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    memory_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    error : OUT STD_LOGIC_VECTOR (0 downto 0);
    pc : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of processor is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "processor_processor,hls_ip_2023_1_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100t-csg324-1,HLS_INPUT_CLOCK=20.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=14.513750,HLS_SYN_LAT=4,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=0,HLS_SYN_FF=571,HLS_SYN_LUT=2267,HLS_VERSION=2023_1_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (33 downto 0) := "0000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (33 downto 0) := "0000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (33 downto 0) := "0000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (33 downto 0) := "0000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (33 downto 0) := "0000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (33 downto 0) := "0000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (33 downto 0) := "0001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (33 downto 0) := "0010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (33 downto 0) := "0100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (33 downto 0) := "1000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv7_23 : STD_LOGIC_VECTOR (6 downto 0) := "0100011";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv7_3 : STD_LOGIC_VECTOR (6 downto 0) := "0000011";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv7_63 : STD_LOGIC_VECTOR (6 downto 0) := "1100011";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv7_67 : STD_LOGIC_VECTOR (6 downto 0) := "1100111";
    constant ap_const_lv7_6F : STD_LOGIC_VECTOR (6 downto 0) := "1101111";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv7_37 : STD_LOGIC_VECTOR (6 downto 0) := "0110111";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv7_33 : STD_LOGIC_VECTOR (6 downto 0) := "0110011";
    constant ap_const_lv7_20 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv7_13 : STD_LOGIC_VECTOR (6 downto 0) := "0010011";
    constant ap_const_lv7_17 : STD_LOGIC_VECTOR (6 downto 0) := "0010111";
    constant ap_const_lv7_73 : STD_LOGIC_VECTOR (6 downto 0) := "1110011";
    constant ap_const_lv7_F : STD_LOGIC_VECTOR (6 downto 0) := "0001111";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv19_0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";

    signal p_pc : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal xreg_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal xreg_ce0 : STD_LOGIC;
    signal xreg_we0 : STD_LOGIC;
    signal xreg_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal xreg_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal xreg_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal xreg_ce1 : STD_LOGIC;
    signal xreg_we1 : STD_LOGIC;
    signal xreg_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xreg_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_error : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal p_pc_load_reg_1639 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal op_code_fu_624_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal op_code_reg_1652 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal funct3_reg_1656 : STD_LOGIC_VECTOR (2 downto 0);
    signal funct7_reg_1660 : STD_LOGIC_VECTOR (6 downto 0);
    signal funct12_reg_1665 : STD_LOGIC_VECTOR (11 downto 0);
    signal rd_reg_1670 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_reg_1676 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_s_reg_1681 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1_reg_1686 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_reg_1691 : STD_LOGIC_VECTOR (0 downto 0);
    signal imm_I_reg_1697 : STD_LOGIC_VECTOR (11 downto 0);
    signal imm_I2_reg_1704 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_3_reg_1711 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_5_reg_1716 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_reg_1721 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_reg_1726 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_8_reg_1731 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_9_reg_1736 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln42_fu_822_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln42_reg_1751 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal sext_ln43_fu_826_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln43_reg_1756 : STD_LOGIC_VECTOR (31 downto 0);
    signal imm_U_fu_850_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal imm_U_reg_1766 : STD_LOGIC_VECTOR (31 downto 0);
    signal source1_reg_1772 : STD_LOGIC_VECTOR (31 downto 0);
    signal source2_reg_1795 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln246_fu_857_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln246_reg_1815 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln181_fu_1047_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln181_reg_1822 : STD_LOGIC_VECTOR (2 downto 0);
    signal memory_addr_20_reg_1826 : STD_LOGIC_VECTOR (16 downto 0);
    signal memory_addr_19_reg_1831 : STD_LOGIC_VECTOR (16 downto 0);
    signal memory_addr_18_reg_1836 : STD_LOGIC_VECTOR (16 downto 0);
    signal memory_addr_17_reg_1841 : STD_LOGIC_VECTOR (16 downto 0);
    signal memory_addr_16_reg_1846 : STD_LOGIC_VECTOR (16 downto 0);
    signal memory_addr_15_reg_1851 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln126_fu_1202_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln126_reg_1856 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_531_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln113_reg_1925 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln107_reg_1929 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_537_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln101_reg_1933 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1937 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_543_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln89_reg_1941 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln83_reg_1945 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_549_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln70_fu_1287_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln358_fu_1298_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ashr_ln347_fu_1309_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal lshr_ln343_fu_1321_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal xor_ln333_fu_1326_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal zext_ln320_fu_1330_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal zext_ln307_fu_1334_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal shl_ln298_fu_1345_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal sub_ln287_fu_1350_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal add_ln282_fu_1354_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal and_ln367_fu_1358_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal shl_ln247_fu_1365_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal and_ln242_fu_1370_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal or_ln238_fu_1374_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln234_fu_1378_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln226_fu_1386_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln218_fu_1394_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ashr_ln261_fu_1401_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal lshr_ln257_fu_1409_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal zext_ln168_1_fu_1510_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal zext_ln166_1_fu_1518_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal zext_ln160_1_fu_1522_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal zext_ln158_1_fu_1526_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln156_1_fu_1530_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln154_1_fu_1538_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal sext_ln144_fu_1542_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal sext_ln142_fu_1550_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal sext_ln136_fu_1554_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal sext_ln134_fu_1558_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln132_fu_1562_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln130_fu_1570_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_594_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal add_ln65_fu_1620_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal storemerge_reg_411 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_29_ph_ph_reg_421 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_p_0_0_02438_phi_fu_511_p16 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_0_0_02438_reg_508 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_598_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal zext_ln33_fu_619_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln51_fu_802_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln52_fu_807_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln202_fu_1055_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln198_fu_1060_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln196_fu_1065_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln191_fu_1070_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln189_fu_1075_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln187_fu_1080_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln185_fu_1085_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln168_fu_1210_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln166_fu_1215_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln160_fu_1220_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln158_fu_1225_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln156_fu_1230_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln154_fu_1235_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln149_fu_1240_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln144_fu_1245_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln142_fu_1250_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln136_fu_1255_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln134_fu_1260_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln132_fu_1265_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln130_fu_1270_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln401_fu_1616_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln401_1_fu_1624_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln385_fu_862_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal tmp_27_fu_1417_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_26_fu_1433_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_25_fu_1449_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_24_fu_1465_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_23_fu_1481_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_fu_1497_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_531_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_531_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_537_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_537_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_549_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_549_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln_fu_609_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal rs1_fu_658_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal rs2_fu_668_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal imm_B_fu_812_p6 : STD_LOGIC_VECTOR (12 downto 0);
    signal imm_J_fu_830_p6 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_4_fu_844_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln180_fu_939_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal sext_ln180_fu_943_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal add_ln180_fu_955_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal trunc_ln180_fu_951_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln180_1_fu_947_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln180_1_fu_965_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal sub_ln180_fu_979_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal trunc_ln180_1_fu_985_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_12_fu_971_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln180_1_fu_995_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln180_2_fu_1001_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln180_3_fu_961_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln181_fu_1019_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_and_t3_fu_1025_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln181_1_fu_1033_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_13_fu_1039_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal pos_1_fu_1011_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln125_fu_1096_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal sext_ln125_fu_1100_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal add_ln125_fu_1110_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal trunc_ln125_fu_1106_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln125_1_fu_1103_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln125_1_fu_1120_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal sub_ln125_fu_1134_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal trunc_ln125_1_fu_1140_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_10_fu_1126_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln125_1_fu_1150_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln125_2_fu_1156_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln125_3_fu_1116_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln126_fu_1174_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_and_t_fu_1180_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln126_1_fu_1188_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_11_fu_1194_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal pos_fu_1166_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln45_fu_840_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln347_fu_1302_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln347_fu_1305_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln343_fu_1314_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln343_fu_1317_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln298_fu_1338_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln298_fu_1341_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln247_fu_1362_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_1_fu_1382_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_fu_1390_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln261_fu_1398_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln257_fu_1406_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln198_fu_1414_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln196_fu_1430_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln191_fu_1446_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln189_fu_1462_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln187_fu_1478_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln185_fu_1494_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_554_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln166_fu_1514_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_564_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_574_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_584_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln154_fu_1534_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln142_fu_1546_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln130_fu_1566_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (33 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_condition_1712 : BOOLEAN;
    signal ap_condition_1715 : BOOLEAN;
    signal ap_condition_1719 : BOOLEAN;
    signal ap_condition_1722 : BOOLEAN;
    signal ap_condition_1725 : BOOLEAN;
    signal ap_condition_1728 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component processor_xreg_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    xreg_U : component processor_xreg_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => xreg_address0,
        ce0 => xreg_ce0,
        we0 => xreg_we0,
        d0 => xreg_d0,
        q0 => xreg_q0,
        address1 => xreg_address1,
        ce1 => xreg_ce1,
        we1 => xreg_we1,
        d1 => xreg_d1,
        q1 => xreg_q1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    p_pc_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                p_pc <= ap_const_lv32_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                    p_pc <= grp_fu_594_p2;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
                    p_pc <= storemerge_reg_411;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state34) and ((((((((((funct3_reg_1656 = ap_const_lv3_6) and (op_code_reg_1652 = ap_const_lv7_63) and (icmp_ln107_reg_1929 = ap_const_lv1_0)) or ((funct3_reg_1656 = ap_const_lv3_7) and (op_code_reg_1652 = ap_const_lv7_63) and (icmp_ln113_reg_1925 = ap_const_lv1_1))) or ((funct3_reg_1656 = ap_const_lv3_5) and (op_code_reg_1652 = ap_const_lv7_63) and (icmp_ln101_reg_1933 = ap_const_lv1_1))) or ((funct3_reg_1656 = ap_const_lv3_4) and (op_code_reg_1652 = ap_const_lv7_63) and (icmp_ln95_reg_1937 = ap_const_lv1_0))) or ((funct3_reg_1656 = ap_const_lv3_3) and (op_code_reg_1652 = ap_const_lv7_63))) or ((funct3_reg_1656 = ap_const_lv3_2) and (op_code_reg_1652 = ap_const_lv7_63))) or (not((funct3_reg_1656 = ap_const_lv3_6)) and not((funct3_reg_1656 = ap_const_lv3_7)) and not((funct3_reg_1656 = ap_const_lv3_4)) and not((funct3_reg_1656 = ap_const_lv3_5)) and not((funct3_reg_1656 = ap_const_lv3_1)) and (op_code_reg_1652 = ap_const_lv7_63) and (icmp_ln83_reg_1945 = ap_const_lv1_0))) or ((funct3_reg_1656 
    = ap_const_lv3_1) and (op_code_reg_1652 = ap_const_lv7_63) and (icmp_ln89_reg_1941 = ap_const_lv1_1))) or (not((op_code_reg_1652 = ap_const_lv7_6F)) and not((op_code_reg_1652 = ap_const_lv7_67)) and not((op_code_reg_1652 = ap_const_lv7_63)))))) then 
                    p_pc <= grp_fu_598_p2;
                end if; 
            end if;
        end if;
    end process;


    p_0_0_02438_reg_508_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
                p_0_0_02438_reg_508 <= storemerge_reg_411;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state34) and ((((((((((funct3_reg_1656 = ap_const_lv3_6) and (op_code_reg_1652 = ap_const_lv7_63) and (icmp_ln107_reg_1929 = ap_const_lv1_0)) or ((funct3_reg_1656 = ap_const_lv3_7) and (op_code_reg_1652 = ap_const_lv7_63) and (icmp_ln113_reg_1925 = ap_const_lv1_1))) or ((funct3_reg_1656 = ap_const_lv3_5) and (op_code_reg_1652 = ap_const_lv7_63) and (icmp_ln101_reg_1933 = ap_const_lv1_1))) or ((funct3_reg_1656 = ap_const_lv3_4) and (op_code_reg_1652 = ap_const_lv7_63) and (icmp_ln95_reg_1937 = ap_const_lv1_0))) or ((funct3_reg_1656 = ap_const_lv3_3) and (op_code_reg_1652 = ap_const_lv7_63))) or ((funct3_reg_1656 = ap_const_lv3_2) and (op_code_reg_1652 = ap_const_lv7_63))) or (not((funct3_reg_1656 = ap_const_lv3_6)) and not((funct3_reg_1656 = ap_const_lv3_7)) and not((funct3_reg_1656 = ap_const_lv3_4)) and not((funct3_reg_1656 = ap_const_lv3_5)) and not((funct3_reg_1656 = ap_const_lv3_1)) and (op_code_reg_1652 = ap_const_lv7_63) and (icmp_ln83_reg_1945 = ap_const_lv1_0))) or ((funct3_reg_1656 
    = ap_const_lv3_1) and (op_code_reg_1652 = ap_const_lv7_63) and (icmp_ln89_reg_1941 = ap_const_lv1_1))) or (not((op_code_reg_1652 = ap_const_lv7_6F)) and not((op_code_reg_1652 = ap_const_lv7_67)) and not((op_code_reg_1652 = ap_const_lv7_63)))))) then 
                p_0_0_02438_reg_508 <= grp_fu_598_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                p_0_0_02438_reg_508 <= grp_fu_594_p2;
            end if; 
        end if;
    end process;

    result_29_ph_ph_reg_421_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state25) and (select_ln126_reg_1856 = ap_const_lv3_3))) then 
                result_29_ph_ph_reg_421 <= sext_ln136_fu_1554_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state25) and (select_ln126_reg_1856 = ap_const_lv3_2))) then 
                result_29_ph_ph_reg_421 <= sext_ln134_fu_1558_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state25) and (select_ln126_reg_1856 = ap_const_lv3_1))) then 
                result_29_ph_ph_reg_421 <= sext_ln132_fu_1562_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state25) and (select_ln126_reg_1856 = ap_const_lv3_0))) then 
                result_29_ph_ph_reg_421 <= sext_ln130_fu_1570_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
                result_29_ph_ph_reg_421 <= sext_ln144_fu_1542_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                result_29_ph_ph_reg_421 <= sext_ln142_fu_1550_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state21) and (select_ln126_reg_1856 = ap_const_lv3_3))) then 
                result_29_ph_ph_reg_421 <= zext_ln160_1_fu_1522_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state21) and (select_ln126_reg_1856 = ap_const_lv3_2))) then 
                result_29_ph_ph_reg_421 <= zext_ln158_1_fu_1526_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state21) and (select_ln126_reg_1856 = ap_const_lv3_1))) then 
                result_29_ph_ph_reg_421 <= zext_ln156_1_fu_1530_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state21) and (select_ln126_reg_1856 = ap_const_lv3_0))) then 
                result_29_ph_ph_reg_421 <= zext_ln154_1_fu_1538_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                result_29_ph_ph_reg_421 <= zext_ln168_1_fu_1510_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                result_29_ph_ph_reg_421 <= zext_ln166_1_fu_1518_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                result_29_ph_ph_reg_421 <= add_ln282_fu_1354_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                result_29_ph_ph_reg_421 <= sub_ln287_fu_1350_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                result_29_ph_ph_reg_421 <= lshr_ln343_fu_1321_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                result_29_ph_ph_reg_421 <= ashr_ln347_fu_1309_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
                result_29_ph_ph_reg_421 <= memory_q0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                result_29_ph_ph_reg_421 <= shl_ln247_fu_1365_p2;
            elsif (((funct3_reg_1656 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                result_29_ph_ph_reg_421 <= grp_fu_549_p2;
            elsif (((funct3_reg_1656 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                result_29_ph_ph_reg_421 <= zext_ln218_fu_1394_p1;
            elsif (((funct3_reg_1656 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                result_29_ph_ph_reg_421 <= zext_ln226_fu_1386_p1;
            elsif (((funct3_reg_1656 = ap_const_lv3_4) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                result_29_ph_ph_reg_421 <= xor_ln234_fu_1378_p2;
            elsif (((funct3_reg_1656 = ap_const_lv3_6) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                result_29_ph_ph_reg_421 <= or_ln238_fu_1374_p2;
            elsif (((funct3_reg_1656 = ap_const_lv3_7) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                result_29_ph_ph_reg_421 <= and_ln242_fu_1370_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                result_29_ph_ph_reg_421 <= shl_ln298_fu_1345_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                result_29_ph_ph_reg_421 <= zext_ln307_fu_1334_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                result_29_ph_ph_reg_421 <= zext_ln320_fu_1330_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                result_29_ph_ph_reg_421 <= xor_ln333_fu_1326_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                result_29_ph_ph_reg_421 <= or_ln358_fu_1298_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                result_29_ph_ph_reg_421 <= lshr_ln257_fu_1409_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                result_29_ph_ph_reg_421 <= ashr_ln261_fu_1401_p2;
            elsif (((op_code_reg_1652 = ap_const_lv7_37) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                result_29_ph_ph_reg_421 <= imm_U_fu_850_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                result_29_ph_ph_reg_421 <= and_ln367_fu_1358_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
                result_29_ph_ph_reg_421 <= add_ln65_fu_1620_p2;
            end if; 
        end if;
    end process;

    storemerge_reg_411_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                if ((op_code_reg_1652 = ap_const_lv7_6F)) then 
                    storemerge_reg_411 <= add_ln70_fu_1287_p2;
                elsif ((op_code_reg_1652 = ap_const_lv7_67)) then 
                    storemerge_reg_411 <= grp_fu_549_p2;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                funct12_reg_1665 <= memory_q0(31 downto 20);
                funct3_reg_1656 <= memory_q0(14 downto 12);
                funct7_reg_1660 <= memory_q0(31 downto 25);
                imm_I2_reg_1704 <= memory_q0(24 downto 20);
                imm_I_reg_1697 <= memory_q0(31 downto 20);
                op_code_reg_1652 <= op_code_fu_624_p1;
                rd_reg_1670 <= memory_q0(11 downto 7);
                tmp_1_reg_1686 <= memory_q0(7 downto 7);
                tmp_2_reg_1691 <= memory_q0(31 downto 31);
                tmp_3_reg_1711 <= memory_q0(30 downto 21);
                tmp_5_reg_1716 <= memory_q0(20 downto 20);
                tmp_6_reg_1721 <= memory_q0(19 downto 12);
                tmp_7_reg_1726 <= memory_q0(11 downto 7);
                tmp_8_reg_1731 <= memory_q0(31 downto 25);
                tmp_9_reg_1736 <= memory_q0(31 downto 12);
                tmp_reg_1676 <= memory_q0(11 downto 8);
                tmp_s_reg_1681 <= memory_q0(30 downto 25);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((funct3_reg_1656 = ap_const_lv3_5) and (op_code_reg_1652 = ap_const_lv7_63) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                icmp_ln101_reg_1933 <= grp_fu_537_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((funct3_reg_1656 = ap_const_lv3_6) and (op_code_reg_1652 = ap_const_lv7_63) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                icmp_ln107_reg_1929 <= grp_fu_531_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((funct3_reg_1656 = ap_const_lv3_7) and (op_code_reg_1652 = ap_const_lv7_63) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                icmp_ln113_reg_1925 <= grp_fu_531_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                icmp_ln246_reg_1815 <= icmp_ln246_fu_857_p2;
                    imm_U_reg_1766(31 downto 12) <= imm_U_fu_850_p3(31 downto 12);
                    sext_ln42_reg_1751(31 downto 1) <= sext_ln42_fu_822_p1(31 downto 1);
                sext_ln43_reg_1756 <= sext_ln43_fu_826_p1;
                source1_reg_1772 <= xreg_q1;
                source2_reg_1795 <= xreg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((funct3_reg_1656 = ap_const_lv3_0) and (op_code_reg_1652 = ap_const_lv7_63) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                icmp_ln83_reg_1945 <= grp_fu_543_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((funct3_reg_1656 = ap_const_lv3_1) and (op_code_reg_1652 = ap_const_lv7_63) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                icmp_ln89_reg_1941 <= grp_fu_543_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((funct3_reg_1656 = ap_const_lv3_4) and (op_code_reg_1652 = ap_const_lv7_63) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                icmp_ln95_reg_1937 <= grp_fu_537_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((funct3_reg_1656 = ap_const_lv3_0) and (op_code_reg_1652 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state3) and (select_ln181_fu_1047_p3 = ap_const_lv3_0))) then
                memory_addr_15_reg_1851 <= zext_ln185_fu_1085_p1(17 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((funct3_reg_1656 = ap_const_lv3_0) and (op_code_reg_1652 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state3) and (select_ln181_fu_1047_p3 = ap_const_lv3_1))) then
                memory_addr_16_reg_1846 <= zext_ln187_fu_1080_p1(17 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((funct3_reg_1656 = ap_const_lv3_0) and (op_code_reg_1652 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state3) and (select_ln181_fu_1047_p3 = ap_const_lv3_2))) then
                memory_addr_17_reg_1841 <= zext_ln189_fu_1075_p1(17 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((funct3_reg_1656 = ap_const_lv3_0) and (op_code_reg_1652 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state3) and (select_ln181_fu_1047_p3 = ap_const_lv3_3))) then
                memory_addr_18_reg_1836 <= zext_ln191_fu_1070_p1(17 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((funct3_reg_1656 = ap_const_lv3_1) and (op_code_reg_1652 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state3) and (select_ln181_fu_1047_p3 = ap_const_lv3_0))) then
                memory_addr_19_reg_1831 <= zext_ln196_fu_1065_p1(17 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((funct3_reg_1656 = ap_const_lv3_1) and (op_code_reg_1652 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state3) and (select_ln181_fu_1047_p3 = ap_const_lv3_2))) then
                memory_addr_20_reg_1826 <= zext_ln198_fu_1060_p1(17 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not((op_code_reg_1652 = ap_const_lv7_F)) and not((op_code_reg_1652 = ap_const_lv7_73)) and not((op_code_reg_1652 = ap_const_lv7_17)) and not((op_code_reg_1652 = ap_const_lv7_13)) and not((op_code_reg_1652 = ap_const_lv7_33)) and not((op_code_reg_1652 = ap_const_lv7_37)) and not((op_code_reg_1652 = ap_const_lv7_6F)) and not((op_code_reg_1652 = ap_const_lv7_67)) and not((op_code_reg_1652 = ap_const_lv7_63)) and not((op_code_reg_1652 = ap_const_lv7_3)) and not((op_code_reg_1652 = ap_const_lv7_23)) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not((funct7_reg_1660 = ap_const_lv7_0)) and not((funct7_reg_1660 = ap_const_lv7_20)) and (funct3_reg_1656 = ap_const_lv3_5) and (op_code_reg_1652 = ap_const_lv7_13) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not((funct7_reg_1660 = ap_const_lv7_0)) and not((funct7_reg_1660 = ap_const_lv7_20)) and (funct3_reg_1656 = ap_const_lv3_5) and (op_code_reg_1652 = ap_const_lv7_33) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not((funct7_reg_1660 = ap_const_lv7_0)) and not((funct7_reg_1660 
    = ap_const_lv7_20)) and (funct3_reg_1656 = ap_const_lv3_0) and (op_code_reg_1652 = ap_const_lv7_33) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((op_code_reg_1652 = ap_const_lv7_F) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((op_code_reg_1652 = ap_const_lv7_73) and (icmp_ln385_fu_862_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not((funct3_reg_1656 = ap_const_lv3_2)) and not((funct3_reg_1656 = ap_const_lv3_0)) and not((funct3_reg_1656 = ap_const_lv3_1)) and (op_code_reg_1652 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not((funct3_reg_1656 = ap_const_lv3_2)) and not((funct3_reg_1656 = ap_const_lv3_4)) and not((funct3_reg_1656 = ap_const_lv3_5)) and not((funct3_reg_1656 = ap_const_lv3_0)) and not((funct3_reg_1656 = ap_const_lv3_1)) and (op_code_reg_1652 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((funct3_reg_1656 = ap_const_lv3_3) and (op_code_reg_1652 = ap_const_lv7_33) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln246_fu_857_p2 = ap_const_lv1_0)) 
    or ((funct3_reg_1656 = ap_const_lv3_6) and (op_code_reg_1652 = ap_const_lv7_33) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln246_fu_857_p2 = ap_const_lv1_0)) or ((funct3_reg_1656 = ap_const_lv3_7) and (op_code_reg_1652 = ap_const_lv7_33) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln246_fu_857_p2 = ap_const_lv1_0)) or ((funct3_reg_1656 = ap_const_lv3_2) and (op_code_reg_1652 = ap_const_lv7_33) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln246_fu_857_p2 = ap_const_lv1_0)) or ((funct3_reg_1656 = ap_const_lv3_4) and (op_code_reg_1652 = ap_const_lv7_33) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln246_fu_857_p2 = ap_const_lv1_0)) or ((funct3_reg_1656 = ap_const_lv3_1) and (op_code_reg_1652 = ap_const_lv7_13) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln246_fu_857_p2 = ap_const_lv1_0)) or ((funct3_reg_1656 = ap_const_lv3_1) and (op_code_reg_1652 = ap_const_lv7_33) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln246_fu_857_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = 
    ap_CS_fsm_state3) and (((funct3_reg_1656 = ap_const_lv3_3) and (op_code_reg_1652 = ap_const_lv7_63)) or ((funct3_reg_1656 = ap_const_lv3_2) and (op_code_reg_1652 = ap_const_lv7_63)))))) then
                p_error <= ap_const_lv1_1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                p_pc_load_reg_1639 <= p_pc;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((op_code_reg_1652 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                select_ln126_reg_1856 <= select_ln126_fu_1202_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((op_code_reg_1652 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                select_ln181_reg_1822 <= select_ln181_fu_1047_p3;
            end if;
        end if;
    end process;
    sext_ln42_reg_1751(0) <= '0';
    imm_U_reg_1766(11 downto 0) <= "000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, op_code_reg_1652, funct3_reg_1656, funct7_reg_1660, ap_CS_fsm_state3, icmp_ln246_fu_857_p2, select_ln126_fu_1202_p3, grp_fu_531_p2, grp_fu_537_p2, grp_fu_543_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and ((op_code_reg_1652 = ap_const_lv7_6F) or (op_code_reg_1652 = ap_const_lv7_67)))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                elsif (((funct3_reg_1656 = ap_const_lv3_0) and (op_code_reg_1652 = ap_const_lv7_63) and (grp_fu_543_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state31;
                elsif (((funct3_reg_1656 = ap_const_lv3_1) and (op_code_reg_1652 = ap_const_lv7_63) and (grp_fu_543_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                elsif (((funct3_reg_1656 = ap_const_lv3_4) and (op_code_reg_1652 = ap_const_lv7_63) and (grp_fu_537_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                elsif (((funct3_reg_1656 = ap_const_lv3_5) and (op_code_reg_1652 = ap_const_lv7_63) and (grp_fu_537_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                elsif (((funct3_reg_1656 = ap_const_lv3_6) and (op_code_reg_1652 = ap_const_lv7_63) and (grp_fu_531_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                elsif (((funct3_reg_1656 = ap_const_lv3_7) and (op_code_reg_1652 = ap_const_lv7_63) and (grp_fu_531_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (((((funct3_reg_1656 = ap_const_lv3_0) and (op_code_reg_1652 = ap_const_lv7_3) and (select_ln126_fu_1202_p3 = ap_const_lv3_1)) or ((funct3_reg_1656 = ap_const_lv3_0) and (op_code_reg_1652 = ap_const_lv7_3) and (select_ln126_fu_1202_p3 = ap_const_lv3_3))) or ((funct3_reg_1656 = ap_const_lv3_0) and (op_code_reg_1652 = ap_const_lv7_3) and (select_ln126_fu_1202_p3 = ap_const_lv3_2))) or ((funct3_reg_1656 = ap_const_lv3_0) and (op_code_reg_1652 = ap_const_lv7_3) and (select_ln126_fu_1202_p3 = ap_const_lv3_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                elsif (((funct3_reg_1656 = ap_const_lv3_1) and (op_code_reg_1652 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state3) and (select_ln126_fu_1202_p3 = ap_const_lv3_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                elsif (((funct3_reg_1656 = ap_const_lv3_1) and (op_code_reg_1652 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state3) and (select_ln126_fu_1202_p3 = ap_const_lv3_2))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                elsif ((not((select_ln126_fu_1202_p3 = ap_const_lv3_7)) and not((select_ln126_fu_1202_p3 = ap_const_lv3_6)) and not((select_ln126_fu_1202_p3 = ap_const_lv3_5)) and not((select_ln126_fu_1202_p3 = ap_const_lv3_4)) and (funct3_reg_1656 = ap_const_lv3_4) and (op_code_reg_1652 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                elsif (((funct3_reg_1656 = ap_const_lv3_5) and (op_code_reg_1652 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state3) and (select_ln126_fu_1202_p3 = ap_const_lv3_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                elsif (((funct3_reg_1656 = ap_const_lv3_5) and (op_code_reg_1652 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state3) and (select_ln126_fu_1202_p3 = ap_const_lv3_2))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                elsif (((funct3_reg_1656 = ap_const_lv3_2) and (op_code_reg_1652 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                elsif (((funct7_reg_1660 = ap_const_lv7_0) and (funct3_reg_1656 = ap_const_lv3_5) and (op_code_reg_1652 = ap_const_lv7_13) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                elsif (((funct7_reg_1660 = ap_const_lv7_20) and (funct3_reg_1656 = ap_const_lv3_5) and (op_code_reg_1652 = ap_const_lv7_13) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                elsif (((funct3_reg_1656 = ap_const_lv3_1) and (op_code_reg_1652 = ap_const_lv7_13) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln246_fu_857_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                elsif ((not((funct3_reg_1656 = ap_const_lv3_5)) and not((funct3_reg_1656 = ap_const_lv3_1)) and (op_code_reg_1652 = ap_const_lv7_13) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                elsif (((funct3_reg_1656 = ap_const_lv3_7) and (op_code_reg_1652 = ap_const_lv7_33) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln246_fu_857_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                elsif (((funct7_reg_1660 = ap_const_lv7_0) and (funct3_reg_1656 = ap_const_lv3_0) and (op_code_reg_1652 = ap_const_lv7_33) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                elsif (((funct7_reg_1660 = ap_const_lv7_20) and (funct3_reg_1656 = ap_const_lv3_0) and (op_code_reg_1652 = ap_const_lv7_33) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                elsif (((funct3_reg_1656 = ap_const_lv3_1) and (op_code_reg_1652 = ap_const_lv7_33) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln246_fu_857_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                elsif (((funct3_reg_1656 = ap_const_lv3_2) and (op_code_reg_1652 = ap_const_lv7_33) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln246_fu_857_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                elsif (((funct3_reg_1656 = ap_const_lv3_3) and (op_code_reg_1652 = ap_const_lv7_33) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln246_fu_857_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                elsif (((funct3_reg_1656 = ap_const_lv3_4) and (op_code_reg_1652 = ap_const_lv7_33) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln246_fu_857_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                elsif (((funct7_reg_1660 = ap_const_lv7_0) and (funct3_reg_1656 = ap_const_lv3_5) and (op_code_reg_1652 = ap_const_lv7_33) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                elsif (((funct7_reg_1660 = ap_const_lv7_20) and (funct3_reg_1656 = ap_const_lv3_5) and (op_code_reg_1652 = ap_const_lv7_33) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                elsif (((funct3_reg_1656 = ap_const_lv3_6) and (op_code_reg_1652 = ap_const_lv7_33) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln246_fu_857_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and ((((((((((((((((((((not((op_code_reg_1652 = ap_const_lv7_17)) and not((op_code_reg_1652 = ap_const_lv7_13)) and not((op_code_reg_1652 = ap_const_lv7_37)) and not((op_code_reg_1652 = ap_const_lv7_6F)) and not((op_code_reg_1652 = ap_const_lv7_67)) and not((op_code_reg_1652 = ap_const_lv7_3)) and not((funct3_reg_1656 = ap_const_lv3_0)) and not((funct3_reg_1656 = ap_const_lv3_1)) and (funct3_reg_1656 = ap_const_lv3_3) and (icmp_ln246_fu_857_p2 = ap_const_lv1_0)) or (not((op_code_reg_1652 = ap_const_lv7_17)) and not((op_code_reg_1652 = ap_const_lv7_13)) and not((op_code_reg_1652 = ap_const_lv7_37)) and not((op_code_reg_1652 = ap_const_lv7_6F)) and not((op_code_reg_1652 = ap_const_lv7_67)) and not((op_code_reg_1652 = ap_const_lv7_3)) and not((funct3_reg_1656 = ap_const_lv3_0)) and not((funct3_reg_1656 = ap_const_lv3_1)) and (funct3_reg_1656 = ap_const_lv3_2) and (icmp_ln246_fu_857_p2 = ap_const_lv1_0))) or (not((op_code_reg_1652 = ap_const_lv7_17)) and not((op_code_reg_1652 
    = ap_const_lv7_13)) and not((op_code_reg_1652 = ap_const_lv7_37)) and not((op_code_reg_1652 = ap_const_lv7_6F)) and not((op_code_reg_1652 = ap_const_lv7_67)) and not((op_code_reg_1652 = ap_const_lv7_63)) and not((funct3_reg_1656 = ap_const_lv3_2)) and not((funct3_reg_1656 = ap_const_lv3_4)) and not((funct3_reg_1656 = ap_const_lv3_5)) and not((funct3_reg_1656 = ap_const_lv3_0)) and not((funct3_reg_1656 = ap_const_lv3_1)) and (icmp_ln246_fu_857_p2 = ap_const_lv1_0))) or (not((op_code_reg_1652 = ap_const_lv7_17)) and not((funct7_reg_1660 = ap_const_lv7_0)) and not((funct7_reg_1660 = ap_const_lv7_20)) and not((op_code_reg_1652 = ap_const_lv7_37)) and not((funct3_reg_1656 = ap_const_lv3_3)) and not((op_code_reg_1652 = ap_const_lv7_6F)) and not((op_code_reg_1652 = ap_const_lv7_67)) and not((op_code_reg_1652 = ap_const_lv7_63)) and not((funct3_reg_1656 = ap_const_lv3_2)) and not((funct3_reg_1656 = ap_const_lv3_4)) and not((op_code_reg_1652 = ap_const_lv7_3)) and not((funct3_reg_1656 = ap_const_lv3_1)) and (funct3_reg_1656 
    = ap_const_lv3_5))) or (not((op_code_reg_1652 = ap_const_lv7_17)) and not((op_code_reg_1652 = ap_const_lv7_37)) and not((op_code_reg_1652 = ap_const_lv7_6F)) and not((op_code_reg_1652 = ap_const_lv7_67)) and not((op_code_reg_1652 = ap_const_lv7_63)) and not((op_code_reg_1652 = ap_const_lv7_3)) and not((funct3_reg_1656 = ap_const_lv3_0)) and (funct3_reg_1656 = ap_const_lv3_1) and (icmp_ln246_fu_857_p2 = ap_const_lv1_0))) or (not((op_code_reg_1652 = ap_const_lv7_17)) and not((op_code_reg_1652 = ap_const_lv7_13)) and not((op_code_reg_1652 = ap_const_lv7_37)) and not((op_code_reg_1652 = ap_const_lv7_6F)) and not((op_code_reg_1652 = ap_const_lv7_67)) and not((op_code_reg_1652 = ap_const_lv7_63)) and not((op_code_reg_1652 = ap_const_lv7_3)) and not((funct3_reg_1656 = ap_const_lv3_0)) and (funct3_reg_1656 = ap_const_lv3_4) and (icmp_ln246_fu_857_p2 = ap_const_lv1_0))) or (not((op_code_reg_1652 = ap_const_lv7_17)) and not((op_code_reg_1652 = ap_const_lv7_13)) and not((funct7_reg_1660 = ap_const_lv7_0)) and not((funct7_reg_1660 
    = ap_const_lv7_20)) and not((op_code_reg_1652 = ap_const_lv7_37)) and not((op_code_reg_1652 = ap_const_lv7_6F)) and not((op_code_reg_1652 = ap_const_lv7_67)) and not((op_code_reg_1652 = ap_const_lv7_63)) and not((op_code_reg_1652 = ap_const_lv7_3)) and (funct3_reg_1656 = ap_const_lv3_0))) or (not((op_code_reg_1652 = ap_const_lv7_17)) and not((op_code_reg_1652 = ap_const_lv7_13)) and not((op_code_reg_1652 = ap_const_lv7_33)) and not((op_code_reg_1652 = ap_const_lv7_37)) and not((op_code_reg_1652 = ap_const_lv7_6F)) and not((op_code_reg_1652 = ap_const_lv7_67)) and not((op_code_reg_1652 = ap_const_lv7_63)) and not((op_code_reg_1652 = ap_const_lv7_3)))) or (not((op_code_reg_1652 = ap_const_lv7_17)) and not((funct7_reg_1660 = ap_const_lv7_0)) and not((funct7_reg_1660 = ap_const_lv7_20)) and not((op_code_reg_1652 = ap_const_lv7_37)) and not((op_code_reg_1652 = ap_const_lv7_6F)) and not((op_code_reg_1652 = ap_const_lv7_67)) and not((op_code_reg_1652 = ap_const_lv7_63)) and not((op_code_reg_1652 = ap_const_lv7_3)) and 
    not((funct3_reg_1656 = ap_const_lv3_1)) and (funct3_reg_1656 = ap_const_lv3_5) and (op_code_reg_1652 = ap_const_lv7_13))) or (not((op_code_reg_1652 = ap_const_lv7_17)) and not((op_code_reg_1652 = ap_const_lv7_37)) and not((op_code_reg_1652 = ap_const_lv7_6F)) and not((op_code_reg_1652 = ap_const_lv7_67)) and not((op_code_reg_1652 = ap_const_lv7_63)) and not((op_code_reg_1652 = ap_const_lv7_3)) and (funct3_reg_1656 = ap_const_lv3_1) and (op_code_reg_1652 = ap_const_lv7_13) and (icmp_ln246_fu_857_p2 = ap_const_lv1_0))) or (not((op_code_reg_1652 = ap_const_lv7_17)) and not((op_code_reg_1652 = ap_const_lv7_37)) and not((op_code_reg_1652 = ap_const_lv7_6F)) and not((op_code_reg_1652 = ap_const_lv7_67)) and not((op_code_reg_1652 = ap_const_lv7_63)) and not((op_code_reg_1652 = ap_const_lv7_3)) and (op_code_reg_1652 = ap_const_lv7_23))) or (not((op_code_reg_1652 = ap_const_lv7_17)) and not((op_code_reg_1652 = ap_const_lv7_37)) and not((op_code_reg_1652 = ap_const_lv7_6F)) and not((op_code_reg_1652 = ap_const_lv7_67)) 
    and not((op_code_reg_1652 = ap_const_lv7_63)) and not((funct3_reg_1656 = ap_const_lv3_2)) and not((funct3_reg_1656 = ap_const_lv3_4)) and not((funct3_reg_1656 = ap_const_lv3_5)) and not((funct3_reg_1656 = ap_const_lv3_0)) and not((funct3_reg_1656 = ap_const_lv3_1)) and (op_code_reg_1652 = ap_const_lv7_3))) or (not((op_code_reg_1652 = ap_const_lv7_17)) and not((op_code_reg_1652 = ap_const_lv7_37)) and not((op_code_reg_1652 = ap_const_lv7_6F)) and not((op_code_reg_1652 = ap_const_lv7_67)) and not((funct3_reg_1656 = ap_const_lv3_6)) and not((funct3_reg_1656 = ap_const_lv3_4)) and not((funct3_reg_1656 = ap_const_lv3_5)) and not((funct3_reg_1656 = ap_const_lv3_0)) and not((funct3_reg_1656 = ap_const_lv3_1)) and (op_code_reg_1652 = ap_const_lv7_63) and (grp_fu_531_p2 = ap_const_lv1_1))) or (not((op_code_reg_1652 = ap_const_lv7_17)) and not((op_code_reg_1652 = ap_const_lv7_37)) and not((op_code_reg_1652 = ap_const_lv7_6F)) and not((op_code_reg_1652 = ap_const_lv7_67)) and not((funct3_reg_1656 = ap_const_lv3_4)) and not((funct3_reg_1656 
    = ap_const_lv3_5)) and not((funct3_reg_1656 = ap_const_lv3_0)) and not((funct3_reg_1656 = ap_const_lv3_1)) and (funct3_reg_1656 = ap_const_lv3_6) and (op_code_reg_1652 = ap_const_lv7_63) and (grp_fu_531_p2 = ap_const_lv1_0))) or (not((op_code_reg_1652 = ap_const_lv7_17)) and not((op_code_reg_1652 = ap_const_lv7_37)) and not((op_code_reg_1652 = ap_const_lv7_6F)) and not((op_code_reg_1652 = ap_const_lv7_67)) and not((funct3_reg_1656 = ap_const_lv3_4)) and not((funct3_reg_1656 = ap_const_lv3_0)) and not((funct3_reg_1656 = ap_const_lv3_1)) and (funct3_reg_1656 = ap_const_lv3_5) and (op_code_reg_1652 = ap_const_lv7_63) and (grp_fu_537_p2 = ap_const_lv1_1))) or (not((op_code_reg_1652 = ap_const_lv7_17)) and not((op_code_reg_1652 = ap_const_lv7_37)) and not((op_code_reg_1652 = ap_const_lv7_6F)) and not((op_code_reg_1652 = ap_const_lv7_67)) and not((funct3_reg_1656 = ap_const_lv3_0)) and not((funct3_reg_1656 = ap_const_lv3_1)) and (funct3_reg_1656 = ap_const_lv3_4) and (op_code_reg_1652 = ap_const_lv7_63) and (grp_fu_537_p2 
    = ap_const_lv1_0))) or (not((op_code_reg_1652 = ap_const_lv7_17)) and not((op_code_reg_1652 = ap_const_lv7_37)) and not((op_code_reg_1652 = ap_const_lv7_6F)) and not((op_code_reg_1652 = ap_const_lv7_67)) and not((funct3_reg_1656 = ap_const_lv3_0)) and not((funct3_reg_1656 = ap_const_lv3_1)) and (funct3_reg_1656 = ap_const_lv3_3) and (op_code_reg_1652 = ap_const_lv7_63))) or (not((op_code_reg_1652 = ap_const_lv7_17)) and not((op_code_reg_1652 = ap_const_lv7_37)) and not((op_code_reg_1652 = ap_const_lv7_6F)) and not((op_code_reg_1652 = ap_const_lv7_67)) and not((funct3_reg_1656 = ap_const_lv3_0)) and not((funct3_reg_1656 = ap_const_lv3_1)) and (funct3_reg_1656 = ap_const_lv3_2) and (op_code_reg_1652 = ap_const_lv7_63))) or (not((op_code_reg_1652 = ap_const_lv7_17)) and not((op_code_reg_1652 = ap_const_lv7_37)) and not((op_code_reg_1652 = ap_const_lv7_6F)) and not((op_code_reg_1652 = ap_const_lv7_67)) and not((funct3_reg_1656 = ap_const_lv3_0)) and (funct3_reg_1656 = ap_const_lv3_1) and (op_code_reg_1652 = ap_const_lv7_63) 
    and (grp_fu_543_p2 = ap_const_lv1_1))) or (not((op_code_reg_1652 = ap_const_lv7_17)) and not((op_code_reg_1652 = ap_const_lv7_37)) and not((op_code_reg_1652 = ap_const_lv7_6F)) and not((op_code_reg_1652 = ap_const_lv7_67)) and (funct3_reg_1656 = ap_const_lv3_0) and (op_code_reg_1652 = ap_const_lv7_63) and (grp_fu_543_p2 = ap_const_lv1_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and ((op_code_reg_1652 = ap_const_lv7_37) or ((((not((funct3_reg_1656 = ap_const_lv3_4)) and not((select_ln126_fu_1202_p3 = ap_const_lv3_0)) and not((select_ln126_fu_1202_p3 = ap_const_lv3_2)) and not((funct3_reg_1656 = ap_const_lv3_0)) and (funct3_reg_1656 = ap_const_lv3_5) and (op_code_reg_1652 = ap_const_lv7_3)) or (not((select_ln126_fu_1202_p3 = ap_const_lv3_1)) and not((select_ln126_fu_1202_p3 = ap_const_lv3_3)) and not((select_ln126_fu_1202_p3 = ap_const_lv3_0)) and not((select_ln126_fu_1202_p3 = ap_const_lv3_2)) and (funct3_reg_1656 = ap_const_lv3_4) and (op_code_reg_1652 = ap_const_lv7_3))) or (not((select_ln126_fu_1202_p3 = ap_const_lv3_0)) and not((select_ln126_fu_1202_p3 = ap_const_lv3_2)) and not((funct3_reg_1656 = ap_const_lv3_0)) and (funct3_reg_1656 = ap_const_lv3_1) and (op_code_reg_1652 = ap_const_lv7_3))) or (not((select_ln126_fu_1202_p3 = ap_const_lv3_1)) and not((select_ln126_fu_1202_p3 = ap_const_lv3_3)) and not((select_ln126_fu_1202_p3 = ap_const_lv3_0)) 
    and not((select_ln126_fu_1202_p3 = ap_const_lv3_2)) and (funct3_reg_1656 = ap_const_lv3_0) and (op_code_reg_1652 = ap_const_lv7_3)))))) then
                    ap_NS_fsm <= ap_ST_fsm_state34;
                else
                    ap_NS_fsm <= ap_ST_fsm_state33;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln125_1_fu_1120_p2 <= std_logic_vector(unsigned(trunc_ln125_fu_1106_p1) + unsigned(sext_ln125_1_fu_1103_p1));
    add_ln125_fu_1110_p2 <= std_logic_vector(unsigned(zext_ln125_fu_1096_p1) + unsigned(sext_ln125_fu_1100_p1));
    add_ln180_1_fu_965_p2 <= std_logic_vector(unsigned(trunc_ln180_fu_951_p1) + unsigned(sext_ln180_1_fu_947_p1));
    add_ln180_fu_955_p2 <= std_logic_vector(unsigned(zext_ln180_fu_939_p1) + unsigned(sext_ln180_fu_943_p1));
    add_ln282_fu_1354_p2 <= std_logic_vector(unsigned(source2_reg_1795) + unsigned(source1_reg_1772));
    add_ln65_fu_1620_p2 <= std_logic_vector(unsigned(p_pc_load_reg_1639) + unsigned(imm_U_reg_1766));
    add_ln70_fu_1287_p2 <= std_logic_vector(unsigned(p_pc_load_reg_1639) + unsigned(sext_ln45_fu_840_p1));
    and_ln242_fu_1370_p2 <= (source1_reg_1772 and sext_ln43_reg_1756);
    and_ln367_fu_1358_p2 <= (source2_reg_1795 and source1_reg_1772);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;
    ap_ST_fsm_state1_blk <= ap_const_logic_0;
    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;
    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_condition_1712_assign_proc : process(funct3_reg_1656, select_ln181_reg_1822, ap_CS_fsm_state18)
    begin
                ap_condition_1712 <= ((funct3_reg_1656 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state18) and (select_ln181_reg_1822 = ap_const_lv3_2));
    end process;


    ap_condition_1715_assign_proc : process(funct3_reg_1656, select_ln181_reg_1822, ap_CS_fsm_state18)
    begin
                ap_condition_1715 <= ((funct3_reg_1656 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state18) and (select_ln181_reg_1822 = ap_const_lv3_0));
    end process;


    ap_condition_1719_assign_proc : process(funct3_reg_1656, select_ln181_reg_1822, ap_CS_fsm_state18)
    begin
                ap_condition_1719 <= ((funct3_reg_1656 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state18) and (select_ln181_reg_1822 = ap_const_lv3_3));
    end process;


    ap_condition_1722_assign_proc : process(funct3_reg_1656, select_ln181_reg_1822, ap_CS_fsm_state18)
    begin
                ap_condition_1722 <= ((funct3_reg_1656 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state18) and (select_ln181_reg_1822 = ap_const_lv3_2));
    end process;


    ap_condition_1725_assign_proc : process(funct3_reg_1656, select_ln181_reg_1822, ap_CS_fsm_state18)
    begin
                ap_condition_1725 <= ((funct3_reg_1656 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state18) and (select_ln181_reg_1822 = ap_const_lv3_1));
    end process;


    ap_condition_1728_assign_proc : process(funct3_reg_1656, select_ln181_reg_1822, ap_CS_fsm_state18)
    begin
                ap_condition_1728 <= ((funct3_reg_1656 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state18) and (select_ln181_reg_1822 = ap_const_lv3_0));
    end process;


    ap_phi_mux_p_0_0_02438_phi_fu_511_p16_assign_proc : process(op_code_reg_1652, funct3_reg_1656, icmp_ln113_reg_1925, icmp_ln107_reg_1929, icmp_ln101_reg_1933, icmp_ln95_reg_1937, icmp_ln89_reg_1941, icmp_ln83_reg_1945, p_0_0_02438_reg_508, grp_fu_598_p2, ap_CS_fsm_state34)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state34) and ((((((((((funct3_reg_1656 = ap_const_lv3_6) and (op_code_reg_1652 = ap_const_lv7_63) and (icmp_ln107_reg_1929 = ap_const_lv1_0)) or ((funct3_reg_1656 = ap_const_lv3_7) and (op_code_reg_1652 = ap_const_lv7_63) and (icmp_ln113_reg_1925 = ap_const_lv1_1))) or ((funct3_reg_1656 = ap_const_lv3_5) and (op_code_reg_1652 = ap_const_lv7_63) and (icmp_ln101_reg_1933 = ap_const_lv1_1))) or ((funct3_reg_1656 = ap_const_lv3_4) and (op_code_reg_1652 = ap_const_lv7_63) and (icmp_ln95_reg_1937 = ap_const_lv1_0))) or ((funct3_reg_1656 = ap_const_lv3_3) and (op_code_reg_1652 = ap_const_lv7_63))) or ((funct3_reg_1656 = ap_const_lv3_2) and (op_code_reg_1652 = ap_const_lv7_63))) or (not((funct3_reg_1656 = ap_const_lv3_6)) and not((funct3_reg_1656 = ap_const_lv3_7)) and not((funct3_reg_1656 = ap_const_lv3_4)) and not((funct3_reg_1656 = ap_const_lv3_5)) and not((funct3_reg_1656 = ap_const_lv3_1)) and (op_code_reg_1652 = ap_const_lv7_63) and (icmp_ln83_reg_1945 = ap_const_lv1_0))) or ((funct3_reg_1656 
    = ap_const_lv3_1) and (op_code_reg_1652 = ap_const_lv7_63) and (icmp_ln89_reg_1941 = ap_const_lv1_1))) or (not((op_code_reg_1652 = ap_const_lv7_6F)) and not((op_code_reg_1652 = ap_const_lv7_67)) and not((op_code_reg_1652 = ap_const_lv7_63)))))) then 
            ap_phi_mux_p_0_0_02438_phi_fu_511_p16 <= grp_fu_598_p2;
        else 
            ap_phi_mux_p_0_0_02438_phi_fu_511_p16 <= p_0_0_02438_reg_508;
        end if; 
    end process;

    ashr_ln261_fu_1401_p2 <= std_logic_vector(shift_right(signed(source1_reg_1772),to_integer(unsigned('0' & zext_ln261_fu_1398_p1(31-1 downto 0)))));
    ashr_ln347_fu_1309_p2 <= std_logic_vector(shift_right(signed(source1_reg_1772),to_integer(unsigned('0' & zext_ln347_fu_1305_p1(31-1 downto 0)))));
    error <= p_error;

    grp_fu_531_p0_assign_proc : process(xreg_q1, op_code_reg_1652, funct3_reg_1656, ap_CS_fsm_state3, source1_reg_1772, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_531_p0 <= source1_reg_1772;
        elsif ((((funct3_reg_1656 = ap_const_lv3_6) and (op_code_reg_1652 = ap_const_lv7_63) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((funct3_reg_1656 = ap_const_lv3_7) and (op_code_reg_1652 = ap_const_lv7_63) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            grp_fu_531_p0 <= xreg_q1;
        else 
            grp_fu_531_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_531_p1_assign_proc : process(xreg_q0, op_code_reg_1652, funct3_reg_1656, ap_CS_fsm_state3, source2_reg_1795, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            grp_fu_531_p1 <= source2_reg_1795;
        elsif ((((funct3_reg_1656 = ap_const_lv3_6) and (op_code_reg_1652 = ap_const_lv7_63) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((funct3_reg_1656 = ap_const_lv3_7) and (op_code_reg_1652 = ap_const_lv7_63) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            grp_fu_531_p1 <= xreg_q0;
        else 
            grp_fu_531_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_531_p2 <= "1" when (unsigned(grp_fu_531_p0) < unsigned(grp_fu_531_p1)) else "0";

    grp_fu_537_p0_assign_proc : process(xreg_q1, op_code_reg_1652, funct3_reg_1656, ap_CS_fsm_state3, source1_reg_1772, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_537_p0 <= source1_reg_1772;
        elsif ((((funct3_reg_1656 = ap_const_lv3_4) and (op_code_reg_1652 = ap_const_lv7_63) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((funct3_reg_1656 = ap_const_lv3_5) and (op_code_reg_1652 = ap_const_lv7_63) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            grp_fu_537_p0 <= xreg_q1;
        else 
            grp_fu_537_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_537_p1_assign_proc : process(xreg_q0, op_code_reg_1652, funct3_reg_1656, ap_CS_fsm_state3, source2_reg_1795, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_537_p1 <= source2_reg_1795;
        elsif ((((funct3_reg_1656 = ap_const_lv3_4) and (op_code_reg_1652 = ap_const_lv7_63) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((funct3_reg_1656 = ap_const_lv3_5) and (op_code_reg_1652 = ap_const_lv7_63) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            grp_fu_537_p1 <= xreg_q0;
        else 
            grp_fu_537_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_537_p2 <= "1" when (signed(grp_fu_537_p0) < signed(grp_fu_537_p1)) else "0";
    grp_fu_543_p2 <= "1" when (xreg_q1 = xreg_q0) else "0";

    grp_fu_549_p0_assign_proc : process(xreg_q1, ap_CS_fsm_state3, source1_reg_1772, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fu_549_p0 <= source1_reg_1772;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_549_p0 <= xreg_q1;
        else 
            grp_fu_549_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_549_p1_assign_proc : process(ap_CS_fsm_state3, sext_ln43_fu_826_p1, sext_ln43_reg_1756, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fu_549_p1 <= sext_ln43_reg_1756;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_fu_549_p1 <= sext_ln43_fu_826_p1;
        else 
            grp_fu_549_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_549_p2 <= std_logic_vector(unsigned(grp_fu_549_p0) + unsigned(grp_fu_549_p1));
    grp_fu_554_p4 <= memory_q0(31 downto 16);
    grp_fu_564_p4 <= memory_q0(31 downto 24);
    grp_fu_574_p4 <= memory_q0(23 downto 16);
    grp_fu_584_p4 <= memory_q0(15 downto 8);
    grp_fu_594_p2 <= std_logic_vector(unsigned(p_pc_load_reg_1639) + unsigned(sext_ln42_reg_1751));
    grp_fu_598_p2 <= std_logic_vector(unsigned(p_pc_load_reg_1639) + unsigned(ap_const_lv32_4));
    icmp_ln246_fu_857_p2 <= "1" when (funct7_reg_1660 = ap_const_lv7_0) else "0";
    icmp_ln385_fu_862_p2 <= "1" when (funct12_reg_1665 = ap_const_lv12_0) else "0";
    imm_B_fu_812_p6 <= ((((tmp_2_reg_1691 & tmp_1_reg_1686) & tmp_s_reg_1681) & tmp_reg_1676) & ap_const_lv1_0);
    imm_J_fu_830_p6 <= ((((tmp_2_reg_1691 & tmp_6_reg_1721) & tmp_5_reg_1716) & tmp_3_reg_1711) & ap_const_lv1_0);
    imm_U_fu_850_p3 <= (tmp_9_reg_1736 & ap_const_lv12_0);
    lshr_ln257_fu_1409_p2 <= std_logic_vector(shift_right(unsigned(source1_reg_1772),to_integer(unsigned('0' & zext_ln257_fu_1406_p1(31-1 downto 0)))));
    lshr_ln343_fu_1321_p2 <= std_logic_vector(shift_right(unsigned(source1_reg_1772),to_integer(unsigned('0' & zext_ln343_fu_1317_p1(31-1 downto 0)))));
    lshr_ln_fu_609_p4 <= p_pc(18 downto 2);

    memory_address0_assign_proc : process(ap_CS_fsm_state1, op_code_reg_1652, funct3_reg_1656, ap_CS_fsm_state3, select_ln181_fu_1047_p3, select_ln181_reg_1822, memory_addr_20_reg_1826, memory_addr_19_reg_1831, memory_addr_18_reg_1836, memory_addr_17_reg_1841, memory_addr_16_reg_1846, memory_addr_15_reg_1851, select_ln126_fu_1202_p3, zext_ln33_fu_619_p1, zext_ln202_fu_1055_p1, zext_ln198_fu_1060_p1, zext_ln196_fu_1065_p1, zext_ln191_fu_1070_p1, zext_ln189_fu_1075_p1, zext_ln187_fu_1080_p1, zext_ln185_fu_1085_p1, zext_ln168_fu_1210_p1, zext_ln166_fu_1215_p1, zext_ln160_fu_1220_p1, zext_ln158_fu_1225_p1, zext_ln156_fu_1230_p1, zext_ln154_fu_1235_p1, zext_ln149_fu_1240_p1, zext_ln144_fu_1245_p1, zext_ln142_fu_1250_p1, zext_ln136_fu_1255_p1, zext_ln134_fu_1260_p1, zext_ln132_fu_1265_p1, zext_ln130_fu_1270_p1, ap_CS_fsm_state18)
    begin
        if (((funct3_reg_1656 = ap_const_lv3_0) and (op_code_reg_1652 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state18) and (select_ln181_reg_1822 = ap_const_lv3_0))) then 
            memory_address0 <= memory_addr_15_reg_1851;
        elsif (((funct3_reg_1656 = ap_const_lv3_0) and (op_code_reg_1652 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state18) and (select_ln181_reg_1822 = ap_const_lv3_1))) then 
            memory_address0 <= memory_addr_16_reg_1846;
        elsif (((funct3_reg_1656 = ap_const_lv3_0) and (op_code_reg_1652 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state18) and (select_ln181_reg_1822 = ap_const_lv3_2))) then 
            memory_address0 <= memory_addr_17_reg_1841;
        elsif (((funct3_reg_1656 = ap_const_lv3_0) and (op_code_reg_1652 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state18) and (select_ln181_reg_1822 = ap_const_lv3_3))) then 
            memory_address0 <= memory_addr_18_reg_1836;
        elsif (((funct3_reg_1656 = ap_const_lv3_1) and (op_code_reg_1652 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state18) and (select_ln181_reg_1822 = ap_const_lv3_0))) then 
            memory_address0 <= memory_addr_19_reg_1831;
        elsif (((funct3_reg_1656 = ap_const_lv3_1) and (op_code_reg_1652 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state18) and (select_ln181_reg_1822 = ap_const_lv3_2))) then 
            memory_address0 <= memory_addr_20_reg_1826;
        elsif (((funct3_reg_1656 = ap_const_lv3_0) and (op_code_reg_1652 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state3) and (select_ln126_fu_1202_p3 = ap_const_lv3_0))) then 
            memory_address0 <= zext_ln130_fu_1270_p1(17 - 1 downto 0);
        elsif (((funct3_reg_1656 = ap_const_lv3_0) and (op_code_reg_1652 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state3) and (select_ln126_fu_1202_p3 = ap_const_lv3_1))) then 
            memory_address0 <= zext_ln132_fu_1265_p1(17 - 1 downto 0);
        elsif (((funct3_reg_1656 = ap_const_lv3_0) and (op_code_reg_1652 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state3) and (select_ln126_fu_1202_p3 = ap_const_lv3_2))) then 
            memory_address0 <= zext_ln134_fu_1260_p1(17 - 1 downto 0);
        elsif (((funct3_reg_1656 = ap_const_lv3_0) and (op_code_reg_1652 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state3) and (select_ln126_fu_1202_p3 = ap_const_lv3_3))) then 
            memory_address0 <= zext_ln136_fu_1255_p1(17 - 1 downto 0);
        elsif (((funct3_reg_1656 = ap_const_lv3_1) and (op_code_reg_1652 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state3) and (select_ln126_fu_1202_p3 = ap_const_lv3_0))) then 
            memory_address0 <= zext_ln142_fu_1250_p1(17 - 1 downto 0);
        elsif (((funct3_reg_1656 = ap_const_lv3_1) and (op_code_reg_1652 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state3) and (select_ln126_fu_1202_p3 = ap_const_lv3_2))) then 
            memory_address0 <= zext_ln144_fu_1245_p1(17 - 1 downto 0);
        elsif (((funct3_reg_1656 = ap_const_lv3_2) and (op_code_reg_1652 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            memory_address0 <= zext_ln149_fu_1240_p1(17 - 1 downto 0);
        elsif (((funct3_reg_1656 = ap_const_lv3_4) and (op_code_reg_1652 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state3) and (select_ln126_fu_1202_p3 = ap_const_lv3_0))) then 
            memory_address0 <= zext_ln154_fu_1235_p1(17 - 1 downto 0);
        elsif (((funct3_reg_1656 = ap_const_lv3_4) and (op_code_reg_1652 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state3) and (select_ln126_fu_1202_p3 = ap_const_lv3_1))) then 
            memory_address0 <= zext_ln156_fu_1230_p1(17 - 1 downto 0);
        elsif (((funct3_reg_1656 = ap_const_lv3_4) and (op_code_reg_1652 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state3) and (select_ln126_fu_1202_p3 = ap_const_lv3_2))) then 
            memory_address0 <= zext_ln158_fu_1225_p1(17 - 1 downto 0);
        elsif (((funct3_reg_1656 = ap_const_lv3_4) and (op_code_reg_1652 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state3) and (select_ln126_fu_1202_p3 = ap_const_lv3_3))) then 
            memory_address0 <= zext_ln160_fu_1220_p1(17 - 1 downto 0);
        elsif (((funct3_reg_1656 = ap_const_lv3_5) and (op_code_reg_1652 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state3) and (select_ln126_fu_1202_p3 = ap_const_lv3_0))) then 
            memory_address0 <= zext_ln166_fu_1215_p1(17 - 1 downto 0);
        elsif (((funct3_reg_1656 = ap_const_lv3_5) and (op_code_reg_1652 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state3) and (select_ln126_fu_1202_p3 = ap_const_lv3_2))) then 
            memory_address0 <= zext_ln168_fu_1210_p1(17 - 1 downto 0);
        elsif (((funct3_reg_1656 = ap_const_lv3_0) and (op_code_reg_1652 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state3) and (select_ln181_fu_1047_p3 = ap_const_lv3_0))) then 
            memory_address0 <= zext_ln185_fu_1085_p1(17 - 1 downto 0);
        elsif (((funct3_reg_1656 = ap_const_lv3_0) and (op_code_reg_1652 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state3) and (select_ln181_fu_1047_p3 = ap_const_lv3_1))) then 
            memory_address0 <= zext_ln187_fu_1080_p1(17 - 1 downto 0);
        elsif (((funct3_reg_1656 = ap_const_lv3_0) and (op_code_reg_1652 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state3) and (select_ln181_fu_1047_p3 = ap_const_lv3_2))) then 
            memory_address0 <= zext_ln189_fu_1075_p1(17 - 1 downto 0);
        elsif (((funct3_reg_1656 = ap_const_lv3_0) and (op_code_reg_1652 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state3) and (select_ln181_fu_1047_p3 = ap_const_lv3_3))) then 
            memory_address0 <= zext_ln191_fu_1070_p1(17 - 1 downto 0);
        elsif (((funct3_reg_1656 = ap_const_lv3_1) and (op_code_reg_1652 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state3) and (select_ln181_fu_1047_p3 = ap_const_lv3_0))) then 
            memory_address0 <= zext_ln196_fu_1065_p1(17 - 1 downto 0);
        elsif (((funct3_reg_1656 = ap_const_lv3_1) and (op_code_reg_1652 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state3) and (select_ln181_fu_1047_p3 = ap_const_lv3_2))) then 
            memory_address0 <= zext_ln198_fu_1060_p1(17 - 1 downto 0);
        elsif (((funct3_reg_1656 = ap_const_lv3_2) and (op_code_reg_1652 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            memory_address0 <= zext_ln202_fu_1055_p1(17 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            memory_address0 <= zext_ln33_fu_619_p1(17 - 1 downto 0);
        else 
            memory_address0 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    memory_ce0_assign_proc : process(ap_CS_fsm_state1, op_code_reg_1652, funct3_reg_1656, ap_CS_fsm_state3, select_ln181_fu_1047_p3, select_ln181_reg_1822, select_ln126_fu_1202_p3, ap_CS_fsm_state18)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) or ((funct3_reg_1656 = ap_const_lv3_2) and (op_code_reg_1652 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((funct3_reg_1656 = ap_const_lv3_2) and (op_code_reg_1652 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((funct3_reg_1656 = ap_const_lv3_4) and (op_code_reg_1652 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state3) and (select_ln126_fu_1202_p3 = ap_const_lv3_1)) or ((funct3_reg_1656 = ap_const_lv3_4) and (op_code_reg_1652 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state3) and (select_ln126_fu_1202_p3 = ap_const_lv3_3)) or ((funct3_reg_1656 = ap_const_lv3_4) and (op_code_reg_1652 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state3) and (select_ln126_fu_1202_p3 = ap_const_lv3_0)) or ((funct3_reg_1656 = ap_const_lv3_4) and (op_code_reg_1652 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state3) and (select_ln126_fu_1202_p3 = ap_const_lv3_2)) or ((funct3_reg_1656 = ap_const_lv3_5) and (op_code_reg_1652 = ap_const_lv7_3) 
    and (ap_const_logic_1 = ap_CS_fsm_state3) and (select_ln126_fu_1202_p3 = ap_const_lv3_0)) or ((funct3_reg_1656 = ap_const_lv3_5) and (op_code_reg_1652 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state3) and (select_ln126_fu_1202_p3 = ap_const_lv3_2)) or ((funct3_reg_1656 = ap_const_lv3_0) and (op_code_reg_1652 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state3) and (select_ln126_fu_1202_p3 = ap_const_lv3_1)) or ((funct3_reg_1656 = ap_const_lv3_0) and (op_code_reg_1652 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state3) and (select_ln126_fu_1202_p3 = ap_const_lv3_3)) or ((funct3_reg_1656 = ap_const_lv3_0) and (op_code_reg_1652 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state3) and (select_ln126_fu_1202_p3 = ap_const_lv3_0)) or ((funct3_reg_1656 = ap_const_lv3_0) and (op_code_reg_1652 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state3) and (select_ln126_fu_1202_p3 = ap_const_lv3_2)) or ((funct3_reg_1656 = ap_const_lv3_0) and (op_code_reg_1652 = ap_const_lv7_23) and (ap_const_logic_1 
    = ap_CS_fsm_state18) and (select_ln181_reg_1822 = ap_const_lv3_1)) or ((funct3_reg_1656 = ap_const_lv3_0) and (op_code_reg_1652 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state18) and (select_ln181_reg_1822 = ap_const_lv3_3)) or ((funct3_reg_1656 = ap_const_lv3_0) and (op_code_reg_1652 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state18) and (select_ln181_reg_1822 = ap_const_lv3_0)) or ((funct3_reg_1656 = ap_const_lv3_0) and (op_code_reg_1652 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state18) and (select_ln181_reg_1822 = ap_const_lv3_2)) or ((funct3_reg_1656 = ap_const_lv3_0) and (op_code_reg_1652 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state3) and (select_ln181_fu_1047_p3 = ap_const_lv3_1)) or ((funct3_reg_1656 = ap_const_lv3_0) and (op_code_reg_1652 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state3) and (select_ln181_fu_1047_p3 = ap_const_lv3_3)) or ((funct3_reg_1656 = ap_const_lv3_0) and (op_code_reg_1652 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state3) 
    and (select_ln181_fu_1047_p3 = ap_const_lv3_0)) or ((funct3_reg_1656 = ap_const_lv3_0) and (op_code_reg_1652 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state3) and (select_ln181_fu_1047_p3 = ap_const_lv3_2)) or ((funct3_reg_1656 = ap_const_lv3_1) and (op_code_reg_1652 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state3) and (select_ln126_fu_1202_p3 = ap_const_lv3_0)) or ((funct3_reg_1656 = ap_const_lv3_1) and (op_code_reg_1652 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state3) and (select_ln126_fu_1202_p3 = ap_const_lv3_2)) or ((funct3_reg_1656 = ap_const_lv3_1) and (op_code_reg_1652 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state18) and (select_ln181_reg_1822 = ap_const_lv3_0)) or ((funct3_reg_1656 = ap_const_lv3_1) and (op_code_reg_1652 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state18) and (select_ln181_reg_1822 = ap_const_lv3_2)) or ((funct3_reg_1656 = ap_const_lv3_1) and (op_code_reg_1652 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state3) and (select_ln181_fu_1047_p3 
    = ap_const_lv3_0)) or ((funct3_reg_1656 = ap_const_lv3_1) and (op_code_reg_1652 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state3) and (select_ln181_fu_1047_p3 = ap_const_lv3_2)))) then 
            memory_ce0 <= ap_const_logic_1;
        else 
            memory_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    memory_d0_assign_proc : process(xreg_q0, op_code_reg_1652, funct3_reg_1656, ap_CS_fsm_state3, tmp_27_fu_1417_p5, tmp_26_fu_1433_p5, tmp_25_fu_1449_p5, tmp_24_fu_1465_p5, tmp_23_fu_1481_p5, tmp_22_fu_1497_p5, ap_condition_1712, ap_condition_1715, ap_condition_1719, ap_condition_1722, ap_condition_1725, ap_condition_1728)
    begin
        if ((op_code_reg_1652 = ap_const_lv7_23)) then
            if ((ap_const_boolean_1 = ap_condition_1728)) then 
                memory_d0 <= tmp_22_fu_1497_p5;
            elsif ((ap_const_boolean_1 = ap_condition_1725)) then 
                memory_d0 <= tmp_23_fu_1481_p5;
            elsif ((ap_const_boolean_1 = ap_condition_1722)) then 
                memory_d0 <= tmp_24_fu_1465_p5;
            elsif ((ap_const_boolean_1 = ap_condition_1719)) then 
                memory_d0 <= tmp_25_fu_1449_p5;
            elsif ((ap_const_boolean_1 = ap_condition_1715)) then 
                memory_d0 <= tmp_26_fu_1433_p5;
            elsif ((ap_const_boolean_1 = ap_condition_1712)) then 
                memory_d0 <= tmp_27_fu_1417_p5;
            elsif (((funct3_reg_1656 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                memory_d0 <= xreg_q0;
            else 
                memory_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            memory_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    memory_we0_assign_proc : process(op_code_reg_1652, funct3_reg_1656, ap_CS_fsm_state3, select_ln181_reg_1822, ap_CS_fsm_state18)
    begin
        if ((((funct3_reg_1656 = ap_const_lv3_2) and (op_code_reg_1652 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((funct3_reg_1656 = ap_const_lv3_0) and (op_code_reg_1652 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state18) and (select_ln181_reg_1822 = ap_const_lv3_1)) or ((funct3_reg_1656 = ap_const_lv3_0) and (op_code_reg_1652 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state18) and (select_ln181_reg_1822 = ap_const_lv3_3)) or ((funct3_reg_1656 = ap_const_lv3_0) and (op_code_reg_1652 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state18) and (select_ln181_reg_1822 = ap_const_lv3_0)) or ((funct3_reg_1656 = ap_const_lv3_0) and (op_code_reg_1652 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state18) and (select_ln181_reg_1822 = ap_const_lv3_2)) or ((funct3_reg_1656 = ap_const_lv3_1) and (op_code_reg_1652 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state18) and (select_ln181_reg_1822 = ap_const_lv3_0)) or ((funct3_reg_1656 = ap_const_lv3_1) and (op_code_reg_1652 
    = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state18) and (select_ln181_reg_1822 = ap_const_lv3_2)))) then 
            memory_we0 <= ap_const_logic_1;
        else 
            memory_we0 <= ap_const_logic_0;
        end if; 
    end process;

    op_code_fu_624_p1 <= memory_q0(7 - 1 downto 0);
    or_ln238_fu_1374_p2 <= (source1_reg_1772 or sext_ln43_reg_1756);
    or_ln358_fu_1298_p2 <= (source2_reg_1795 or source1_reg_1772);
    p_and_t3_fu_1025_p3 <= (ap_const_lv1_0 & sub_ln181_fu_1019_p2);
    p_and_t_fu_1180_p3 <= (ap_const_lv1_0 & sub_ln126_fu_1174_p2);
    pc <= ap_phi_mux_p_0_0_02438_phi_fu_511_p16;
    pos_1_fu_1011_p3 <= 
        sub_ln180_1_fu_995_p2 when (tmp_12_fu_971_p3(0) = '1') else 
        trunc_ln180_2_fu_1001_p4;
    pos_fu_1166_p3 <= 
        sub_ln125_1_fu_1150_p2 when (tmp_10_fu_1126_p3(0) = '1') else 
        trunc_ln125_2_fu_1156_p4;
    result_1_fu_1382_p2 <= "1" when (unsigned(source1_reg_1772) < unsigned(sext_ln43_reg_1756)) else "0";
    result_fu_1390_p2 <= "1" when (signed(source1_reg_1772) < signed(sext_ln43_reg_1756)) else "0";
    rs1_fu_658_p4 <= memory_q0(19 downto 15);
    rs2_fu_668_p4 <= memory_q0(24 downto 20);
    select_ln126_fu_1202_p3 <= 
        sub_ln126_1_fu_1188_p2 when (tmp_10_fu_1126_p3(0) = '1') else 
        tmp_11_fu_1194_p3;
    select_ln181_fu_1047_p3 <= 
        sub_ln181_1_fu_1033_p2 when (tmp_12_fu_971_p3(0) = '1') else 
        tmp_13_fu_1039_p3;
        sext_ln125_1_fu_1103_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(imm_I_reg_1697),19));

        sext_ln125_fu_1100_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(imm_I_reg_1697),34));

        sext_ln130_fu_1570_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln130_fu_1566_p1),32));

        sext_ln132_fu_1562_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_584_p4),32));

        sext_ln134_fu_1558_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_574_p4),32));

        sext_ln136_fu_1554_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_564_p4),32));

        sext_ln142_fu_1550_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln142_fu_1546_p1),32));

        sext_ln144_fu_1542_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_554_p4),32));

        sext_ln180_1_fu_947_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_4_fu_844_p3),19));

        sext_ln180_fu_943_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_4_fu_844_p3),34));

        sext_ln42_fu_822_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(imm_B_fu_812_p6),32));

        sext_ln43_fu_826_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(imm_I_reg_1697),32));

        sext_ln45_fu_840_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(imm_J_fu_830_p6),32));

    shl_ln247_fu_1365_p2 <= std_logic_vector(shift_left(unsigned(source1_reg_1772),to_integer(unsigned('0' & zext_ln247_fu_1362_p1(31-1 downto 0)))));
    shl_ln298_fu_1345_p2 <= std_logic_vector(shift_left(unsigned(source1_reg_1772),to_integer(unsigned('0' & zext_ln298_fu_1341_p1(31-1 downto 0)))));
    sub_ln125_1_fu_1150_p2 <= std_logic_vector(unsigned(ap_const_lv17_0) - unsigned(trunc_ln125_1_fu_1140_p4));
    sub_ln125_fu_1134_p2 <= std_logic_vector(unsigned(ap_const_lv19_0) - unsigned(add_ln125_1_fu_1120_p2));
    sub_ln126_1_fu_1188_p2 <= std_logic_vector(unsigned(ap_const_lv3_0) - unsigned(p_and_t_fu_1180_p3));
    sub_ln126_fu_1174_p2 <= std_logic_vector(unsigned(ap_const_lv2_0) - unsigned(trunc_ln125_3_fu_1116_p1));
    sub_ln180_1_fu_995_p2 <= std_logic_vector(unsigned(ap_const_lv17_0) - unsigned(trunc_ln180_1_fu_985_p4));
    sub_ln180_fu_979_p2 <= std_logic_vector(unsigned(ap_const_lv19_0) - unsigned(add_ln180_1_fu_965_p2));
    sub_ln181_1_fu_1033_p2 <= std_logic_vector(unsigned(ap_const_lv3_0) - unsigned(p_and_t3_fu_1025_p3));
    sub_ln181_fu_1019_p2 <= std_logic_vector(unsigned(ap_const_lv2_0) - unsigned(trunc_ln180_3_fu_961_p1));
    sub_ln287_fu_1350_p2 <= std_logic_vector(unsigned(source1_reg_1772) - unsigned(source2_reg_1795));
    tmp_10_fu_1126_p3 <= add_ln125_fu_1110_p2(33 downto 33);
    tmp_11_fu_1194_p3 <= (ap_const_lv1_0 & trunc_ln125_3_fu_1116_p1);
    tmp_12_fu_971_p3 <= add_ln180_fu_955_p2(33 downto 33);
    tmp_13_fu_1039_p3 <= (ap_const_lv1_0 & trunc_ln180_3_fu_961_p1);
    tmp_22_fu_1497_p5 <= (memory_q0(31 downto 8) & trunc_ln185_fu_1494_p1);
    tmp_23_fu_1481_p5 <= (memory_q0(31 downto 16) & trunc_ln187_fu_1478_p1 & memory_q0(7 downto 0));
    tmp_24_fu_1465_p5 <= (memory_q0(31 downto 24) & trunc_ln189_fu_1462_p1 & memory_q0(15 downto 0));
    tmp_25_fu_1449_p5 <= (trunc_ln191_fu_1446_p1 & memory_q0(23 downto 0));
    tmp_26_fu_1433_p5 <= (memory_q0(31 downto 16) & trunc_ln196_fu_1430_p1);
    tmp_27_fu_1417_p5 <= (trunc_ln198_fu_1414_p1 & memory_q0(15 downto 0));
    tmp_4_fu_844_p3 <= (tmp_8_reg_1731 & tmp_7_reg_1726);
    trunc_ln125_1_fu_1140_p4 <= sub_ln125_fu_1134_p2(18 downto 2);
    trunc_ln125_2_fu_1156_p4 <= add_ln125_1_fu_1120_p2(18 downto 2);
    trunc_ln125_3_fu_1116_p1 <= add_ln125_fu_1110_p2(2 - 1 downto 0);
    trunc_ln125_fu_1106_p1 <= xreg_q1(19 - 1 downto 0);
    trunc_ln130_fu_1566_p1 <= memory_q0(8 - 1 downto 0);
    trunc_ln142_fu_1546_p1 <= memory_q0(16 - 1 downto 0);
    trunc_ln154_fu_1534_p1 <= memory_q0(8 - 1 downto 0);
    trunc_ln166_fu_1514_p1 <= memory_q0(16 - 1 downto 0);
    trunc_ln180_1_fu_985_p4 <= sub_ln180_fu_979_p2(18 downto 2);
    trunc_ln180_2_fu_1001_p4 <= add_ln180_1_fu_965_p2(18 downto 2);
    trunc_ln180_3_fu_961_p1 <= add_ln180_fu_955_p2(2 - 1 downto 0);
    trunc_ln180_fu_951_p1 <= xreg_q1(19 - 1 downto 0);
    trunc_ln185_fu_1494_p1 <= source2_reg_1795(8 - 1 downto 0);
    trunc_ln187_fu_1478_p1 <= source2_reg_1795(8 - 1 downto 0);
    trunc_ln189_fu_1462_p1 <= source2_reg_1795(8 - 1 downto 0);
    trunc_ln191_fu_1446_p1 <= source2_reg_1795(8 - 1 downto 0);
    trunc_ln196_fu_1430_p1 <= source2_reg_1795(16 - 1 downto 0);
    trunc_ln198_fu_1414_p1 <= source2_reg_1795(16 - 1 downto 0);
    trunc_ln298_fu_1338_p1 <= source2_reg_1795(5 - 1 downto 0);
    trunc_ln343_fu_1314_p1 <= source2_reg_1795(5 - 1 downto 0);
    trunc_ln347_fu_1302_p1 <= source2_reg_1795(5 - 1 downto 0);
    xor_ln234_fu_1378_p2 <= (source1_reg_1772 xor sext_ln43_reg_1756);
    xor_ln333_fu_1326_p2 <= (source2_reg_1795 xor source1_reg_1772);

    xreg_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state34, zext_ln52_fu_807_p1, zext_ln401_1_fu_1624_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            xreg_address0 <= zext_ln401_1_fu_1624_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            xreg_address0 <= zext_ln52_fu_807_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            xreg_address0 <= ap_const_lv5_0;
        else 
            xreg_address0 <= "XXXXX";
        end if; 
    end process;


    xreg_address1_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state32, zext_ln51_fu_802_p1, zext_ln401_fu_1616_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            xreg_address1 <= zext_ln401_fu_1616_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            xreg_address1 <= zext_ln51_fu_802_p1(5 - 1 downto 0);
        else 
            xreg_address1 <= "XXXXX";
        end if; 
    end process;


    xreg_ce0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state34)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state34))) then 
            xreg_ce0 <= ap_const_logic_1;
        else 
            xreg_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    xreg_ce1_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state32)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state32))) then 
            xreg_ce1 <= ap_const_logic_1;
        else 
            xreg_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    xreg_d0_assign_proc : process(ap_CS_fsm_state1, result_29_ph_ph_reg_421, ap_CS_fsm_state34)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            xreg_d0 <= result_29_ph_ph_reg_421;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            xreg_d0 <= ap_const_lv32_0;
        else 
            xreg_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    xreg_d1 <= std_logic_vector(unsigned(p_pc_load_reg_1639) + unsigned(ap_const_lv32_4));

    xreg_we0_assign_proc : process(ap_CS_fsm_state1, op_code_reg_1652, funct3_reg_1656, funct7_reg_1660, icmp_ln246_reg_1815, ap_CS_fsm_state34)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) or ((ap_const_logic_1 = ap_CS_fsm_state34) and ((op_code_reg_1652 = ap_const_lv7_37) or ((op_code_reg_1652 = ap_const_lv7_17) or ((((((((((((((((((((((not((funct3_reg_1656 = ap_const_lv3_3)) and not((funct3_reg_1656 = ap_const_lv3_2)) and not((funct3_reg_1656 = ap_const_lv3_4)) and not((funct3_reg_1656 = ap_const_lv3_1)) and (funct7_reg_1660 = ap_const_lv7_0) and (funct3_reg_1656 = ap_const_lv3_5) and (op_code_reg_1652 = ap_const_lv7_33)) or (not((funct3_reg_1656 = ap_const_lv3_3)) and not((funct3_reg_1656 = ap_const_lv3_2)) and not((funct3_reg_1656 = ap_const_lv3_4)) and not((funct3_reg_1656 = ap_const_lv3_1)) and (funct7_reg_1660 = ap_const_lv7_20) and (funct3_reg_1656 = ap_const_lv3_5) and (op_code_reg_1652 = ap_const_lv7_33))) or (not((funct3_reg_1656 = ap_const_lv3_0)) and (funct3_reg_1656 = ap_const_lv3_4) and (op_code_reg_1652 = ap_const_lv7_33) and (icmp_ln246_reg_1815 = ap_const_lv1_1))) or (not((funct3_reg_1656 = ap_const_lv3_0)) and (funct3_reg_1656 = ap_const_lv3_5) 
    and (funct3_reg_1656 = ap_const_lv3_3) and (op_code_reg_1652 = ap_const_lv7_33) and (icmp_ln246_reg_1815 = ap_const_lv1_1))) or (not((funct3_reg_1656 = ap_const_lv3_0)) and (funct3_reg_1656 = ap_const_lv3_2) and (op_code_reg_1652 = ap_const_lv7_33) and (icmp_ln246_reg_1815 = ap_const_lv1_1))) or (not((funct3_reg_1656 = ap_const_lv3_0)) and (funct3_reg_1656 = ap_const_lv3_1) and (op_code_reg_1652 = ap_const_lv7_33) and (icmp_ln246_reg_1815 = ap_const_lv1_1))) or ((funct7_reg_1660 = ap_const_lv7_20) and (funct3_reg_1656 = ap_const_lv3_0) and (op_code_reg_1652 = ap_const_lv7_33))) or ((funct7_reg_1660 = ap_const_lv7_0) and (funct3_reg_1656 = ap_const_lv3_0) and (op_code_reg_1652 = ap_const_lv7_33))) or (not((funct3_reg_1656 = ap_const_lv3_1)) and (funct7_reg_1660 = ap_const_lv7_20) and (funct3_reg_1656 = ap_const_lv3_5) and (op_code_reg_1652 = ap_const_lv7_13))) or (not((funct3_reg_1656 = ap_const_lv3_1)) and (funct7_reg_1660 = ap_const_lv7_0) and (funct3_reg_1656 = ap_const_lv3_5) and (op_code_reg_1652 = ap_const_lv7_13))) 
    or (not((funct3_reg_1656 = ap_const_lv3_1)) and (funct3_reg_1656 = ap_const_lv3_4) and (op_code_reg_1652 = ap_const_lv7_13))) or (not((funct3_reg_1656 = ap_const_lv3_1)) and (funct3_reg_1656 = ap_const_lv3_5) and (funct3_reg_1656 = ap_const_lv3_3) and (op_code_reg_1652 = ap_const_lv7_13))) or (not((funct3_reg_1656 = ap_const_lv3_1)) and (funct3_reg_1656 = ap_const_lv3_2) and (op_code_reg_1652 = ap_const_lv7_13))) or ((funct3_reg_1656 = ap_const_lv3_1) and (op_code_reg_1652 = ap_const_lv7_13) and (icmp_ln246_reg_1815 = ap_const_lv1_1))) or ((funct3_reg_1656 = ap_const_lv3_0) and (op_code_reg_1652 = ap_const_lv7_13))) or (not((funct3_reg_1656 = ap_const_lv3_5)) and not((op_code_reg_1652 = ap_const_lv7_3)) and not((funct3_reg_1656 = ap_const_lv3_0)) and (op_code_reg_1652 = ap_const_lv7_33) and (icmp_ln246_reg_1815 = ap_const_lv1_1))) or (not((funct3_reg_1656 = ap_const_lv3_5)) and not((op_code_reg_1652 = ap_const_lv7_3)) and not((funct3_reg_1656 = ap_const_lv3_1)) and (op_code_reg_1652 = ap_const_lv7_13))) or ((funct3_reg_1656 
    = ap_const_lv3_5) and (op_code_reg_1652 = ap_const_lv7_3))) or ((funct3_reg_1656 = ap_const_lv3_4) and (op_code_reg_1652 = ap_const_lv7_3))) or ((funct3_reg_1656 = ap_const_lv3_2) and (op_code_reg_1652 = ap_const_lv7_3))) or ((funct3_reg_1656 = ap_const_lv3_1) and (op_code_reg_1652 = ap_const_lv7_3))) or ((funct3_reg_1656 = ap_const_lv3_0) and (op_code_reg_1652 = ap_const_lv7_3)))))))) then 
            xreg_we0 <= ap_const_logic_1;
        else 
            xreg_we0 <= ap_const_logic_0;
        end if; 
    end process;


    xreg_we1_assign_proc : process(ap_CS_fsm_state32)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            xreg_we1 <= ap_const_logic_1;
        else 
            xreg_we1 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln125_fu_1096_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xreg_q1),34));
    zext_ln130_fu_1270_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_fu_1166_p3),64));
    zext_ln132_fu_1265_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_fu_1166_p3),64));
    zext_ln134_fu_1260_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_fu_1166_p3),64));
    zext_ln136_fu_1255_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_fu_1166_p3),64));
    zext_ln142_fu_1250_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_fu_1166_p3),64));
    zext_ln144_fu_1245_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_fu_1166_p3),64));
    zext_ln149_fu_1240_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_fu_1166_p3),64));
    zext_ln154_1_fu_1538_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln154_fu_1534_p1),32));
    zext_ln154_fu_1235_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_fu_1166_p3),64));
    zext_ln156_1_fu_1530_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_584_p4),32));
    zext_ln156_fu_1230_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_fu_1166_p3),64));
    zext_ln158_1_fu_1526_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_574_p4),32));
    zext_ln158_fu_1225_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_fu_1166_p3),64));
    zext_ln160_1_fu_1522_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_564_p4),32));
    zext_ln160_fu_1220_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_fu_1166_p3),64));
    zext_ln166_1_fu_1518_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln166_fu_1514_p1),32));
    zext_ln166_fu_1215_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_fu_1166_p3),64));
    zext_ln168_1_fu_1510_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_554_p4),32));
    zext_ln168_fu_1210_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_fu_1166_p3),64));
    zext_ln180_fu_939_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xreg_q1),34));
    zext_ln185_fu_1085_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_1_fu_1011_p3),64));
    zext_ln187_fu_1080_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_1_fu_1011_p3),64));
    zext_ln189_fu_1075_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_1_fu_1011_p3),64));
    zext_ln191_fu_1070_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_1_fu_1011_p3),64));
    zext_ln196_fu_1065_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_1_fu_1011_p3),64));
    zext_ln198_fu_1060_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_1_fu_1011_p3),64));
    zext_ln202_fu_1055_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_1_fu_1011_p3),64));
    zext_ln218_fu_1394_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(result_fu_1390_p2),32));
    zext_ln226_fu_1386_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(result_1_fu_1382_p2),32));
    zext_ln247_fu_1362_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(imm_I2_reg_1704),32));
    zext_ln257_fu_1406_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(imm_I2_reg_1704),32));
    zext_ln261_fu_1398_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(imm_I2_reg_1704),32));
    zext_ln298_fu_1341_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln298_fu_1338_p1),32));
    zext_ln307_fu_1334_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_537_p2),32));
    zext_ln320_fu_1330_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_531_p2),32));
    zext_ln33_fu_619_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_fu_609_p4),64));
    zext_ln343_fu_1317_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln343_fu_1314_p1),32));
    zext_ln347_fu_1305_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln347_fu_1302_p1),32));
    zext_ln401_1_fu_1624_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rd_reg_1670),64));
    zext_ln401_fu_1616_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rd_reg_1670),64));
    zext_ln51_fu_802_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rs1_fu_658_p4),64));
    zext_ln52_fu_807_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rs2_fu_668_p4),64));
end behav;
