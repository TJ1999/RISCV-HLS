-- ==============================================================
-- Generated by Vitis HLS v2023.1.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity processor is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    memory_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
    memory_ce0 : OUT STD_LOGIC;
    memory_we0 : OUT STD_LOGIC;
    memory_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    memory_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    error : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of processor is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "processor_processor,hls_ip_2023_1_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100t-csg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.756250,HLS_SYN_LAT=4,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=0,HLS_SYN_FF=518,HLS_SYN_LUT=2025,HLS_VERSION=2023_1_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (22 downto 0) := "00000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (22 downto 0) := "00000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (22 downto 0) := "00000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (22 downto 0) := "00000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (22 downto 0) := "00000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (22 downto 0) := "00000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (22 downto 0) := "00001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (22 downto 0) := "00010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (22 downto 0) := "00100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (22 downto 0) := "01000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (22 downto 0) := "10000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv7_23 : STD_LOGIC_VECTOR (6 downto 0) := "0100011";
    constant ap_const_lv7_3 : STD_LOGIC_VECTOR (6 downto 0) := "0000011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv7_63 : STD_LOGIC_VECTOR (6 downto 0) := "1100011";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv7_67 : STD_LOGIC_VECTOR (6 downto 0) := "1100111";
    constant ap_const_lv7_6F : STD_LOGIC_VECTOR (6 downto 0) := "1101111";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv7_37 : STD_LOGIC_VECTOR (6 downto 0) := "0110111";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv7_33 : STD_LOGIC_VECTOR (6 downto 0) := "0110011";
    constant ap_const_lv7_20 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv7_13 : STD_LOGIC_VECTOR (6 downto 0) := "0010011";
    constant ap_const_lv7_17 : STD_LOGIC_VECTOR (6 downto 0) := "0010111";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv7_73 : STD_LOGIC_VECTOR (6 downto 0) := "1110011";
    constant ap_const_lv7_F : STD_LOGIC_VECTOR (6 downto 0) := "0001111";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv19_0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";

    signal p_pc : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal xreg_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal xreg_ce0 : STD_LOGIC;
    signal xreg_we0 : STD_LOGIC;
    signal xreg_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal xreg_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal xreg_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal xreg_ce1 : STD_LOGIC;
    signal xreg_we1 : STD_LOGIC;
    signal xreg_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_error : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal ap_CS_fsm : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal op_code_reg_1391 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_pc_load_reg_1378 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal op_code_fu_474_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal funct3_reg_1395 : STD_LOGIC_VECTOR (2 downto 0);
    signal funct7_reg_1399 : STD_LOGIC_VECTOR (6 downto 0);
    signal funct12_reg_1404 : STD_LOGIC_VECTOR (11 downto 0);
    signal rd_reg_1409 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_reg_1415 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_s_reg_1420 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1_reg_1425 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_reg_1430 : STD_LOGIC_VECTOR (0 downto 0);
    signal imm_I_reg_1436 : STD_LOGIC_VECTOR (11 downto 0);
    signal imm_I2_reg_1443 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_3_reg_1450 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_5_reg_1455 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_reg_1460 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_reg_1465 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_8_reg_1470 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_9_reg_1475 : STD_LOGIC_VECTOR (19 downto 0);
    signal source1_reg_1490 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal source2_reg_1518 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln42_fu_677_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln42_reg_1540 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal imm_U_fu_701_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal imm_U_reg_1550 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln248_fu_708_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln248_reg_1556 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln178_3_fu_810_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln178_3_reg_1563 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_12_reg_1569 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln178_1_reg_1575 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln178_2_reg_1580 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln126_3_fu_872_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln126_3_reg_1585 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_10_reg_1591 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln126_1_reg_1597 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln126_2_reg_1602 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_382_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln114_reg_1607 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln108_reg_1611 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_390_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln102_reg_1615 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln96_reg_1619 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_394_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln90_reg_1623 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln84_reg_1627 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_398_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln71_fu_958_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln360_fu_969_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ashr_ln349_fu_980_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal lshr_ln345_fu_992_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal xor_ln335_fu_997_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal zext_ln322_fu_1001_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal zext_ln309_fu_1005_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal shl_ln300_fu_1016_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal sub_ln289_fu_1021_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal add_ln284_fu_1025_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal and_ln369_fu_1029_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal shl_ln249_fu_1036_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal and_ln244_fu_1041_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal or_ln240_fu_1045_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln236_fu_1049_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln228_fu_1057_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln220_fu_1065_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ashr_ln263_fu_1072_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal lshr_ln259_fu_1080_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal select_ln179_fu_1122_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln179_reg_1736 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal memory_addr_2_reg_1740 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln127_fu_1171_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln127_reg_1745 : STD_LOGIC_VECTOR (2 downto 0);
    signal mem_val_7_fu_1186_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal mem_val_6_fu_1201_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal mem_val_5_fu_1216_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal mem_val_4_fu_1231_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal mem_val_3_fu_1246_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal mem_val_2_fu_1261_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln167_fu_1279_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln165_fu_1287_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln160_fu_1291_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln158_fu_1295_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln156_fu_1299_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln154_fu_1307_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln146_fu_1311_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln144_fu_1319_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln139_fu_1323_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln137_fu_1327_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln135_fu_1331_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln133_fu_1339_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln66_fu_1374_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal result_3012_reg_255 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_30_ph_ph_reg_283 : STD_LOGIC_VECTOR (31 downto 0);
    signal storemerge_reg_373 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln32_fu_469_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln50_fu_652_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln51_fu_657_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln180_fu_1129_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln128_fu_1178_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln403_1_fu_1349_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal zext_ln403_fu_1370_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal grp_fu_442_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_386_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_p_error_load : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln387_fu_713_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln41_fu_672_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_398_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln_fu_459_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal rs1_fu_508_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal rs2_fu_518_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal imm_B_fu_662_p6 : STD_LOGIC_VECTOR (12 downto 0);
    signal imm_J_fu_681_p6 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_4_fu_695_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln178_fu_790_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal sext_ln178_fu_793_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal add_ln178_fu_804_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal trunc_ln178_fu_801_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln178_1_fu_797_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln178_1_fu_814_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal sub_ln178_fu_828_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln126_fu_854_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal sext_ln126_fu_857_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal add_ln126_fu_866_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal trunc_ln126_fu_863_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln126_1_fu_860_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln126_1_fu_876_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal sub_ln126_fu_890_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln44_fu_691_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln349_fu_973_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln349_fu_976_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln345_fu_985_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln345_fu_988_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln300_fu_1009_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln300_fu_1012_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln249_fu_1033_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_1_fu_1053_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_fu_1061_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln263_fu_1069_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln259_fu_1077_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln178_1_fu_1085_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln179_fu_1096_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_and_t3_fu_1101_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln179_1_fu_1109_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_13_fu_1115_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal mem_pos_1_fu_1090_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln126_1_fu_1134_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln127_fu_1145_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_and_t_fu_1150_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln127_1_fu_1158_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_11_fu_1164_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal mem_pos_fu_1139_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln199_fu_1183_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln197_fu_1198_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln191_fu_1213_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln189_fu_1228_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln187_fu_1243_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln185_fu_1258_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_402_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln165_fu_1283_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_412_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_422_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_432_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln154_fu_1303_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln144_fu_1315_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln133_fu_1335_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component processor_xreg_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    xreg_U : component processor_xreg_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => xreg_address0,
        ce0 => xreg_ce0,
        we0 => xreg_we0,
        d0 => xreg_d0,
        q0 => xreg_q0,
        address1 => xreg_address1,
        ce1 => xreg_ce1,
        we1 => xreg_we1,
        d1 => result_30_ph_ph_reg_283,
        q1 => xreg_q1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    p_pc_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                p_pc <= ap_const_lv32_0;
            else
                if ((((funct3_reg_1395 = ap_const_lv3_0) and (op_code_reg_1391 = ap_const_lv7_63) and (ap_const_logic_1 = ap_CS_fsm_state4) and (grp_fu_394_p2 = ap_const_lv1_1)) or ((funct3_reg_1395 = ap_const_lv3_1) and (op_code_reg_1391 = ap_const_lv7_63) and (ap_const_logic_1 = ap_CS_fsm_state4) and (grp_fu_394_p2 = ap_const_lv1_0)) or ((funct3_reg_1395 = ap_const_lv3_4) and (op_code_reg_1391 = ap_const_lv7_63) and (ap_const_logic_1 = ap_CS_fsm_state4) and (grp_fu_390_p2 = ap_const_lv1_1)) or ((funct3_reg_1395 = ap_const_lv3_5) and (op_code_reg_1391 = ap_const_lv7_63) and (ap_const_logic_1 = ap_CS_fsm_state4) and (grp_fu_390_p2 = ap_const_lv1_0)) or ((funct3_reg_1395 = ap_const_lv3_6) and (op_code_reg_1391 = ap_const_lv7_63) and (ap_const_logic_1 = ap_CS_fsm_state4) and (grp_fu_382_p2 = ap_const_lv1_1)) or ((funct3_reg_1395 = ap_const_lv3_7) and (op_code_reg_1391 = ap_const_lv7_63) and (ap_const_logic_1 = ap_CS_fsm_state4) and (grp_fu_382_p2 = ap_const_lv1_0)))) then 
                    p_pc <= grp_fu_386_p2;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state21) and ((((((((((funct3_reg_1395 = ap_const_lv3_6) and (op_code_reg_1391 = ap_const_lv7_63) and (icmp_ln108_reg_1611 = ap_const_lv1_0)) or ((funct3_reg_1395 = ap_const_lv3_7) and (op_code_reg_1391 = ap_const_lv7_63) and (icmp_ln114_reg_1607 = ap_const_lv1_1))) or ((funct3_reg_1395 = ap_const_lv3_5) and (op_code_reg_1391 = ap_const_lv7_63) and (icmp_ln102_reg_1615 = ap_const_lv1_1))) or ((funct3_reg_1395 = ap_const_lv3_4) and (op_code_reg_1391 = ap_const_lv7_63) and (icmp_ln96_reg_1619 = ap_const_lv1_0))) or ((funct3_reg_1395 = ap_const_lv3_3) and (op_code_reg_1391 = ap_const_lv7_63))) or ((funct3_reg_1395 = ap_const_lv3_2) and (op_code_reg_1391 = ap_const_lv7_63))) or (not((funct3_reg_1395 = ap_const_lv3_1)) and not((funct3_reg_1395 = ap_const_lv3_4)) and not((funct3_reg_1395 = ap_const_lv3_5)) and not((funct3_reg_1395 = ap_const_lv3_6)) and not((funct3_reg_1395 = ap_const_lv3_7)) and (op_code_reg_1391 = ap_const_lv7_63) and (icmp_ln84_reg_1627 = ap_const_lv1_0))) or ((funct3_reg_1395 
    = ap_const_lv3_1) and (op_code_reg_1391 = ap_const_lv7_63) and (icmp_ln90_reg_1623 = ap_const_lv1_1))) or (not((op_code_reg_1391 = ap_const_lv7_6F)) and not((op_code_reg_1391 = ap_const_lv7_67)) and not((op_code_reg_1391 = ap_const_lv7_63)))))) then 
                    p_pc <= grp_fu_442_p2;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
                    p_pc <= storemerge_reg_373;
                end if; 
            end if;
        end if;
    end process;


    result_3012_reg_255_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((funct3_reg_1395 = ap_const_lv3_1) and (op_code_reg_1391 = ap_const_lv7_23) and (select_ln179_reg_1736 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                result_3012_reg_255 <= mem_val_7_fu_1186_p5;
            elsif (((funct3_reg_1395 = ap_const_lv3_1) and (op_code_reg_1391 = ap_const_lv7_23) and (select_ln179_reg_1736 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                result_3012_reg_255 <= mem_val_6_fu_1201_p5;
            elsif (((funct3_reg_1395 = ap_const_lv3_0) and (op_code_reg_1391 = ap_const_lv7_23) and (select_ln179_reg_1736 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                result_3012_reg_255 <= mem_val_5_fu_1216_p5;
            elsif (((funct3_reg_1395 = ap_const_lv3_0) and (op_code_reg_1391 = ap_const_lv7_23) and (select_ln179_reg_1736 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                result_3012_reg_255 <= mem_val_4_fu_1231_p5;
            elsif (((funct3_reg_1395 = ap_const_lv3_0) and (op_code_reg_1391 = ap_const_lv7_23) and (select_ln179_reg_1736 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                result_3012_reg_255 <= mem_val_3_fu_1246_p5;
            elsif (((funct3_reg_1395 = ap_const_lv3_0) and (op_code_reg_1391 = ap_const_lv7_23) and (select_ln179_reg_1736 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                result_3012_reg_255 <= mem_val_2_fu_1261_p5;
            elsif (((not((select_ln179_reg_1736 = ap_const_lv3_1)) and not((select_ln179_reg_1736 = ap_const_lv3_3)) and not((select_ln179_reg_1736 = ap_const_lv3_0)) and not((select_ln179_reg_1736 = ap_const_lv3_2)) and (funct3_reg_1395 = ap_const_lv3_0) and (op_code_reg_1391 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state20)) or (not((select_ln179_reg_1736 = ap_const_lv3_0)) and not((select_ln179_reg_1736 = ap_const_lv3_2)) and (funct3_reg_1395 = ap_const_lv3_1) and (op_code_reg_1391 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state20)))) then 
                result_3012_reg_255 <= memory_q0;
            elsif (((funct3_reg_1395 = ap_const_lv3_2) and (op_code_reg_1391 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                result_3012_reg_255 <= source2_reg_1518;
            end if; 
        end if;
    end process;

    result_30_ph_ph_reg_283_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((funct3_reg_1395 = ap_const_lv3_0) and (op_code_reg_1391 = ap_const_lv7_3) and (select_ln127_reg_1745 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                result_30_ph_ph_reg_283 <= sext_ln139_fu_1323_p1;
            elsif (((funct3_reg_1395 = ap_const_lv3_0) and (op_code_reg_1391 = ap_const_lv7_3) and (select_ln127_reg_1745 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                result_30_ph_ph_reg_283 <= sext_ln137_fu_1327_p1;
            elsif (((funct3_reg_1395 = ap_const_lv3_0) and (op_code_reg_1391 = ap_const_lv7_3) and (select_ln127_reg_1745 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                result_30_ph_ph_reg_283 <= sext_ln135_fu_1331_p1;
            elsif (((funct3_reg_1395 = ap_const_lv3_0) and (op_code_reg_1391 = ap_const_lv7_3) and (select_ln127_reg_1745 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                result_30_ph_ph_reg_283 <= sext_ln133_fu_1339_p1;
            elsif (((funct3_reg_1395 = ap_const_lv3_1) and (op_code_reg_1391 = ap_const_lv7_3) and (select_ln127_reg_1745 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                result_30_ph_ph_reg_283 <= sext_ln146_fu_1311_p1;
            elsif (((funct3_reg_1395 = ap_const_lv3_1) and (op_code_reg_1391 = ap_const_lv7_3) and (select_ln127_reg_1745 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                result_30_ph_ph_reg_283 <= sext_ln144_fu_1319_p1;
            elsif (((funct3_reg_1395 = ap_const_lv3_4) and (op_code_reg_1391 = ap_const_lv7_3) and (select_ln127_reg_1745 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                result_30_ph_ph_reg_283 <= zext_ln160_fu_1291_p1;
            elsif (((funct3_reg_1395 = ap_const_lv3_4) and (op_code_reg_1391 = ap_const_lv7_3) and (select_ln127_reg_1745 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                result_30_ph_ph_reg_283 <= zext_ln158_fu_1295_p1;
            elsif (((funct3_reg_1395 = ap_const_lv3_4) and (op_code_reg_1391 = ap_const_lv7_3) and (select_ln127_reg_1745 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                result_30_ph_ph_reg_283 <= zext_ln156_fu_1299_p1;
            elsif (((funct3_reg_1395 = ap_const_lv3_4) and (op_code_reg_1391 = ap_const_lv7_3) and (select_ln127_reg_1745 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                result_30_ph_ph_reg_283 <= zext_ln154_fu_1307_p1;
            elsif (((funct3_reg_1395 = ap_const_lv3_5) and (op_code_reg_1391 = ap_const_lv7_3) and (select_ln127_reg_1745 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                result_30_ph_ph_reg_283 <= zext_ln167_fu_1279_p1;
            elsif (((funct3_reg_1395 = ap_const_lv3_5) and (op_code_reg_1391 = ap_const_lv7_3) and (select_ln127_reg_1745 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                result_30_ph_ph_reg_283 <= zext_ln165_fu_1287_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                result_30_ph_ph_reg_283 <= add_ln284_fu_1025_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                result_30_ph_ph_reg_283 <= sub_ln289_fu_1021_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                result_30_ph_ph_reg_283 <= lshr_ln345_fu_992_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                result_30_ph_ph_reg_283 <= ashr_ln349_fu_980_p2;
            elsif (((funct3_reg_1395 = ap_const_lv3_2) and (op_code_reg_1391 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                result_30_ph_ph_reg_283 <= memory_q0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                result_30_ph_ph_reg_283 <= shl_ln249_fu_1036_p2;
            elsif (((funct3_reg_1395 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                result_30_ph_ph_reg_283 <= grp_fu_398_p2;
            elsif (((funct3_reg_1395 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                result_30_ph_ph_reg_283 <= zext_ln220_fu_1065_p1;
            elsif (((funct3_reg_1395 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                result_30_ph_ph_reg_283 <= zext_ln228_fu_1057_p1;
            elsif (((funct3_reg_1395 = ap_const_lv3_4) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                result_30_ph_ph_reg_283 <= xor_ln236_fu_1049_p2;
            elsif (((funct3_reg_1395 = ap_const_lv3_6) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                result_30_ph_ph_reg_283 <= or_ln240_fu_1045_p2;
            elsif (((funct3_reg_1395 = ap_const_lv3_7) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                result_30_ph_ph_reg_283 <= and_ln244_fu_1041_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                result_30_ph_ph_reg_283 <= shl_ln300_fu_1016_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                result_30_ph_ph_reg_283 <= zext_ln309_fu_1005_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                result_30_ph_ph_reg_283 <= zext_ln322_fu_1001_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                result_30_ph_ph_reg_283 <= xor_ln335_fu_997_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                result_30_ph_ph_reg_283 <= or_ln360_fu_969_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                result_30_ph_ph_reg_283 <= lshr_ln259_fu_1080_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                result_30_ph_ph_reg_283 <= ashr_ln263_fu_1072_p2;
            elsif (((op_code_reg_1391 = ap_const_lv7_37) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                result_30_ph_ph_reg_283 <= imm_U_fu_701_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                result_30_ph_ph_reg_283 <= and_ln369_fu_1029_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
                result_30_ph_ph_reg_283 <= add_ln66_fu_1374_p2;
            end if; 
        end if;
    end process;

    storemerge_reg_373_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                if ((op_code_reg_1391 = ap_const_lv7_6F)) then 
                    storemerge_reg_373 <= add_ln71_fu_958_p2;
                elsif ((op_code_reg_1391 = ap_const_lv7_67)) then 
                    storemerge_reg_373 <= grp_fu_398_p2;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                funct12_reg_1404 <= memory_q0(31 downto 20);
                funct3_reg_1395 <= memory_q0(14 downto 12);
                funct7_reg_1399 <= memory_q0(31 downto 25);
                imm_I2_reg_1443 <= memory_q0(24 downto 20);
                imm_I_reg_1436 <= memory_q0(31 downto 20);
                op_code_reg_1391 <= op_code_fu_474_p1;
                rd_reg_1409 <= memory_q0(11 downto 7);
                tmp_1_reg_1425 <= memory_q0(7 downto 7);
                tmp_2_reg_1430 <= memory_q0(31 downto 31);
                tmp_3_reg_1450 <= memory_q0(30 downto 21);
                tmp_5_reg_1455 <= memory_q0(20 downto 20);
                tmp_6_reg_1460 <= memory_q0(19 downto 12);
                tmp_7_reg_1465 <= memory_q0(11 downto 7);
                tmp_8_reg_1470 <= memory_q0(31 downto 25);
                tmp_9_reg_1475 <= memory_q0(31 downto 12);
                tmp_reg_1415 <= memory_q0(11 downto 8);
                tmp_s_reg_1420 <= memory_q0(30 downto 25);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((funct3_reg_1395 = ap_const_lv3_5) and (op_code_reg_1391 = ap_const_lv7_63) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                icmp_ln102_reg_1615 <= grp_fu_390_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((funct3_reg_1395 = ap_const_lv3_6) and (op_code_reg_1391 = ap_const_lv7_63) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                icmp_ln108_reg_1611 <= grp_fu_382_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((funct3_reg_1395 = ap_const_lv3_7) and (op_code_reg_1391 = ap_const_lv7_63) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                icmp_ln114_reg_1607 <= grp_fu_382_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                icmp_ln248_reg_1556 <= icmp_ln248_fu_708_p2;
                    imm_U_reg_1550(31 downto 12) <= imm_U_fu_701_p3(31 downto 12);
                sext_ln42_reg_1540 <= sext_ln42_fu_677_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((funct3_reg_1395 = ap_const_lv3_0) and (op_code_reg_1391 = ap_const_lv7_63) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                icmp_ln84_reg_1627 <= grp_fu_394_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((funct3_reg_1395 = ap_const_lv3_1) and (op_code_reg_1391 = ap_const_lv7_63) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                icmp_ln90_reg_1623 <= grp_fu_394_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((funct3_reg_1395 = ap_const_lv3_4) and (op_code_reg_1391 = ap_const_lv7_63) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                icmp_ln96_reg_1619 <= grp_fu_390_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((op_code_reg_1391 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                memory_addr_2_reg_1740 <= zext_ln180_fu_1129_p1(17 - 1 downto 0);
                select_ln179_reg_1736 <= select_ln179_fu_1122_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not((op_code_reg_1391 = ap_const_lv7_3)) and not((op_code_reg_1391 = ap_const_lv7_23)) and not((op_code_reg_1391 = ap_const_lv7_F)) and not((op_code_reg_1391 = ap_const_lv7_73)) and not((op_code_reg_1391 = ap_const_lv7_17)) and not((op_code_reg_1391 = ap_const_lv7_13)) and not((op_code_reg_1391 = ap_const_lv7_33)) and not((op_code_reg_1391 = ap_const_lv7_37)) and not((op_code_reg_1391 = ap_const_lv7_6F)) and not((op_code_reg_1391 = ap_const_lv7_67)) and not((op_code_reg_1391 = ap_const_lv7_63)) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not((funct7_reg_1399 = ap_const_lv7_0)) and not((funct7_reg_1399 = ap_const_lv7_20)) and (funct3_reg_1395 = ap_const_lv3_0) and (op_code_reg_1391 = ap_const_lv7_33) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not((funct7_reg_1399 = ap_const_lv7_0)) and not((funct7_reg_1399 = ap_const_lv7_20)) and (funct3_reg_1395 = ap_const_lv3_5) and (op_code_reg_1391 = ap_const_lv7_13) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not((funct7_reg_1399 = ap_const_lv7_0)) and not((funct7_reg_1399 
    = ap_const_lv7_20)) and (funct3_reg_1395 = ap_const_lv3_5) and (op_code_reg_1391 = ap_const_lv7_33) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((op_code_reg_1391 = ap_const_lv7_F) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((op_code_reg_1391 = ap_const_lv7_73) and (icmp_ln387_fu_713_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not((funct3_reg_1395 = ap_const_lv3_2)) and not((funct3_reg_1395 = ap_const_lv3_0)) and not((funct3_reg_1395 = ap_const_lv3_1)) and (op_code_reg_1391 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state20)) or (not((funct3_reg_1395 = ap_const_lv3_2)) and not((funct3_reg_1395 = ap_const_lv3_0)) and not((funct3_reg_1395 = ap_const_lv3_1)) and not((funct3_reg_1395 = ap_const_lv3_4)) and not((funct3_reg_1395 = ap_const_lv3_5)) and (op_code_reg_1391 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state21)) or ((funct3_reg_1395 = ap_const_lv3_2) and (op_code_reg_1391 = ap_const_lv7_33) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln248_fu_708_p2 = 
    ap_const_lv1_0)) or ((funct3_reg_1395 = ap_const_lv3_3) and (op_code_reg_1391 = ap_const_lv7_33) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln248_fu_708_p2 = ap_const_lv1_0)) or ((funct3_reg_1395 = ap_const_lv3_1) and (op_code_reg_1391 = ap_const_lv7_13) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln248_fu_708_p2 = ap_const_lv1_0)) or ((funct3_reg_1395 = ap_const_lv3_1) and (op_code_reg_1391 = ap_const_lv7_33) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln248_fu_708_p2 = ap_const_lv1_0)) or ((funct3_reg_1395 = ap_const_lv3_4) and (op_code_reg_1391 = ap_const_lv7_33) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln248_fu_708_p2 = ap_const_lv1_0)) or ((funct3_reg_1395 = ap_const_lv3_6) and (op_code_reg_1391 = ap_const_lv7_33) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln248_fu_708_p2 = ap_const_lv1_0)) or ((funct3_reg_1395 = ap_const_lv3_7) and (op_code_reg_1391 = ap_const_lv7_33) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln248_fu_708_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 
    = ap_CS_fsm_state4) and (((funct3_reg_1395 = ap_const_lv3_2) and (op_code_reg_1391 = ap_const_lv7_63)) or ((funct3_reg_1395 = ap_const_lv3_3) and (op_code_reg_1391 = ap_const_lv7_63)))))) then
                p_error <= ap_const_lv1_1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                p_pc_load_reg_1378 <= p_pc;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((op_code_reg_1391 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                select_ln127_reg_1745 <= select_ln127_fu_1171_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                source1_reg_1490 <= xreg_q1;
                source2_reg_1518 <= xreg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((op_code_reg_1391 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                tmp_10_reg_1591 <= add_ln126_fu_866_p2(33 downto 33);
                trunc_ln126_1_reg_1597 <= sub_ln126_fu_890_p2(18 downto 2);
                trunc_ln126_2_reg_1602 <= add_ln126_1_fu_876_p2(18 downto 2);
                trunc_ln126_3_reg_1585 <= trunc_ln126_3_fu_872_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((op_code_reg_1391 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                tmp_12_reg_1569 <= add_ln178_fu_804_p2(33 downto 33);
                trunc_ln178_1_reg_1575 <= sub_ln178_fu_828_p2(18 downto 2);
                trunc_ln178_2_reg_1580 <= add_ln178_1_fu_814_p2(18 downto 2);
                trunc_ln178_3_reg_1563 <= trunc_ln178_3_fu_810_p1;
            end if;
        end if;
    end process;
    imm_U_reg_1550(11 downto 0) <= "000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, op_code_reg_1391, funct3_reg_1395, funct7_reg_1399, ap_CS_fsm_state4, icmp_ln248_fu_708_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and ((op_code_reg_1391 = ap_const_lv7_6F) or (op_code_reg_1391 = ap_const_lv7_67)))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                elsif (((funct7_reg_1399 = ap_const_lv7_0) and (funct3_reg_1395 = ap_const_lv3_5) and (op_code_reg_1391 = ap_const_lv7_13) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                elsif (((funct7_reg_1399 = ap_const_lv7_20) and (funct3_reg_1395 = ap_const_lv3_5) and (op_code_reg_1391 = ap_const_lv7_13) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                elsif (((funct3_reg_1395 = ap_const_lv3_1) and (op_code_reg_1391 = ap_const_lv7_13) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln248_fu_708_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                elsif ((not((funct3_reg_1395 = ap_const_lv3_1)) and not((funct3_reg_1395 = ap_const_lv3_5)) and (op_code_reg_1391 = ap_const_lv7_13) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                elsif (((funct3_reg_1395 = ap_const_lv3_7) and (op_code_reg_1391 = ap_const_lv7_33) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln248_fu_708_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                elsif (((funct7_reg_1399 = ap_const_lv7_0) and (funct3_reg_1395 = ap_const_lv3_0) and (op_code_reg_1391 = ap_const_lv7_33) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                elsif (((funct7_reg_1399 = ap_const_lv7_20) and (funct3_reg_1395 = ap_const_lv3_0) and (op_code_reg_1391 = ap_const_lv7_33) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                elsif (((funct3_reg_1395 = ap_const_lv3_1) and (op_code_reg_1391 = ap_const_lv7_33) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln248_fu_708_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                elsif (((funct3_reg_1395 = ap_const_lv3_2) and (op_code_reg_1391 = ap_const_lv7_33) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln248_fu_708_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                elsif (((funct3_reg_1395 = ap_const_lv3_3) and (op_code_reg_1391 = ap_const_lv7_33) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln248_fu_708_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                elsif (((funct3_reg_1395 = ap_const_lv3_4) and (op_code_reg_1391 = ap_const_lv7_33) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln248_fu_708_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                elsif (((funct7_reg_1399 = ap_const_lv7_0) and (funct3_reg_1395 = ap_const_lv3_5) and (op_code_reg_1391 = ap_const_lv7_33) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                elsif (((funct7_reg_1399 = ap_const_lv7_20) and (funct3_reg_1395 = ap_const_lv3_5) and (op_code_reg_1391 = ap_const_lv7_33) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                elsif (((funct3_reg_1395 = ap_const_lv3_6) and (op_code_reg_1391 = ap_const_lv7_33) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln248_fu_708_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                elsif (((op_code_reg_1391 = ap_const_lv7_17) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and ((op_code_reg_1391 = ap_const_lv7_37) or (((((((((((not((op_code_reg_1391 = ap_const_lv7_3)) and not((op_code_reg_1391 = ap_const_lv7_23)) and not((op_code_reg_1391 = ap_const_lv7_17)) and not((funct7_reg_1399 = ap_const_lv7_0)) and not((funct7_reg_1399 = ap_const_lv7_20)) and not((funct3_reg_1395 = ap_const_lv3_2)) and not((funct3_reg_1395 = ap_const_lv3_3)) and not((op_code_reg_1391 = ap_const_lv7_6F)) and not((op_code_reg_1391 = ap_const_lv7_67)) and not((funct3_reg_1395 = ap_const_lv3_1)) and not((funct3_reg_1395 = ap_const_lv3_4)) and (funct3_reg_1395 = ap_const_lv3_5)) or (not((op_code_reg_1391 = ap_const_lv7_3)) and not((op_code_reg_1391 = ap_const_lv7_23)) and not((op_code_reg_1391 = ap_const_lv7_17)) and not((op_code_reg_1391 = ap_const_lv7_6F)) and not((op_code_reg_1391 = ap_const_lv7_67)) and not((funct3_reg_1395 = ap_const_lv3_0)) and (funct3_reg_1395 = ap_const_lv3_1) and (icmp_ln248_fu_708_p2 = ap_const_lv1_0))) or (not((op_code_reg_1391 = ap_const_lv7_3)) 
    and not((op_code_reg_1391 = ap_const_lv7_23)) and not((op_code_reg_1391 = ap_const_lv7_17)) and not((op_code_reg_1391 = ap_const_lv7_13)) and not((op_code_reg_1391 = ap_const_lv7_6F)) and not((op_code_reg_1391 = ap_const_lv7_67)) and not((funct3_reg_1395 = ap_const_lv3_0)) and not((funct3_reg_1395 = ap_const_lv3_5)) and (icmp_ln248_fu_708_p2 = ap_const_lv1_0))) or (not((op_code_reg_1391 = ap_const_lv7_3)) and not((op_code_reg_1391 = ap_const_lv7_23)) and not((op_code_reg_1391 = ap_const_lv7_17)) and not((op_code_reg_1391 = ap_const_lv7_13)) and not((op_code_reg_1391 = ap_const_lv7_6F)) and not((op_code_reg_1391 = ap_const_lv7_67)) and not((funct3_reg_1395 = ap_const_lv3_0)) and (funct3_reg_1395 = ap_const_lv3_4) and (icmp_ln248_fu_708_p2 = ap_const_lv1_0))) or (not((op_code_reg_1391 = ap_const_lv7_3)) and not((op_code_reg_1391 = ap_const_lv7_23)) and not((op_code_reg_1391 = ap_const_lv7_17)) and not((op_code_reg_1391 = ap_const_lv7_13)) and not((op_code_reg_1391 = ap_const_lv7_6F)) and not((op_code_reg_1391 = 
    ap_const_lv7_67)) and not((funct3_reg_1395 = ap_const_lv3_0)) and (funct3_reg_1395 = ap_const_lv3_3) and (icmp_ln248_fu_708_p2 = ap_const_lv1_0))) or (not((op_code_reg_1391 = ap_const_lv7_3)) and not((op_code_reg_1391 = ap_const_lv7_23)) and not((op_code_reg_1391 = ap_const_lv7_17)) and not((op_code_reg_1391 = ap_const_lv7_13)) and not((op_code_reg_1391 = ap_const_lv7_6F)) and not((op_code_reg_1391 = ap_const_lv7_67)) and not((funct3_reg_1395 = ap_const_lv3_0)) and (funct3_reg_1395 = ap_const_lv3_2) and (icmp_ln248_fu_708_p2 = ap_const_lv1_0))) or (not((op_code_reg_1391 = ap_const_lv7_3)) and not((op_code_reg_1391 = ap_const_lv7_23)) and not((op_code_reg_1391 = ap_const_lv7_17)) and not((op_code_reg_1391 = ap_const_lv7_13)) and not((funct7_reg_1399 = ap_const_lv7_0)) and not((funct7_reg_1399 = ap_const_lv7_20)) and not((op_code_reg_1391 = ap_const_lv7_6F)) and not((op_code_reg_1391 = ap_const_lv7_67)) and (funct3_reg_1395 = ap_const_lv3_0))) or (not((op_code_reg_1391 = ap_const_lv7_3)) and not((op_code_reg_1391 
    = ap_const_lv7_23)) and not((op_code_reg_1391 = ap_const_lv7_17)) and not((op_code_reg_1391 = ap_const_lv7_13)) and not((op_code_reg_1391 = ap_const_lv7_33)) and not((op_code_reg_1391 = ap_const_lv7_6F)) and not((op_code_reg_1391 = ap_const_lv7_67)))) or (not((op_code_reg_1391 = ap_const_lv7_3)) and not((op_code_reg_1391 = ap_const_lv7_23)) and not((op_code_reg_1391 = ap_const_lv7_17)) and not((funct7_reg_1399 = ap_const_lv7_0)) and not((funct7_reg_1399 = ap_const_lv7_20)) and not((op_code_reg_1391 = ap_const_lv7_6F)) and not((op_code_reg_1391 = ap_const_lv7_67)) and not((funct3_reg_1395 = ap_const_lv3_1)) and (funct3_reg_1395 = ap_const_lv3_5) and (op_code_reg_1391 = ap_const_lv7_13))) or (not((op_code_reg_1391 = ap_const_lv7_3)) and not((op_code_reg_1391 = ap_const_lv7_23)) and not((op_code_reg_1391 = ap_const_lv7_17)) and not((op_code_reg_1391 = ap_const_lv7_6F)) and not((op_code_reg_1391 = ap_const_lv7_67)) and (funct3_reg_1395 = ap_const_lv3_1) and (op_code_reg_1391 = ap_const_lv7_13) and (icmp_ln248_fu_708_p2 
    = ap_const_lv1_0))) or (not((op_code_reg_1391 = ap_const_lv7_17)) and not((op_code_reg_1391 = ap_const_lv7_6F)) and not((op_code_reg_1391 = ap_const_lv7_67)) and (op_code_reg_1391 = ap_const_lv7_63)))))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln126_1_fu_876_p2 <= std_logic_vector(unsigned(trunc_ln126_fu_863_p1) + unsigned(sext_ln126_1_fu_860_p1));
    add_ln126_fu_866_p2 <= std_logic_vector(unsigned(zext_ln126_fu_854_p1) + unsigned(sext_ln126_fu_857_p1));
    add_ln178_1_fu_814_p2 <= std_logic_vector(unsigned(trunc_ln178_fu_801_p1) + unsigned(sext_ln178_1_fu_797_p1));
    add_ln178_fu_804_p2 <= std_logic_vector(unsigned(zext_ln178_fu_790_p1) + unsigned(sext_ln178_fu_793_p1));
    add_ln284_fu_1025_p2 <= std_logic_vector(unsigned(source2_reg_1518) + unsigned(source1_reg_1490));
    add_ln66_fu_1374_p2 <= std_logic_vector(unsigned(p_pc_load_reg_1378) + unsigned(imm_U_reg_1550));
    add_ln71_fu_958_p2 <= std_logic_vector(unsigned(p_pc_load_reg_1378) + unsigned(sext_ln44_fu_691_p1));
    and_ln244_fu_1041_p2 <= (source1_reg_1490 and sext_ln42_reg_1540);
    and_ln369_fu_1029_p2 <= (source2_reg_1518 and source1_reg_1490);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;
    ap_ST_fsm_state1_blk <= ap_const_logic_0;
    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_sig_allocacmp_p_error_load_assign_proc : process(p_error, op_code_reg_1391, funct3_reg_1395, ap_CS_fsm_state21)
    begin
        if ((not((funct3_reg_1395 = ap_const_lv3_2)) and not((funct3_reg_1395 = ap_const_lv3_0)) and not((funct3_reg_1395 = ap_const_lv3_1)) and not((funct3_reg_1395 = ap_const_lv3_4)) and not((funct3_reg_1395 = ap_const_lv3_5)) and (op_code_reg_1391 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            ap_sig_allocacmp_p_error_load <= ap_const_lv1_1;
        else 
            ap_sig_allocacmp_p_error_load <= p_error;
        end if; 
    end process;

    ashr_ln263_fu_1072_p2 <= std_logic_vector(shift_right(signed(source1_reg_1490),to_integer(unsigned('0' & zext_ln263_fu_1069_p1(31-1 downto 0)))));
    ashr_ln349_fu_980_p2 <= std_logic_vector(shift_right(signed(source1_reg_1490),to_integer(unsigned('0' & zext_ln349_fu_976_p1(31-1 downto 0)))));
    error <= ap_sig_allocacmp_p_error_load;
    grp_fu_382_p2 <= "1" when (unsigned(source1_reg_1490) < unsigned(source2_reg_1518)) else "0";
    grp_fu_386_p2 <= std_logic_vector(unsigned(p_pc_load_reg_1378) + unsigned(sext_ln41_fu_672_p1));
    grp_fu_390_p2 <= "1" when (signed(source1_reg_1490) < signed(source2_reg_1518)) else "0";
    grp_fu_394_p2 <= "1" when (source1_reg_1490 = source2_reg_1518) else "0";

    grp_fu_398_p1_assign_proc : process(sext_ln42_fu_677_p1, sext_ln42_reg_1540, ap_CS_fsm_state4, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_398_p1 <= sext_ln42_reg_1540;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_398_p1 <= sext_ln42_fu_677_p1;
        else 
            grp_fu_398_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_398_p2 <= std_logic_vector(unsigned(source1_reg_1490) + unsigned(grp_fu_398_p1));
    grp_fu_402_p4 <= memory_q0(31 downto 16);
    grp_fu_412_p4 <= memory_q0(31 downto 24);
    grp_fu_422_p4 <= memory_q0(23 downto 16);
    grp_fu_432_p4 <= memory_q0(15 downto 8);
    grp_fu_442_p2 <= std_logic_vector(unsigned(p_pc_load_reg_1378) + unsigned(ap_const_lv32_4));
    icmp_ln248_fu_708_p2 <= "1" when (funct7_reg_1399 = ap_const_lv7_0) else "0";
    icmp_ln387_fu_713_p2 <= "1" when (funct12_reg_1404 = ap_const_lv12_0) else "0";
    imm_B_fu_662_p6 <= ((((tmp_2_reg_1430 & tmp_1_reg_1425) & tmp_s_reg_1420) & tmp_reg_1415) & ap_const_lv1_0);
    imm_J_fu_681_p6 <= ((((tmp_2_reg_1430 & tmp_6_reg_1460) & tmp_5_reg_1455) & tmp_3_reg_1450) & ap_const_lv1_0);
    imm_U_fu_701_p3 <= (tmp_9_reg_1475 & ap_const_lv12_0);
    lshr_ln259_fu_1080_p2 <= std_logic_vector(shift_right(unsigned(source1_reg_1490),to_integer(unsigned('0' & zext_ln259_fu_1077_p1(31-1 downto 0)))));
    lshr_ln345_fu_992_p2 <= std_logic_vector(shift_right(unsigned(source1_reg_1490),to_integer(unsigned('0' & zext_ln345_fu_988_p1(31-1 downto 0)))));
    lshr_ln_fu_459_p4 <= p_pc(18 downto 2);
    mem_pos_1_fu_1090_p3 <= 
        sub_ln178_1_fu_1085_p2 when (tmp_12_reg_1569(0) = '1') else 
        trunc_ln178_2_reg_1580;
    mem_pos_fu_1139_p3 <= 
        sub_ln126_1_fu_1134_p2 when (tmp_10_reg_1591(0) = '1') else 
        trunc_ln126_2_reg_1602;
    mem_val_2_fu_1261_p5 <= (memory_q0(31 downto 8) & trunc_ln185_fu_1258_p1);
    mem_val_3_fu_1246_p5 <= (memory_q0(31 downto 16) & trunc_ln187_fu_1243_p1 & memory_q0(7 downto 0));
    mem_val_4_fu_1231_p5 <= (memory_q0(31 downto 24) & trunc_ln189_fu_1228_p1 & memory_q0(15 downto 0));
    mem_val_5_fu_1216_p5 <= (trunc_ln191_fu_1213_p1 & memory_q0(23 downto 0));
    mem_val_6_fu_1201_p5 <= (memory_q0(31 downto 16) & trunc_ln197_fu_1198_p1);
    mem_val_7_fu_1186_p5 <= (trunc_ln199_fu_1183_p1 & memory_q0(15 downto 0));

    memory_address0_assign_proc : process(op_code_reg_1391, ap_CS_fsm_state1, ap_CS_fsm_state19, memory_addr_2_reg_1740, zext_ln32_fu_469_p1, zext_ln180_fu_1129_p1, zext_ln128_fu_1178_p1, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            memory_address0 <= memory_addr_2_reg_1740;
        elsif (((op_code_reg_1391 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            memory_address0 <= zext_ln128_fu_1178_p1(17 - 1 downto 0);
        elsif (((op_code_reg_1391 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            memory_address0 <= zext_ln180_fu_1129_p1(17 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            memory_address0 <= zext_ln32_fu_469_p1(17 - 1 downto 0);
        else 
            memory_address0 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    memory_ce0_assign_proc : process(op_code_reg_1391, ap_CS_fsm_state1, ap_CS_fsm_state19, ap_CS_fsm_state21)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state21) or ((op_code_reg_1391 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state19)) or ((op_code_reg_1391 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state19)))) then 
            memory_ce0 <= ap_const_logic_1;
        else 
            memory_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    memory_d0 <= result_3012_reg_255;

    memory_we0_assign_proc : process(op_code_reg_1391, ap_CS_fsm_state21)
    begin
        if (((op_code_reg_1391 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            memory_we0 <= ap_const_logic_1;
        else 
            memory_we0 <= ap_const_logic_0;
        end if; 
    end process;

    op_code_fu_474_p1 <= memory_q0(7 - 1 downto 0);
    or_ln240_fu_1045_p2 <= (source1_reg_1490 or sext_ln42_reg_1540);
    or_ln360_fu_969_p2 <= (source2_reg_1518 or source1_reg_1490);
    p_and_t3_fu_1101_p3 <= (ap_const_lv1_0 & sub_ln179_fu_1096_p2);
    p_and_t_fu_1150_p3 <= (ap_const_lv1_0 & sub_ln127_fu_1145_p2);
    result_1_fu_1053_p2 <= "1" when (unsigned(source1_reg_1490) < unsigned(sext_ln42_reg_1540)) else "0";
    result_fu_1061_p2 <= "1" when (signed(source1_reg_1490) < signed(sext_ln42_reg_1540)) else "0";
    rs1_fu_508_p4 <= memory_q0(19 downto 15);
    rs2_fu_518_p4 <= memory_q0(24 downto 20);
    select_ln127_fu_1171_p3 <= 
        sub_ln127_1_fu_1158_p2 when (tmp_10_reg_1591(0) = '1') else 
        tmp_11_fu_1164_p3;
    select_ln179_fu_1122_p3 <= 
        sub_ln179_1_fu_1109_p2 when (tmp_12_reg_1569(0) = '1') else 
        tmp_13_fu_1115_p3;
        sext_ln126_1_fu_860_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(imm_I_reg_1436),19));

        sext_ln126_fu_857_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(imm_I_reg_1436),34));

        sext_ln133_fu_1339_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln133_fu_1335_p1),32));

        sext_ln135_fu_1331_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_432_p4),32));

        sext_ln137_fu_1327_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_422_p4),32));

        sext_ln139_fu_1323_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_412_p4),32));

        sext_ln144_fu_1319_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln144_fu_1315_p1),32));

        sext_ln146_fu_1311_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_402_p4),32));

        sext_ln178_1_fu_797_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_4_fu_695_p3),19));

        sext_ln178_fu_793_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_4_fu_695_p3),34));

        sext_ln41_fu_672_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(imm_B_fu_662_p6),32));

        sext_ln42_fu_677_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(imm_I_reg_1436),32));

        sext_ln44_fu_691_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(imm_J_fu_681_p6),32));

    shl_ln249_fu_1036_p2 <= std_logic_vector(shift_left(unsigned(source1_reg_1490),to_integer(unsigned('0' & zext_ln249_fu_1033_p1(31-1 downto 0)))));
    shl_ln300_fu_1016_p2 <= std_logic_vector(shift_left(unsigned(source1_reg_1490),to_integer(unsigned('0' & zext_ln300_fu_1012_p1(31-1 downto 0)))));
    sub_ln126_1_fu_1134_p2 <= std_logic_vector(unsigned(ap_const_lv17_0) - unsigned(trunc_ln126_1_reg_1597));
    sub_ln126_fu_890_p2 <= std_logic_vector(unsigned(ap_const_lv19_0) - unsigned(add_ln126_1_fu_876_p2));
    sub_ln127_1_fu_1158_p2 <= std_logic_vector(unsigned(ap_const_lv3_0) - unsigned(p_and_t_fu_1150_p3));
    sub_ln127_fu_1145_p2 <= std_logic_vector(unsigned(ap_const_lv2_0) - unsigned(trunc_ln126_3_reg_1585));
    sub_ln178_1_fu_1085_p2 <= std_logic_vector(unsigned(ap_const_lv17_0) - unsigned(trunc_ln178_1_reg_1575));
    sub_ln178_fu_828_p2 <= std_logic_vector(unsigned(ap_const_lv19_0) - unsigned(add_ln178_1_fu_814_p2));
    sub_ln179_1_fu_1109_p2 <= std_logic_vector(unsigned(ap_const_lv3_0) - unsigned(p_and_t3_fu_1101_p3));
    sub_ln179_fu_1096_p2 <= std_logic_vector(unsigned(ap_const_lv2_0) - unsigned(trunc_ln178_3_reg_1563));
    sub_ln289_fu_1021_p2 <= std_logic_vector(unsigned(source1_reg_1490) - unsigned(source2_reg_1518));
    tmp_11_fu_1164_p3 <= (ap_const_lv1_0 & trunc_ln126_3_reg_1585);
    tmp_13_fu_1115_p3 <= (ap_const_lv1_0 & trunc_ln178_3_reg_1563);
    tmp_4_fu_695_p3 <= (tmp_8_reg_1470 & tmp_7_reg_1465);
    trunc_ln126_3_fu_872_p1 <= add_ln126_fu_866_p2(2 - 1 downto 0);
    trunc_ln126_fu_863_p1 <= source1_reg_1490(19 - 1 downto 0);
    trunc_ln133_fu_1335_p1 <= memory_q0(8 - 1 downto 0);
    trunc_ln144_fu_1315_p1 <= memory_q0(16 - 1 downto 0);
    trunc_ln154_fu_1303_p1 <= memory_q0(8 - 1 downto 0);
    trunc_ln165_fu_1283_p1 <= memory_q0(16 - 1 downto 0);
    trunc_ln178_3_fu_810_p1 <= add_ln178_fu_804_p2(2 - 1 downto 0);
    trunc_ln178_fu_801_p1 <= source1_reg_1490(19 - 1 downto 0);
    trunc_ln185_fu_1258_p1 <= source2_reg_1518(8 - 1 downto 0);
    trunc_ln187_fu_1243_p1 <= source2_reg_1518(8 - 1 downto 0);
    trunc_ln189_fu_1228_p1 <= source2_reg_1518(8 - 1 downto 0);
    trunc_ln191_fu_1213_p1 <= source2_reg_1518(8 - 1 downto 0);
    trunc_ln197_fu_1198_p1 <= source2_reg_1518(16 - 1 downto 0);
    trunc_ln199_fu_1183_p1 <= source2_reg_1518(16 - 1 downto 0);
    trunc_ln300_fu_1009_p1 <= source2_reg_1518(5 - 1 downto 0);
    trunc_ln345_fu_985_p1 <= source2_reg_1518(5 - 1 downto 0);
    trunc_ln349_fu_973_p1 <= source2_reg_1518(5 - 1 downto 0);
    xor_ln236_fu_1049_p2 <= (source1_reg_1490 xor sext_ln42_reg_1540);
    xor_ln335_fu_997_p2 <= (source2_reg_1518 xor source1_reg_1490);

    xreg_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, zext_ln51_fu_657_p1, zext_ln403_fu_1370_p1, ap_CS_fsm_state22)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            xreg_address0 <= zext_ln403_fu_1370_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            xreg_address0 <= zext_ln51_fu_657_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            xreg_address0 <= ap_const_lv5_0;
        else 
            xreg_address0 <= "XXXXX";
        end if; 
    end process;


    xreg_address1_assign_proc : process(ap_CS_fsm_state2, zext_ln50_fu_652_p1, zext_ln403_1_fu_1349_p1, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            xreg_address1 <= zext_ln403_1_fu_1349_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            xreg_address1 <= zext_ln50_fu_652_p1(5 - 1 downto 0);
        else 
            xreg_address1 <= "XXXXX";
        end if; 
    end process;


    xreg_ce0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state22)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            xreg_ce0 <= ap_const_logic_1;
        else 
            xreg_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    xreg_ce1_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state21)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            xreg_ce1 <= ap_const_logic_1;
        else 
            xreg_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    xreg_d0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state22, grp_fu_442_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            xreg_d0 <= grp_fu_442_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            xreg_d0 <= ap_const_lv32_0;
        else 
            xreg_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    xreg_we0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state22)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            xreg_we0 <= ap_const_logic_1;
        else 
            xreg_we0 <= ap_const_logic_0;
        end if; 
    end process;


    xreg_we1_assign_proc : process(op_code_reg_1391, funct3_reg_1395, funct7_reg_1399, icmp_ln248_reg_1556, ap_CS_fsm_state21)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) and ((op_code_reg_1391 = ap_const_lv7_37) or ((op_code_reg_1391 = ap_const_lv7_17) or ((op_code_reg_1391 = ap_const_lv7_3) or (((((((((((((((((not((funct3_reg_1395 = ap_const_lv3_2)) and not((funct3_reg_1395 = ap_const_lv3_3)) and not((funct3_reg_1395 = ap_const_lv3_1)) and not((funct3_reg_1395 = ap_const_lv3_4)) and (funct7_reg_1399 = ap_const_lv7_0) and (funct3_reg_1395 = ap_const_lv3_5) and (op_code_reg_1391 = ap_const_lv7_33)) or (not((funct3_reg_1395 = ap_const_lv3_2)) and not((funct3_reg_1395 = ap_const_lv3_3)) and not((funct3_reg_1395 = ap_const_lv3_1)) and not((funct3_reg_1395 = ap_const_lv3_4)) and (funct7_reg_1399 = ap_const_lv7_20) and (funct3_reg_1395 = ap_const_lv3_5) and (op_code_reg_1391 = ap_const_lv7_33))) or (not((funct3_reg_1395 = ap_const_lv3_0)) and not((funct3_reg_1395 = ap_const_lv3_5)) and (op_code_reg_1391 = ap_const_lv7_33) and (icmp_ln248_reg_1556 = ap_const_lv1_1))) or (not((funct3_reg_1395 = ap_const_lv3_0)) and (funct3_reg_1395 = ap_const_lv3_4) 
    and (op_code_reg_1391 = ap_const_lv7_33) and (icmp_ln248_reg_1556 = ap_const_lv1_1))) or (not((funct3_reg_1395 = ap_const_lv3_0)) and (funct3_reg_1395 = ap_const_lv3_3) and (op_code_reg_1391 = ap_const_lv7_33) and (icmp_ln248_reg_1556 = ap_const_lv1_1))) or (not((funct3_reg_1395 = ap_const_lv3_0)) and (funct3_reg_1395 = ap_const_lv3_2) and (op_code_reg_1391 = ap_const_lv7_33) and (icmp_ln248_reg_1556 = ap_const_lv1_1))) or (not((funct3_reg_1395 = ap_const_lv3_0)) and (funct3_reg_1395 = ap_const_lv3_1) and (op_code_reg_1391 = ap_const_lv7_33) and (icmp_ln248_reg_1556 = ap_const_lv1_1))) or ((funct7_reg_1399 = ap_const_lv7_20) and (funct3_reg_1395 = ap_const_lv3_0) and (op_code_reg_1391 = ap_const_lv7_33))) or ((funct7_reg_1399 = ap_const_lv7_0) and (funct3_reg_1395 = ap_const_lv3_0) and (op_code_reg_1391 = ap_const_lv7_33))) or (not((funct3_reg_1395 = ap_const_lv3_1)) and (funct7_reg_1399 = ap_const_lv7_20) and (op_code_reg_1391 = ap_const_lv7_13))) or (not((funct3_reg_1395 = ap_const_lv3_1)) and (funct7_reg_1399 
    = ap_const_lv7_0) and (op_code_reg_1391 = ap_const_lv7_13))) or (not((funct3_reg_1395 = ap_const_lv3_1)) and not((funct3_reg_1395 = ap_const_lv3_5)) and (op_code_reg_1391 = ap_const_lv7_13))) or (not((funct3_reg_1395 = ap_const_lv3_1)) and (funct3_reg_1395 = ap_const_lv3_4) and (op_code_reg_1391 = ap_const_lv7_13))) or (not((funct3_reg_1395 = ap_const_lv3_1)) and (funct3_reg_1395 = ap_const_lv3_3) and (op_code_reg_1391 = ap_const_lv7_13))) or (not((funct3_reg_1395 = ap_const_lv3_1)) and (funct3_reg_1395 = ap_const_lv3_2) and (op_code_reg_1391 = ap_const_lv7_13))) or ((funct3_reg_1395 = ap_const_lv3_1) and (op_code_reg_1391 = ap_const_lv7_13) and (icmp_ln248_reg_1556 = ap_const_lv1_1))) or ((funct3_reg_1395 = ap_const_lv3_0) and (op_code_reg_1391 = ap_const_lv7_13)))))))) then 
            xreg_we1 <= ap_const_logic_1;
        else 
            xreg_we1 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln126_fu_854_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(source1_reg_1490),34));
    zext_ln128_fu_1178_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mem_pos_fu_1139_p3),64));
    zext_ln154_fu_1307_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln154_fu_1303_p1),32));
    zext_ln156_fu_1299_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_432_p4),32));
    zext_ln158_fu_1295_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_422_p4),32));
    zext_ln160_fu_1291_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_412_p4),32));
    zext_ln165_fu_1287_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln165_fu_1283_p1),32));
    zext_ln167_fu_1279_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_402_p4),32));
    zext_ln178_fu_790_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(source1_reg_1490),34));
    zext_ln180_fu_1129_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mem_pos_1_fu_1090_p3),64));
    zext_ln220_fu_1065_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(result_fu_1061_p2),32));
    zext_ln228_fu_1057_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(result_1_fu_1053_p2),32));
    zext_ln249_fu_1033_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(imm_I2_reg_1443),32));
    zext_ln259_fu_1077_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(imm_I2_reg_1443),32));
    zext_ln263_fu_1069_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(imm_I2_reg_1443),32));
    zext_ln300_fu_1012_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln300_fu_1009_p1),32));
    zext_ln309_fu_1005_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_390_p2),32));
    zext_ln322_fu_1001_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_382_p2),32));
    zext_ln32_fu_469_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_fu_459_p4),64));
    zext_ln345_fu_988_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln345_fu_985_p1),32));
    zext_ln349_fu_976_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln349_fu_973_p1),32));
    zext_ln403_1_fu_1349_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rd_reg_1409),64));
    zext_ln403_fu_1370_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rd_reg_1409),64));
    zext_ln50_fu_652_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rs1_fu_508_p4),64));
    zext_ln51_fu_657_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rs2_fu_518_p4),64));
end behav;
