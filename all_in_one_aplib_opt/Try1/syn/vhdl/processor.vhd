-- ==============================================================
-- Generated by Vitis HLS v2023.1.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity processor is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    memory_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
    memory_ce0 : OUT STD_LOGIC;
    memory_we0 : OUT STD_LOGIC;
    memory_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    memory_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    error : IN STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of processor is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "processor_processor,hls_ip_2023_1_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100t-csg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.514000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=0,HLS_SYN_FF=343,HLS_SYN_LUT=1648,HLS_VERSION=2023_1_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv7_23 : STD_LOGIC_VECTOR (6 downto 0) := "0100011";
    constant ap_const_lv7_3 : STD_LOGIC_VECTOR (6 downto 0) := "0000011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv7_6F : STD_LOGIC_VECTOR (6 downto 0) := "1101111";
    constant ap_const_lv7_17 : STD_LOGIC_VECTOR (6 downto 0) := "0010111";
    constant ap_const_lv7_37 : STD_LOGIC_VECTOR (6 downto 0) := "0110111";
    constant ap_const_lv7_63 : STD_LOGIC_VECTOR (6 downto 0) := "1100011";
    constant ap_const_lv7_73 : STD_LOGIC_VECTOR (6 downto 0) := "1110011";
    constant ap_const_lv7_67 : STD_LOGIC_VECTOR (6 downto 0) := "1100111";
    constant ap_const_lv7_13 : STD_LOGIC_VECTOR (6 downto 0) := "0010011";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv7_33 : STD_LOGIC_VECTOR (6 downto 0) := "0110011";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv7_20 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv7_F : STD_LOGIC_VECTOR (6 downto 0) := "0001111";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";

    signal xreg_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal xreg_ce0 : STD_LOGIC;
    signal xreg_we0 : STD_LOGIC;
    signal xreg_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal xreg_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal xreg_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal xreg_ce1 : STD_LOGIC;
    signal xreg_we1 : STD_LOGIC;
    signal xreg_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xreg_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal op_code_reg_1229 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_load_reg_1211 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal op_code_fu_521_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal funct3_reg_1233 : STD_LOGIC_VECTOR (2 downto 0);
    signal funct7_reg_1237 : STD_LOGIC_VECTOR (6 downto 0);
    signal rd_reg_1242 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln80_fu_627_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal imm_3_fu_641_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln71_fu_691_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln67_fu_723_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln63_fu_737_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal source1_reg_1283 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal source2_reg_1312 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln247_fu_741_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln247_reg_1331 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln341_fu_755_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln321_fu_759_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln310_fu_763_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln299_fu_767_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln282_fu_771_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln278_fu_775_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln348_fu_779_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln244_fu_783_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln241_fu_788_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln238_fu_793_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln231_fu_803_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln224_fu_812_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln221_fu_816_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal offset_1_fu_828_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal mem_val_7_fu_837_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal mem_val_6_fu_852_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal mem_val_5_fu_867_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal mem_val_4_fu_879_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal mem_val_3_fu_891_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal mem_val_2_fu_903_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln173_fu_915_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal offset_reg_1534 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln171_fu_923_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln164_fu_927_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln162_fu_931_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln160_fu_939_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln166_fu_943_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln152_fu_947_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln150_fu_955_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln143_fu_959_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln141_fu_963_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln139_fu_971_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln145_fu_975_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln91_fu_995_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ashr_ln332_fu_1012_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal lshr_ln329_fu_1024_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln292_fu_1036_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln248_fu_1049_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ashr_ln259_fu_1062_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln256_fu_1075_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal memory_addr_2_reg_1529 : STD_LOGIC_VECTOR (16 downto 0);
    signal offset_fu_1138_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_440_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal branch_5_reg_1543 : STD_LOGIC_VECTOR (0 downto 0);
    signal branch_4_reg_1547 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_444_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal branch_3_reg_1551 : STD_LOGIC_VECTOR (0 downto 0);
    signal branch_2_reg_1555 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_488_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal branch_1_reg_1559 : STD_LOGIC_VECTOR (0 downto 0);
    signal branch_reg_1563 : STD_LOGIC_VECTOR (0 downto 0);
    signal imm_5_reg_244 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_pn_reg_264 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_ph_reg_283 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_3033_reg_294 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_30_ph_ph_reg_320 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln37_fu_516_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln47_fu_575_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln48_fu_580_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln377_fu_746_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln185_fu_1103_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln134_fu_1144_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln377_1_fu_1184_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal empty_fu_168 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_434_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln386_fu_984_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal lshr_ln_fu_506_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal rs1_fu_555_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal rs2_fu_545_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_426_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_603_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_fu_595_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_585_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal imm_4_fu_613_p6 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_fu_631_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_4_fu_669_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_659_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_2_fu_649_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal imm_2_fu_677_p6 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_1_fu_705_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_s_fu_695_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal imm_1_fu_715_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal imm_fu_727_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal result_1_fu_798_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_fu_807_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln183_3_fu_824_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln183_2_fu_821_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln204_fu_834_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln202_fu_849_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln190_fu_864_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_448_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln171_fu_919_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_458_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_468_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln160_fu_935_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_478_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln150_fu_951_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln139_fu_967_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln332_fu_1005_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln332_fu_1008_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln329_fu_1017_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln329_fu_1020_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln292_fu_1029_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln292_fu_1032_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln248_fu_1041_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln248_fu_1045_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln259_fu_1054_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln259_fu_1058_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln256_fu_1067_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln256_fu_1071_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln183_1_fu_1083_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal trunc_ln183_fu_1080_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln183_fu_1087_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal mem_pos_1_fu_1093_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln132_1_fu_1111_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal trunc_ln132_fu_1108_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln132_fu_1122_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal trunc_ln132_3_fu_1118_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln132_2_fu_1115_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal mem_pos_fu_1128_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_condition_112 : BOOLEAN;
    signal ap_condition_1007 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component processor_xreg_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    xreg_U : component processor_xreg_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => xreg_address0,
        ce0 => xreg_ce0,
        we0 => xreg_we0,
        d0 => xreg_d0,
        q0 => xreg_q0,
        address1 => xreg_address1,
        ce1 => xreg_ce1,
        we1 => xreg_we1,
        d1 => xreg_d1,
        q1 => xreg_q1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    empty_fu_168_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
                empty_fu_168 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and ((op_code_reg_1229 = ap_const_lv7_67) or (((((((op_code_reg_1229 = ap_const_lv7_6F) or ((funct3_reg_1233 = ap_const_lv3_7) and (op_code_reg_1229 = ap_const_lv7_63) and (branch_5_reg_1543 = ap_const_lv1_0))) or ((funct3_reg_1233 = ap_const_lv3_6) and (op_code_reg_1229 = ap_const_lv7_63) and (branch_4_reg_1547 = ap_const_lv1_1))) or ((funct3_reg_1233 = ap_const_lv3_5) and (op_code_reg_1229 = ap_const_lv7_63) and (branch_3_reg_1551 = ap_const_lv1_0))) or ((funct3_reg_1233 = ap_const_lv3_4) and (op_code_reg_1229 = ap_const_lv7_63) and (branch_2_reg_1555 = ap_const_lv1_1))) or (not((funct3_reg_1233 = ap_const_lv3_5)) and not((funct3_reg_1233 = ap_const_lv3_1)) and not((funct3_reg_1233 = ap_const_lv3_7)) and not((funct3_reg_1233 = ap_const_lv3_2)) and not((funct3_reg_1233 = ap_const_lv3_3)) and not((funct3_reg_1233 = ap_const_lv3_4)) and not((funct3_reg_1233 = ap_const_lv3_6)) and (op_code_reg_1229 = ap_const_lv7_63) and (branch_reg_1563 = ap_const_lv1_1))) or ((funct3_reg_1233 
    = ap_const_lv3_1) and (op_code_reg_1229 = ap_const_lv7_63) and (branch_1_reg_1559 = ap_const_lv1_0)))))) then 
                empty_fu_168 <= add_ln386_fu_984_p2;
            elsif (((not((op_code_reg_1229 = ap_const_lv7_3)) and not((op_code_reg_1229 = ap_const_lv7_23)) and not((op_code_reg_1229 = ap_const_lv7_F)) and not((op_code_reg_1229 = ap_const_lv7_73)) and not((op_code_reg_1229 = ap_const_lv7_37)) and not((op_code_reg_1229 = ap_const_lv7_67)) and not((op_code_reg_1229 = ap_const_lv7_6F)) and not((op_code_reg_1229 = ap_const_lv7_63)) and not((op_code_reg_1229 = ap_const_lv7_17)) and not((op_code_reg_1229 = ap_const_lv7_13)) and not((op_code_reg_1229 = ap_const_lv7_33)) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((op_code_reg_1229 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_const_logic_1 = ap_CS_fsm_state5) and (((op_code_reg_1229 = ap_const_lv7_F) or ((funct3_reg_1233 = ap_const_lv3_3) and (op_code_reg_1229 = ap_const_lv7_63))) or ((funct3_reg_1233 = ap_const_lv3_2) and (op_code_reg_1229 = ap_const_lv7_63)))) or ((op_code_reg_1229 = ap_const_lv7_73) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and ((op_code_reg_1229 
    = ap_const_lv7_3) or ((op_code_reg_1229 = ap_const_lv7_13) or ((op_code_reg_1229 = ap_const_lv7_37) or ((op_code_reg_1229 = ap_const_lv7_17) or (op_code_reg_1229 = ap_const_lv7_33)))))) or ((funct3_reg_1233 = ap_const_lv3_5) and (op_code_reg_1229 = ap_const_lv7_63) and (grp_fu_444_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((funct3_reg_1233 = ap_const_lv3_1) and (op_code_reg_1229 = ap_const_lv7_63) and (grp_fu_488_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((funct3_reg_1233 = ap_const_lv3_7) and (op_code_reg_1229 = ap_const_lv7_63) and (grp_fu_440_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((funct3_reg_1233 = ap_const_lv3_0) and (op_code_reg_1229 = ap_const_lv7_63) and (grp_fu_488_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((funct3_reg_1233 = ap_const_lv3_4) and (op_code_reg_1229 = ap_const_lv7_63) and (grp_fu_444_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((funct3_reg_1233 = ap_const_lv3_6) 
    and (op_code_reg_1229 = ap_const_lv7_63) and (grp_fu_440_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
                empty_fu_168 <= grp_fu_434_p2;
            end if; 
        end if;
    end process;

    imm_5_reg_244_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                if ((ap_const_boolean_1 = ap_condition_112)) then 
                    imm_5_reg_244 <= sext_ln63_fu_737_p1;
                elsif (((op_code_fu_521_p1 = ap_const_lv7_37) or (op_code_fu_521_p1 = ap_const_lv7_17))) then 
                    imm_5_reg_244 <= imm_3_fu_641_p3;
                elsif ((op_code_fu_521_p1 = ap_const_lv7_23)) then 
                    imm_5_reg_244 <= sext_ln67_fu_723_p1;
                elsif ((op_code_fu_521_p1 = ap_const_lv7_63)) then 
                    imm_5_reg_244 <= sext_ln71_fu_691_p1;
                elsif ((op_code_fu_521_p1 = ap_const_lv7_6F)) then 
                    imm_5_reg_244 <= sext_ln80_fu_627_p1;
                end if;
            end if; 
        end if;
    end process;

    p_ph_reg_283_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                if ((op_code_reg_1229 = ap_const_lv7_6F)) then 
                    p_ph_reg_283 <= p_load_reg_1211;
                elsif ((op_code_reg_1229 = ap_const_lv7_67)) then 
                    p_ph_reg_283 <= xreg_q1;
                end if;
            end if; 
        end if;
    end process;

    p_pn_reg_264_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and ((op_code_reg_1229 = ap_const_lv7_6F) or (op_code_reg_1229 = ap_const_lv7_67)))) then 
                p_pn_reg_264 <= p_ph_reg_283;
            elsif ((((funct3_reg_1233 = ap_const_lv3_5) and (op_code_reg_1229 = ap_const_lv7_63) and (grp_fu_444_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((funct3_reg_1233 = ap_const_lv3_1) and (op_code_reg_1229 = ap_const_lv7_63) and (grp_fu_488_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((funct3_reg_1233 = ap_const_lv3_7) and (op_code_reg_1229 = ap_const_lv7_63) and (grp_fu_440_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((funct3_reg_1233 = ap_const_lv3_0) and (op_code_reg_1229 = ap_const_lv7_63) and (grp_fu_488_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((funct3_reg_1233 = ap_const_lv3_4) and (op_code_reg_1229 = ap_const_lv7_63) and (grp_fu_444_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((funct3_reg_1233 = ap_const_lv3_6) and (op_code_reg_1229 = ap_const_lv7_63) and (grp_fu_440_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
                p_pn_reg_264 <= p_load_reg_1211;
            end if; 
        end if;
    end process;

    result_3033_reg_294_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((op_code_reg_1229 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                if (((funct3_reg_1233 = ap_const_lv3_1) and (offset_1_fu_828_p2 = ap_const_lv2_2))) then 
                    result_3033_reg_294 <= mem_val_7_fu_837_p5;
                elsif (((funct3_reg_1233 = ap_const_lv3_1) and (offset_1_fu_828_p2 = ap_const_lv2_0))) then 
                    result_3033_reg_294 <= mem_val_6_fu_852_p5;
                elsif (((funct3_reg_1233 = ap_const_lv3_0) and (offset_1_fu_828_p2 = ap_const_lv2_2))) then 
                    result_3033_reg_294 <= mem_val_5_fu_867_p5;
                elsif (((funct3_reg_1233 = ap_const_lv3_0) and (offset_1_fu_828_p2 = ap_const_lv2_1))) then 
                    result_3033_reg_294 <= mem_val_4_fu_879_p5;
                elsif (((funct3_reg_1233 = ap_const_lv3_0) and (offset_1_fu_828_p2 = ap_const_lv2_0))) then 
                    result_3033_reg_294 <= mem_val_3_fu_891_p5;
                elsif ((ap_const_boolean_1 = ap_condition_1007)) then 
                    result_3033_reg_294 <= memory_q0;
                elsif (((funct3_reg_1233 = ap_const_lv3_0) and (offset_1_fu_828_p2 = ap_const_lv2_3))) then 
                    result_3033_reg_294 <= mem_val_2_fu_903_p5;
                elsif ((funct3_reg_1233 = ap_const_lv3_2)) then 
                    result_3033_reg_294 <= source2_reg_1312;
                end if;
            end if; 
        end if;
    end process;

    result_30_ph_ph_reg_320_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((funct3_reg_1233 = ap_const_lv3_0) and (op_code_reg_1229 = ap_const_lv7_3) and (offset_reg_1534 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                result_30_ph_ph_reg_320 <= sext_ln139_fu_971_p1;
            elsif (((funct3_reg_1233 = ap_const_lv3_0) and (op_code_reg_1229 = ap_const_lv7_3) and (offset_reg_1534 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                result_30_ph_ph_reg_320 <= sext_ln143_fu_959_p1;
            elsif (((funct3_reg_1233 = ap_const_lv3_0) and (op_code_reg_1229 = ap_const_lv7_3) and (offset_reg_1534 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                result_30_ph_ph_reg_320 <= sext_ln141_fu_963_p1;
            elsif (((funct3_reg_1233 = ap_const_lv3_1) and (op_code_reg_1229 = ap_const_lv7_3) and (offset_reg_1534 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                result_30_ph_ph_reg_320 <= sext_ln150_fu_955_p1;
            elsif (((funct3_reg_1233 = ap_const_lv3_1) and (op_code_reg_1229 = ap_const_lv7_3) and (offset_reg_1534 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                result_30_ph_ph_reg_320 <= sext_ln152_fu_947_p1;
            elsif (((funct3_reg_1233 = ap_const_lv3_4) and (op_code_reg_1229 = ap_const_lv7_3) and (offset_reg_1534 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                result_30_ph_ph_reg_320 <= zext_ln160_fu_939_p1;
            elsif (((funct3_reg_1233 = ap_const_lv3_4) and (op_code_reg_1229 = ap_const_lv7_3) and (offset_reg_1534 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                result_30_ph_ph_reg_320 <= zext_ln164_fu_927_p1;
            elsif (((funct3_reg_1233 = ap_const_lv3_4) and (op_code_reg_1229 = ap_const_lv7_3) and (offset_reg_1534 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                result_30_ph_ph_reg_320 <= zext_ln162_fu_931_p1;
            elsif (((funct3_reg_1233 = ap_const_lv3_5) and (op_code_reg_1229 = ap_const_lv7_3) and (offset_reg_1534 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                result_30_ph_ph_reg_320 <= zext_ln171_fu_923_p1;
            elsif (((funct3_reg_1233 = ap_const_lv3_5) and (op_code_reg_1229 = ap_const_lv7_3) and (offset_reg_1534 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                result_30_ph_ph_reg_320 <= zext_ln173_fu_915_p1;
            elsif (((funct7_reg_1237 = ap_const_lv7_0) and (funct3_reg_1233 = ap_const_lv3_0) and (op_code_reg_1229 = ap_const_lv7_33) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                result_30_ph_ph_reg_320 <= add_ln278_fu_775_p2;
            elsif (((funct7_reg_1237 = ap_const_lv7_20) and (funct3_reg_1233 = ap_const_lv3_0) and (op_code_reg_1229 = ap_const_lv7_33) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                result_30_ph_ph_reg_320 <= sub_ln282_fu_771_p2;
            elsif (((funct7_reg_1237 = ap_const_lv7_0) and (funct3_reg_1233 = ap_const_lv3_5) and (op_code_reg_1229 = ap_const_lv7_33) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                result_30_ph_ph_reg_320 <= lshr_ln329_fu_1024_p2;
            elsif (((funct7_reg_1237 = ap_const_lv7_20) and (funct3_reg_1233 = ap_const_lv3_5) and (op_code_reg_1229 = ap_const_lv7_33) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                result_30_ph_ph_reg_320 <= ashr_ln332_fu_1012_p2;
            elsif (((funct3_reg_1233 = ap_const_lv3_0) and (op_code_reg_1229 = ap_const_lv7_3) and (offset_reg_1534 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                result_30_ph_ph_reg_320 <= sext_ln145_fu_975_p1;
            elsif (((funct3_reg_1233 = ap_const_lv3_4) and (op_code_reg_1229 = ap_const_lv7_3) and (offset_reg_1534 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                result_30_ph_ph_reg_320 <= zext_ln166_fu_943_p1;
            elsif (((funct3_reg_1233 = ap_const_lv3_2) and (op_code_reg_1229 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                result_30_ph_ph_reg_320 <= memory_q0;
            elsif (((funct3_reg_1233 = ap_const_lv3_1) and (op_code_reg_1229 = ap_const_lv7_13) and (ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln247_reg_1331 = ap_const_lv1_1))) then 
                result_30_ph_ph_reg_320 <= shl_ln248_fu_1049_p2;
            elsif (((funct3_reg_1233 = ap_const_lv3_0) and (op_code_reg_1229 = ap_const_lv7_13) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                result_30_ph_ph_reg_320 <= add_ln221_fu_816_p2;
            elsif (((funct3_reg_1233 = ap_const_lv3_2) and (op_code_reg_1229 = ap_const_lv7_13) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                result_30_ph_ph_reg_320 <= zext_ln224_fu_812_p1;
            elsif (((funct3_reg_1233 = ap_const_lv3_3) and (op_code_reg_1229 = ap_const_lv7_13) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                result_30_ph_ph_reg_320 <= zext_ln231_fu_803_p1;
            elsif (((funct3_reg_1233 = ap_const_lv3_4) and (op_code_reg_1229 = ap_const_lv7_13) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                result_30_ph_ph_reg_320 <= xor_ln238_fu_793_p2;
            elsif (((funct3_reg_1233 = ap_const_lv3_6) and (op_code_reg_1229 = ap_const_lv7_13) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                result_30_ph_ph_reg_320 <= or_ln241_fu_788_p2;
            elsif (((funct3_reg_1233 = ap_const_lv3_7) and (op_code_reg_1229 = ap_const_lv7_13) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                result_30_ph_ph_reg_320 <= and_ln244_fu_783_p2;
            elsif (((funct3_reg_1233 = ap_const_lv3_1) and (op_code_reg_1229 = ap_const_lv7_33) and (ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln247_reg_1331 = ap_const_lv1_1))) then 
                result_30_ph_ph_reg_320 <= shl_ln292_fu_1036_p2;
            elsif (((funct3_reg_1233 = ap_const_lv3_2) and (op_code_reg_1229 = ap_const_lv7_33) and (ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln247_reg_1331 = ap_const_lv1_1))) then 
                result_30_ph_ph_reg_320 <= zext_ln299_fu_767_p1;
            elsif (((funct3_reg_1233 = ap_const_lv3_3) and (op_code_reg_1229 = ap_const_lv7_33) and (ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln247_reg_1331 = ap_const_lv1_1))) then 
                result_30_ph_ph_reg_320 <= zext_ln310_fu_763_p1;
            elsif (((funct3_reg_1233 = ap_const_lv3_4) and (op_code_reg_1229 = ap_const_lv7_33) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                result_30_ph_ph_reg_320 <= xor_ln321_fu_759_p2;
            elsif (((funct3_reg_1233 = ap_const_lv3_6) and (op_code_reg_1229 = ap_const_lv7_33) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                result_30_ph_ph_reg_320 <= or_ln341_fu_755_p2;
            elsif (((funct7_reg_1237 = ap_const_lv7_0) and (funct3_reg_1233 = ap_const_lv3_5) and (op_code_reg_1229 = ap_const_lv7_13) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                result_30_ph_ph_reg_320 <= lshr_ln256_fu_1075_p2;
            elsif (((funct7_reg_1237 = ap_const_lv7_20) and (funct3_reg_1233 = ap_const_lv3_5) and (op_code_reg_1229 = ap_const_lv7_13) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                result_30_ph_ph_reg_320 <= ashr_ln259_fu_1062_p2;
            elsif (((op_code_reg_1229 = ap_const_lv7_37) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                result_30_ph_ph_reg_320 <= imm_5_reg_244;
            elsif (((funct3_reg_1233 = ap_const_lv3_7) and (op_code_reg_1229 = ap_const_lv7_33) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                result_30_ph_ph_reg_320 <= and_ln348_fu_779_p2;
            elsif (((op_code_reg_1229 = ap_const_lv7_17) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                result_30_ph_ph_reg_320 <= add_ln91_fu_995_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((funct3_reg_1233 = ap_const_lv3_1) and (op_code_reg_1229 = ap_const_lv7_63) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                branch_1_reg_1559 <= grp_fu_488_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((funct3_reg_1233 = ap_const_lv3_4) and (op_code_reg_1229 = ap_const_lv7_63) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                branch_2_reg_1555 <= grp_fu_444_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((funct3_reg_1233 = ap_const_lv3_5) and (op_code_reg_1229 = ap_const_lv7_63) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                branch_3_reg_1551 <= grp_fu_444_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((funct3_reg_1233 = ap_const_lv3_6) and (op_code_reg_1229 = ap_const_lv7_63) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                branch_4_reg_1547 <= grp_fu_440_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((funct3_reg_1233 = ap_const_lv3_7) and (op_code_reg_1229 = ap_const_lv7_63) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                branch_5_reg_1543 <= grp_fu_440_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((funct3_reg_1233 = ap_const_lv3_0) and (op_code_reg_1229 = ap_const_lv7_63) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                branch_reg_1563 <= grp_fu_488_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                funct3_reg_1233 <= memory_q0(14 downto 12);
                funct7_reg_1237 <= memory_q0(31 downto 25);
                op_code_reg_1229 <= op_code_fu_521_p1;
                rd_reg_1242 <= memory_q0(11 downto 7);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                icmp_ln247_reg_1331 <= icmp_ln247_fu_741_p2;
                source1_reg_1283 <= xreg_q1;
                source2_reg_1312 <= xreg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((op_code_reg_1229 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                memory_addr_2_reg_1529 <= zext_ln185_fu_1103_p1(17 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((op_code_reg_1229 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                offset_reg_1534 <= offset_fu_1138_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                p_load_reg_1211 <= empty_fu_168;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    add_ln132_fu_1122_p2 <= std_logic_vector(unsigned(trunc_ln132_1_fu_1111_p1) + unsigned(trunc_ln132_fu_1108_p1));
    add_ln183_fu_1087_p2 <= std_logic_vector(unsigned(trunc_ln183_1_fu_1083_p1) + unsigned(trunc_ln183_fu_1080_p1));
    add_ln221_fu_816_p2 <= std_logic_vector(unsigned(source1_reg_1283) + unsigned(imm_5_reg_244));
    add_ln278_fu_775_p2 <= std_logic_vector(unsigned(source2_reg_1312) + unsigned(source1_reg_1283));
    add_ln386_fu_984_p2 <= std_logic_vector(unsigned(p_pn_reg_264) + unsigned(imm_5_reg_244));
    add_ln91_fu_995_p2 <= std_logic_vector(unsigned(imm_5_reg_244) + unsigned(p_load_reg_1211));
    and_ln244_fu_783_p2 <= (source1_reg_1283 and imm_5_reg_244);
    and_ln348_fu_779_p2 <= (source2_reg_1312 and source1_reg_1283);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_ST_fsm_state1_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;

    ap_condition_1007_assign_proc : process(funct3_reg_1233, offset_1_fu_828_p2)
    begin
                ap_condition_1007 <= (not((offset_1_fu_828_p2 = ap_const_lv2_0)) and not((offset_1_fu_828_p2 = ap_const_lv2_2)) and (funct3_reg_1233 = ap_const_lv3_1));
    end process;


    ap_condition_112_assign_proc : process(op_code_fu_521_p1)
    begin
                ap_condition_112 <= ((op_code_fu_521_p1 = ap_const_lv7_3) or ((op_code_fu_521_p1 = ap_const_lv7_13) or ((op_code_fu_521_p1 = ap_const_lv7_67) or (op_code_fu_521_p1 = ap_const_lv7_73))));
    end process;

    ashr_ln259_fu_1062_p2 <= std_logic_vector(shift_right(signed(source1_reg_1283),to_integer(unsigned('0' & zext_ln259_fu_1058_p1(31-1 downto 0)))));
    ashr_ln332_fu_1012_p2 <= std_logic_vector(shift_right(signed(source1_reg_1283),to_integer(unsigned('0' & zext_ln332_fu_1008_p1(31-1 downto 0)))));
    grp_fu_426_p3 <= memory_q0(31 downto 31);
    grp_fu_434_p2 <= std_logic_vector(unsigned(p_load_reg_1211) + unsigned(ap_const_lv32_4));
    grp_fu_440_p2 <= "1" when (unsigned(source1_reg_1283) < unsigned(source2_reg_1312)) else "0";
    grp_fu_444_p2 <= "1" when (signed(source1_reg_1283) < signed(source2_reg_1312)) else "0";
    grp_fu_448_p4 <= memory_q0(31 downto 16);
    grp_fu_458_p4 <= memory_q0(23 downto 16);
    grp_fu_468_p4 <= memory_q0(15 downto 8);
    grp_fu_478_p4 <= memory_q0(31 downto 24);
    grp_fu_488_p2 <= "1" when (source1_reg_1283 = source2_reg_1312) else "0";
    icmp_ln247_fu_741_p2 <= "1" when (funct7_reg_1237 = ap_const_lv7_0) else "0";
    imm_1_fu_715_p3 <= (tmp_1_fu_705_p4 & tmp_s_fu_695_p4);
    imm_2_fu_677_p6 <= ((((grp_fu_426_p3 & tmp_4_fu_669_p3) & tmp_3_fu_659_p4) & tmp_2_fu_649_p4) & ap_const_lv1_0);
    imm_3_fu_641_p3 <= (tmp_fu_631_p4 & ap_const_lv12_0);
    imm_4_fu_613_p6 <= ((((grp_fu_426_p3 & tmp_8_fu_603_p4) & tmp_7_fu_595_p3) & tmp_6_fu_585_p4) & ap_const_lv1_0);
    imm_fu_727_p4 <= memory_q0(31 downto 20);
    lshr_ln256_fu_1075_p2 <= std_logic_vector(shift_right(unsigned(source1_reg_1283),to_integer(unsigned('0' & zext_ln256_fu_1071_p1(31-1 downto 0)))));
    lshr_ln329_fu_1024_p2 <= std_logic_vector(shift_right(unsigned(source1_reg_1283),to_integer(unsigned('0' & zext_ln329_fu_1020_p1(31-1 downto 0)))));
    lshr_ln_fu_506_p4 <= empty_fu_168(18 downto 2);
    mem_pos_1_fu_1093_p4 <= add_ln183_fu_1087_p2(18 downto 2);
    mem_pos_fu_1128_p4 <= add_ln132_fu_1122_p2(18 downto 2);
    mem_val_2_fu_903_p5 <= (trunc_ln190_fu_864_p1 & memory_q0(23 downto 0));
    mem_val_3_fu_891_p5 <= (memory_q0(31 downto 8) & trunc_ln190_fu_864_p1);
    mem_val_4_fu_879_p5 <= (memory_q0(31 downto 16) & trunc_ln190_fu_864_p1 & memory_q0(7 downto 0));
    mem_val_5_fu_867_p5 <= (memory_q0(31 downto 24) & trunc_ln190_fu_864_p1 & memory_q0(15 downto 0));
    mem_val_6_fu_852_p5 <= (memory_q0(31 downto 16) & trunc_ln202_fu_849_p1);
    mem_val_7_fu_837_p5 <= (trunc_ln204_fu_834_p1 & memory_q0(15 downto 0));

    memory_address0_assign_proc : process(op_code_reg_1229, ap_CS_fsm_state2, ap_CS_fsm_state6, memory_addr_2_reg_1529, zext_ln37_fu_516_p1, zext_ln185_fu_1103_p1, zext_ln134_fu_1144_p1, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            memory_address0 <= memory_addr_2_reg_1529;
        elsif (((op_code_reg_1229 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            memory_address0 <= zext_ln134_fu_1144_p1(17 - 1 downto 0);
        elsif (((op_code_reg_1229 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            memory_address0 <= zext_ln185_fu_1103_p1(17 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            memory_address0 <= zext_ln37_fu_516_p1(17 - 1 downto 0);
        else 
            memory_address0 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    memory_ce0_assign_proc : process(op_code_reg_1229, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state7) or ((op_code_reg_1229 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((op_code_reg_1229 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            memory_ce0 <= ap_const_logic_1;
        else 
            memory_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    memory_d0 <= result_3033_reg_294;

    memory_we0_assign_proc : process(op_code_reg_1229, ap_CS_fsm_state7)
    begin
        if (((op_code_reg_1229 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            memory_we0 <= ap_const_logic_1;
        else 
            memory_we0 <= ap_const_logic_0;
        end if; 
    end process;

    offset_1_fu_828_p2 <= std_logic_vector(unsigned(trunc_ln183_3_fu_824_p1) + unsigned(trunc_ln183_2_fu_821_p1));
    offset_fu_1138_p2 <= std_logic_vector(unsigned(trunc_ln132_3_fu_1118_p1) + unsigned(trunc_ln132_2_fu_1115_p1));
    op_code_fu_521_p1 <= memory_q0(7 - 1 downto 0);
    or_ln241_fu_788_p2 <= (source1_reg_1283 or imm_5_reg_244);
    or_ln341_fu_755_p2 <= (source2_reg_1312 or source1_reg_1283);
    result_1_fu_798_p2 <= "1" when (unsigned(source1_reg_1283) < unsigned(imm_5_reg_244)) else "0";
    result_fu_807_p2 <= "1" when (signed(source1_reg_1283) < signed(imm_5_reg_244)) else "0";
    rs1_fu_555_p4 <= memory_q0(19 downto 15);
    rs2_fu_545_p4 <= memory_q0(24 downto 20);
        sext_ln139_fu_971_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln139_fu_967_p1),32));

        sext_ln141_fu_963_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_468_p4),32));

        sext_ln143_fu_959_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_458_p4),32));

        sext_ln145_fu_975_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_478_p4),32));

        sext_ln150_fu_955_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln150_fu_951_p1),32));

        sext_ln152_fu_947_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_448_p4),32));

        sext_ln63_fu_737_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(imm_fu_727_p4),32));

        sext_ln67_fu_723_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(imm_1_fu_715_p3),32));

        sext_ln71_fu_691_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(imm_2_fu_677_p6),32));

        sext_ln80_fu_627_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(imm_4_fu_613_p6),32));

    shl_ln248_fu_1049_p2 <= std_logic_vector(shift_left(unsigned(source1_reg_1283),to_integer(unsigned('0' & zext_ln248_fu_1045_p1(31-1 downto 0)))));
    shl_ln292_fu_1036_p2 <= std_logic_vector(shift_left(unsigned(source1_reg_1283),to_integer(unsigned('0' & zext_ln292_fu_1032_p1(31-1 downto 0)))));
    sub_ln282_fu_771_p2 <= std_logic_vector(unsigned(source1_reg_1283) - unsigned(source2_reg_1312));
    tmp_1_fu_705_p4 <= memory_q0(31 downto 25);
    tmp_2_fu_649_p4 <= memory_q0(11 downto 8);
    tmp_3_fu_659_p4 <= memory_q0(30 downto 25);
    tmp_4_fu_669_p3 <= memory_q0(7 downto 7);
    tmp_6_fu_585_p4 <= memory_q0(30 downto 21);
    tmp_7_fu_595_p3 <= memory_q0(20 downto 20);
    tmp_8_fu_603_p4 <= memory_q0(19 downto 12);
    tmp_fu_631_p4 <= memory_q0(31 downto 12);
    tmp_s_fu_695_p4 <= memory_q0(11 downto 7);
    trunc_ln132_1_fu_1111_p1 <= imm_5_reg_244(19 - 1 downto 0);
    trunc_ln132_2_fu_1115_p1 <= source1_reg_1283(2 - 1 downto 0);
    trunc_ln132_3_fu_1118_p1 <= imm_5_reg_244(2 - 1 downto 0);
    trunc_ln132_fu_1108_p1 <= source1_reg_1283(19 - 1 downto 0);
    trunc_ln139_fu_967_p1 <= memory_q0(8 - 1 downto 0);
    trunc_ln150_fu_951_p1 <= memory_q0(16 - 1 downto 0);
    trunc_ln160_fu_935_p1 <= memory_q0(8 - 1 downto 0);
    trunc_ln171_fu_919_p1 <= memory_q0(16 - 1 downto 0);
    trunc_ln183_1_fu_1083_p1 <= imm_5_reg_244(19 - 1 downto 0);
    trunc_ln183_2_fu_821_p1 <= source1_reg_1283(2 - 1 downto 0);
    trunc_ln183_3_fu_824_p1 <= imm_5_reg_244(2 - 1 downto 0);
    trunc_ln183_fu_1080_p1 <= source1_reg_1283(19 - 1 downto 0);
    trunc_ln190_fu_864_p1 <= source2_reg_1312(8 - 1 downto 0);
    trunc_ln202_fu_849_p1 <= source2_reg_1312(16 - 1 downto 0);
    trunc_ln204_fu_834_p1 <= source2_reg_1312(16 - 1 downto 0);
    trunc_ln248_fu_1041_p1 <= imm_5_reg_244(5 - 1 downto 0);
    trunc_ln256_fu_1067_p1 <= imm_5_reg_244(5 - 1 downto 0);
    trunc_ln259_fu_1054_p1 <= imm_5_reg_244(5 - 1 downto 0);
    trunc_ln292_fu_1029_p1 <= source2_reg_1312(5 - 1 downto 0);
    trunc_ln329_fu_1017_p1 <= source2_reg_1312(5 - 1 downto 0);
    trunc_ln332_fu_1005_p1 <= source2_reg_1312(5 - 1 downto 0);
    xor_ln238_fu_793_p2 <= (source1_reg_1283 xor imm_5_reg_244);
    xor_ln321_fu_759_p2 <= (source2_reg_1312 xor source1_reg_1283);

    xreg_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, zext_ln48_fu_580_p1, zext_ln377_1_fu_1184_p1, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            xreg_address0 <= zext_ln377_1_fu_1184_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            xreg_address0 <= zext_ln48_fu_580_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            xreg_address0 <= ap_const_lv5_0;
        else 
            xreg_address0 <= "XXXXX";
        end if; 
    end process;


    xreg_address1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, zext_ln47_fu_575_p1, zext_ln377_fu_746_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            xreg_address1 <= zext_ln377_fu_746_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            xreg_address1 <= zext_ln47_fu_575_p1(5 - 1 downto 0);
        else 
            xreg_address1 <= "XXXXX";
        end if; 
    end process;


    xreg_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            xreg_ce0 <= ap_const_logic_1;
        else 
            xreg_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    xreg_ce1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            xreg_ce1 <= ap_const_logic_1;
        else 
            xreg_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    xreg_d0_assign_proc : process(ap_CS_fsm_state2, result_30_ph_ph_reg_320, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            xreg_d0 <= result_30_ph_ph_reg_320;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            xreg_d0 <= ap_const_lv32_0;
        else 
            xreg_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    xreg_d1 <= std_logic_vector(unsigned(p_load_reg_1211) + unsigned(ap_const_lv32_4));

    xreg_we0_assign_proc : process(op_code_reg_1229, ap_CS_fsm_state2, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_state7) and ((op_code_reg_1229 = ap_const_lv7_3) or ((op_code_reg_1229 = ap_const_lv7_13) or ((op_code_reg_1229 = ap_const_lv7_37) or ((op_code_reg_1229 = ap_const_lv7_17) or (op_code_reg_1229 = ap_const_lv7_33)))))))) then 
            xreg_we0 <= ap_const_logic_1;
        else 
            xreg_we0 <= ap_const_logic_0;
        end if; 
    end process;


    xreg_we1_assign_proc : process(op_code_reg_1229, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and ((op_code_reg_1229 = ap_const_lv7_6F) or (op_code_reg_1229 = ap_const_lv7_67)))) then 
            xreg_we1 <= ap_const_logic_1;
        else 
            xreg_we1 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln134_fu_1144_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mem_pos_fu_1128_p4),64));
    zext_ln160_fu_939_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln160_fu_935_p1),32));
    zext_ln162_fu_931_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_468_p4),32));
    zext_ln164_fu_927_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_458_p4),32));
    zext_ln166_fu_943_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_478_p4),32));
    zext_ln171_fu_923_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln171_fu_919_p1),32));
    zext_ln173_fu_915_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_448_p4),32));
    zext_ln185_fu_1103_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mem_pos_1_fu_1093_p4),64));
    zext_ln224_fu_812_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(result_fu_807_p2),32));
    zext_ln231_fu_803_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(result_1_fu_798_p2),32));
    zext_ln248_fu_1045_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln248_fu_1041_p1),32));
    zext_ln256_fu_1071_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln256_fu_1067_p1),32));
    zext_ln259_fu_1058_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln259_fu_1054_p1),32));
    zext_ln292_fu_1032_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln292_fu_1029_p1),32));
    zext_ln299_fu_767_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_444_p2),32));
    zext_ln310_fu_763_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_440_p2),32));
    zext_ln329_fu_1020_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln329_fu_1017_p1),32));
    zext_ln332_fu_1008_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln332_fu_1005_p1),32));
    zext_ln377_1_fu_1184_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rd_reg_1242),64));
    zext_ln377_fu_746_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rd_reg_1242),64));
    zext_ln37_fu_516_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_fu_506_p4),64));
    zext_ln47_fu_575_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rs1_fu_555_p4),64));
    zext_ln48_fu_580_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rs2_fu_545_p4),64));
end behav;
