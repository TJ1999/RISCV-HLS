-- ==============================================================
-- Generated by Vitis HLS v2023.1.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity processor is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    memory_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
    memory_ce0 : OUT STD_LOGIC;
    memory_we0 : OUT STD_LOGIC;
    memory_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    memory_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    error : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of processor is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "processor_processor,hls_ip_2023_1_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100t-csg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.061600,HLS_SYN_LAT=5,HLS_SYN_TPT=none,HLS_SYN_MEM=1,HLS_SYN_DSP=0,HLS_SYN_FF=429,HLS_SYN_LUT=2205,HLS_VERSION=2023_1_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (18 downto 0) := "0000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (18 downto 0) := "0000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (18 downto 0) := "0000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (18 downto 0) := "0000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (18 downto 0) := "0000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (18 downto 0) := "0000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (18 downto 0) := "0001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (18 downto 0) := "0010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (18 downto 0) := "0100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (18 downto 0) := "1000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv7_3 : STD_LOGIC_VECTOR (6 downto 0) := "0000011";
    constant ap_const_lv7_23 : STD_LOGIC_VECTOR (6 downto 0) := "0100011";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv7_67 : STD_LOGIC_VECTOR (6 downto 0) := "1100111";
    constant ap_const_lv7_6F : STD_LOGIC_VECTOR (6 downto 0) := "1101111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv7_63 : STD_LOGIC_VECTOR (6 downto 0) := "1100011";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv7_37 : STD_LOGIC_VECTOR (6 downto 0) := "0110111";
    constant ap_const_lv7_17 : STD_LOGIC_VECTOR (6 downto 0) := "0010111";
    constant ap_const_lv7_13 : STD_LOGIC_VECTOR (6 downto 0) := "0010011";
    constant ap_const_lv7_73 : STD_LOGIC_VECTOR (6 downto 0) := "1110011";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";

    signal g_pc : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal g_error : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal g_xreg_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal g_xreg_ce0 : STD_LOGIC;
    signal g_xreg_we0 : STD_LOGIC;
    signal g_xreg_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal g_xreg_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_737 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal op_code_reg_1508 : STD_LOGIC_VECTOR (6 downto 0);
    signal pc_reg_1491 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal op_code_fu_780_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal funct3_reg_1519 : STD_LOGIC_VECTOR (2 downto 0);
    signal funct7_reg_1524 : STD_LOGIC_VECTOR (6 downto 0);
    signal rd_reg_1529 : STD_LOGIC_VECTOR (4 downto 0);
    signal rs2_reg_1535 : STD_LOGIC_VECTOR (4 downto 0);
    signal imm_6_fu_987_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal imm_6_reg_1545 : STD_LOGIC_VECTOR (20 downto 0);
    signal source1_reg_1550 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal imm_8_fu_1096_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal imm_8_reg_1569 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_17_reg_1579 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal write_addr_fu_1149_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal write_addr_reg_1597 : STD_LOGIC_VECTOR (16 downto 0);
    signal branch_5_fu_1164_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal grp_fu_698_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal branch_3_fu_1170_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_702_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal branch_1_fu_1176_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal branch_fu_1180_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal offset_1_fu_1194_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal offset_1_reg_1645 : STD_LOGIC_VECTOR (1 downto 0);
    signal offset_fu_1206_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal offset_reg_1652 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln162_fu_1218_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal zext_ln160_fu_1226_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal zext_ln153_fu_1294_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal sext_ln141_fu_1298_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal sext_ln139_fu_1306_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal sext_ln132_fu_1374_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal result_12_fu_1387_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal result_11_fu_1402_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal result_10_fu_1417_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal result_9_fu_1429_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_8_fu_1441_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_7_fu_1453_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_execute_arithm_fu_685_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal result_reg_1716 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal result_execute_arithm_fu_685_ap_ready : STD_LOGIC;
    signal result_execute_arithm_fu_685_g_error : STD_LOGIC_VECTOR (0 downto 0);
    signal result_execute_arithm_fu_685_g_error_ap_vld : STD_LOGIC;
    signal empty_reg_247 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_write_reg_0_phi_fu_262_p54 : STD_LOGIC_VECTOR (0 downto 0);
    signal write_reg_0_reg_257 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal result_813_reg_345 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_write_mem_0_ph_phi_fu_422_p54 : STD_LOGIC_VECTOR (0 downto 0);
    signal write_mem_0_ph_reg_417 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_branch_2_ph_phi_fu_509_p54 : STD_LOGIC_VECTOR (0 downto 0);
    signal branch_2_ph_reg_505 : STD_LOGIC_VECTOR (0 downto 0);
    signal write_addr_0_ph_reg_586 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_phi_mux_empty_16_phi_fu_667_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_16_reg_664 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal grp_fu_706_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_storemerge_phi_fu_679_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln382_fu_1474_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln29_fu_775_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln42_fu_834_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln43_fu_995_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln124_fu_1132_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln176_fu_1159_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln376_fu_1184_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln376_1_fu_1465_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln379_fu_1469_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln26_fu_753_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln25_fu_749_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal lshr_ln_fu_765_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal rs1_fu_814_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_1_fu_849_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_s_fu_839_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal imm_1_fu_859_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_5_fu_899_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_891_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_881_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_2_fu_871_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal imm_2_fu_907_p6 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_8_fu_943_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_fu_935_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_925_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln46_fu_967_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln401_1_fu_921_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal imm_4_fu_953_p6 : STD_LOGIC_VECTOR (20 downto 0);
    signal icmp_ln46_1_fu_981_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln401_fu_867_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal imm_5_fu_973_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal imm_fu_999_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_fu_1013_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal icmp_ln46_2_fu_1034_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln46_3_fu_1039_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln46_fu_1044_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal imm_3_fu_1023_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln401_2_fu_1031_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln46_4_fu_1058_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln46_5_fu_1063_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln46_6_fu_1068_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln46_7_fu_1073_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln46_2_fu_1084_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln46_1_fu_1078_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln46_3_fu_1090_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln52_fu_1009_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal imm_7_fu_1050_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln122_1_fu_1113_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal trunc_ln122_fu_1110_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln122_fu_1116_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal mem_pos_fu_1122_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln174_1_fu_1140_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal trunc_ln174_fu_1137_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln174_fu_1143_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal trunc_ln122_3_fu_1191_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln122_2_fu_1188_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln174_3_fu_1203_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln174_2_fu_1200_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_713_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal result_15_fu_1222_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_732_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_1254_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_fu_1244_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_727_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_722_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln149_fu_1240_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_12_fu_1230_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln148_fu_1272_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln148_fu_1264_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln148_1_fu_1278_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal result_5_fu_1286_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal result_13_fu_1302_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_11_fu_1334_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_10_fu_1324_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln128_fu_1320_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_9_fu_1310_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln127_fu_1352_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln127_fu_1344_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln127_1_fu_1358_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal result_4_fu_1366_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln193_fu_1384_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln191_fu_1399_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln180_fu_1414_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_condition_423 : BOOLEAN;
    signal ap_condition_427 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component processor_execute_arithm IS
    port (
        ap_ready : OUT STD_LOGIC;
        op_code_val : IN STD_LOGIC_VECTOR (6 downto 0);
        funct3_val : IN STD_LOGIC_VECTOR (2 downto 0);
        funct7_val : IN STD_LOGIC_VECTOR (6 downto 0);
        source1_val : IN STD_LOGIC_VECTOR (31 downto 0);
        source2_val : IN STD_LOGIC_VECTOR (31 downto 0);
        imm_val : IN STD_LOGIC_VECTOR (31 downto 0);
        pc_val : IN STD_LOGIC_VECTOR (31 downto 0);
        g_error : OUT STD_LOGIC_VECTOR (0 downto 0);
        g_error_ap_vld : OUT STD_LOGIC;
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component processor_g_xreg_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    g_xreg_U : component processor_g_xreg_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => g_xreg_address0,
        ce0 => g_xreg_ce0,
        we0 => g_xreg_we0,
        d0 => g_xreg_d0,
        q0 => g_xreg_q0);

    result_execute_arithm_fu_685 : component processor_execute_arithm
    port map (
        ap_ready => result_execute_arithm_fu_685_ap_ready,
        op_code_val => op_code_reg_1508,
        funct3_val => funct3_reg_1519,
        funct7_val => funct7_reg_1524,
        source1_val => source1_reg_1550,
        source2_val => result_17_reg_1579,
        imm_val => imm_8_reg_1569,
        pc_val => pc_reg_1491,
        g_error => result_execute_arithm_fu_685_g_error,
        g_error_ap_vld => result_execute_arithm_fu_685_g_error_ap_vld,
        ap_return => result_execute_arithm_fu_685_ap_return);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    g_pc_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                g_pc <= ap_const_lv32_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                    g_pc <= ap_phi_mux_storemerge_phi_fu_679_p4;
                end if; 
            end if;
        end if;
    end process;


    branch_2_ph_reg_505_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((funct3_reg_1519 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                branch_2_ph_reg_505 <= branch_fu_1180_p2;
            elsif (((funct3_reg_1519 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                branch_2_ph_reg_505 <= branch_1_fu_1176_p2;
            elsif (((funct3_reg_1519 = ap_const_lv3_4) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                branch_2_ph_reg_505 <= grp_fu_702_p2;
            elsif (((funct3_reg_1519 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                branch_2_ph_reg_505 <= branch_3_fu_1170_p2;
            elsif (((funct3_reg_1519 = ap_const_lv3_6) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                branch_2_ph_reg_505 <= grp_fu_698_p2;
            elsif (((funct3_reg_1519 = ap_const_lv3_7) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                branch_2_ph_reg_505 <= branch_5_fu_1164_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (not((offset_fu_1206_p2 = ap_const_lv2_2)) and not((offset_fu_1206_p2 = ap_const_lv2_0)) and (funct3_reg_1519 = ap_const_lv3_1) and (op_code_reg_1508 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not((offset_1_fu_1194_p2 = ap_const_lv2_2)) and not((offset_1_fu_1194_p2 = ap_const_lv2_0)) and (funct3_reg_1519 = ap_const_lv3_1) and (op_code_reg_1508 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not((offset_1_fu_1194_p2 = ap_const_lv2_2)) and not((offset_1_fu_1194_p2 = ap_const_lv2_0)) and (funct3_reg_1519 = ap_const_lv3_5) and (op_code_reg_1508 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not((funct3_reg_1519 = ap_const_lv3_2)) 
    and not((funct3_reg_1519 = ap_const_lv3_0)) and not((funct3_reg_1519 = ap_const_lv3_1)) and (op_code_reg_1508 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((funct3_reg_1519 = ap_const_lv3_2) and (op_code_reg_1508 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((funct3_reg_1519 = ap_const_lv3_2) and (op_code_reg_1508 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (offset_reg_1652 = ap_const_lv2_3)) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (offset_reg_1652 = ap_const_lv2_0)) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (offset_reg_1652 = ap_const_lv2_1)) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (offset_reg_1652 = ap_const_lv2_2)) or ((ap_const_logic_1 = ap_CS_fsm_state13) and ((funct3_reg_1519 = ap_const_lv3_6) or ((funct3_reg_1519 = ap_const_lv3_3) or (funct3_reg_1519 = ap_const_lv3_7)))) or ((funct3_reg_1519 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((ap_const_logic_1 = ap_CS_fsm_state4) 
    and (((funct3_reg_1519 = ap_const_lv3_2) and (op_code_reg_1508 = ap_const_lv7_63)) or ((funct3_reg_1519 = ap_const_lv3_3) and (op_code_reg_1508 = ap_const_lv7_63)))))) then 
                branch_2_ph_reg_505 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    empty_16_reg_664_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not((op_code_reg_1508 = ap_const_lv7_6F)) and not((op_code_reg_1508 = ap_const_lv7_67)) and (ap_phi_mux_branch_2_ph_phi_fu_509_p54 = ap_const_lv1_1) and (ap_phi_mux_write_mem_0_ph_phi_fu_422_p54 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19)) or (not((op_code_reg_1508 = ap_const_lv7_6F)) and not((op_code_reg_1508 = ap_const_lv7_67)) and (ap_phi_mux_branch_2_ph_phi_fu_509_p54 = ap_const_lv1_1) and (ap_phi_mux_write_mem_0_ph_phi_fu_422_p54 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19)))) then 
                empty_16_reg_664 <= pc_reg_1491;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                empty_16_reg_664 <= empty_reg_247;
            end if; 
        end if;
    end process;

    empty_reg_247_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                if ((op_code_reg_1508 = ap_const_lv7_6F)) then 
                    empty_reg_247 <= pc_reg_1491;
                elsif ((op_code_reg_1508 = ap_const_lv7_67)) then 
                    empty_reg_247 <= source1_reg_1550;
                end if;
            end if; 
        end if;
    end process;

    g_error_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((icmp_ln26_fu_753_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or (not((funct3_reg_1519 = ap_const_lv3_2)) and not((funct3_reg_1519 = ap_const_lv3_0)) and not((funct3_reg_1519 = ap_const_lv3_1)) and (op_code_reg_1508 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_const_logic_1 = ap_CS_fsm_state13) and ((funct3_reg_1519 = ap_const_lv3_6) or ((funct3_reg_1519 = ap_const_lv3_3) or (funct3_reg_1519 = ap_const_lv3_7)))) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (((funct3_reg_1519 = ap_const_lv3_2) and (op_code_reg_1508 = ap_const_lv7_63)) or ((funct3_reg_1519 = ap_const_lv3_3) and (op_code_reg_1508 = ap_const_lv7_63)))))) then 
                g_error <= ap_const_lv1_1;
            elsif (((result_execute_arithm_fu_685_g_error_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                g_error <= result_execute_arithm_fu_685_g_error;
            end if; 
        end if;
    end process;

    result_813_reg_345_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state16) and (offset_reg_1652 = ap_const_lv2_2))) then 
                result_813_reg_345 <= result_10_fu_1417_p5;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state16) and (offset_reg_1652 = ap_const_lv2_1))) then 
                result_813_reg_345 <= result_9_fu_1429_p5;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state16) and (offset_reg_1652 = ap_const_lv2_0))) then 
                result_813_reg_345 <= result_8_fu_1441_p5;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                result_813_reg_345 <= result_12_fu_1387_p5;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                result_813_reg_345 <= result_11_fu_1402_p5;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                result_813_reg_345 <= sext_ln141_fu_1298_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                result_813_reg_345 <= sext_ln139_fu_1306_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                result_813_reg_345 <= zext_ln162_fu_1218_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                result_813_reg_345 <= zext_ln160_fu_1226_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state16) and (offset_reg_1652 = ap_const_lv2_3))) then 
                result_813_reg_345 <= result_7_fu_1453_p5;
            elsif (((funct3_reg_1519 = ap_const_lv3_2) and (op_code_reg_1508 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                result_813_reg_345 <= result_17_reg_1579;
            elsif (((funct3_reg_1519 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                result_813_reg_345 <= sext_ln132_fu_1374_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                result_813_reg_345 <= zext_ln153_fu_1294_p1;
            elsif (((not((offset_fu_1206_p2 = ap_const_lv2_2)) and not((offset_fu_1206_p2 = ap_const_lv2_0)) and (funct3_reg_1519 = ap_const_lv3_1) and (op_code_reg_1508 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not((funct3_reg_1519 = ap_const_lv3_2)) and not((funct3_reg_1519 = ap_const_lv3_0)) and not((funct3_reg_1519 = ap_const_lv3_1)) and (op_code_reg_1508 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((funct3_reg_1519 = ap_const_lv3_2) and (op_code_reg_1508 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
                result_813_reg_345 <= memory_q0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                result_813_reg_345 <= result_reg_1716;
            end if; 
        end if;
    end process;

    write_mem_0_ph_reg_417_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (not((offset_fu_1206_p2 = ap_const_lv2_2)) and not((offset_fu_1206_p2 = ap_const_lv2_0)) and (funct3_reg_1519 = ap_const_lv3_1) and (op_code_reg_1508 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not((funct3_reg_1519 = ap_const_lv3_2)) and not((funct3_reg_1519 = ap_const_lv3_0)) and not((funct3_reg_1519 = ap_const_lv3_1)) and (op_code_reg_1508 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((funct3_reg_1519 = ap_const_lv3_2) and (op_code_reg_1508 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (offset_reg_1652 = ap_const_lv2_3)) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (offset_reg_1652 = ap_const_lv2_0)) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (offset_reg_1652 = ap_const_lv2_1)) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (offset_reg_1652 = ap_const_lv2_2)))) then 
                write_mem_0_ph_reg_417 <= ap_const_lv1_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (not((offset_1_fu_1194_p2 = ap_const_lv2_2)) and not((offset_1_fu_1194_p2 = ap_const_lv2_0)) and (funct3_reg_1519 = ap_const_lv3_1) and (op_code_reg_1508 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not((offset_1_fu_1194_p2 = ap_const_lv2_2)) and not((offset_1_fu_1194_p2 = ap_const_lv2_0)) and (funct3_reg_1519 = ap_const_lv3_5) and (op_code_reg_1508 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((funct3_reg_1519 = ap_const_lv3_2) and (op_code_reg_1508 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_const_logic_1 = ap_CS_fsm_state13) and ((funct3_reg_1519 = ap_const_lv3_6) or ((funct3_reg_1519 = ap_const_lv3_3) or (funct3_reg_1519 = ap_const_lv3_7)))) or ((funct3_reg_1519 = ap_const_lv3_0) and (ap_const_logic_1 
    = ap_CS_fsm_state13)) or ((funct3_reg_1519 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((funct3_reg_1519 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((funct3_reg_1519 = ap_const_lv3_4) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((funct3_reg_1519 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((funct3_reg_1519 = ap_const_lv3_6) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((funct3_reg_1519 = ap_const_lv3_7) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (((funct3_reg_1519 = ap_const_lv3_2) and (op_code_reg_1508 = ap_const_lv7_63)) or ((funct3_reg_1519 = ap_const_lv3_3) and (op_code_reg_1508 = ap_const_lv7_63)))))) then 
                write_mem_0_ph_reg_417 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    write_reg_0_reg_257_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (not((offset_fu_1206_p2 = ap_const_lv2_2)) and not((offset_fu_1206_p2 = ap_const_lv2_0)) and (funct3_reg_1519 = ap_const_lv3_1) and (op_code_reg_1508 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not((funct3_reg_1519 = ap_const_lv3_2)) and not((funct3_reg_1519 = ap_const_lv3_0)) and not((funct3_reg_1519 = ap_const_lv3_1)) and (op_code_reg_1508 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((funct3_reg_1519 = ap_const_lv3_2) and (op_code_reg_1508 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (offset_reg_1652 = ap_const_lv2_3)) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (offset_reg_1652 = ap_const_lv2_0)) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (offset_reg_1652 = ap_const_lv2_1)) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (offset_reg_1652 = ap_const_lv2_2)) or ((funct3_reg_1519 = ap_const_lv3_0) and (ap_const_logic_1 
    = ap_CS_fsm_state5)) or ((funct3_reg_1519 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((funct3_reg_1519 = ap_const_lv3_4) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((funct3_reg_1519 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((funct3_reg_1519 = ap_const_lv3_6) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((funct3_reg_1519 = ap_const_lv3_7) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (((funct3_reg_1519 = ap_const_lv3_2) and (op_code_reg_1508 = ap_const_lv7_63)) or ((funct3_reg_1519 = ap_const_lv3_3) and (op_code_reg_1508 = ap_const_lv7_63)))))) then 
                write_reg_0_reg_257 <= ap_const_lv1_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (not((offset_1_fu_1194_p2 = ap_const_lv2_2)) and not((offset_1_fu_1194_p2 = ap_const_lv2_0)) and (funct3_reg_1519 = ap_const_lv3_1) and (op_code_reg_1508 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not((offset_1_fu_1194_p2 = ap_const_lv2_2)) and not((offset_1_fu_1194_p2 = ap_const_lv2_0)) and (funct3_reg_1519 = ap_const_lv3_5) and (op_code_reg_1508 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((funct3_reg_1519 = ap_const_lv3_2) and (op_code_reg_1508 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_const_logic_1 = ap_CS_fsm_state13) and ((funct3_reg_1519 = ap_const_lv3_6) or ((funct3_reg_1519 = ap_const_lv3_3) or (funct3_reg_1519 = ap_const_lv3_7)))) or ((funct3_reg_1519 = ap_const_lv3_0) and (ap_const_logic_1 
    = ap_CS_fsm_state13)))) then 
                write_reg_0_reg_257 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                funct3_reg_1519 <= memory_q0(14 downto 12);
                funct7_reg_1524 <= memory_q0(31 downto 25);
                imm_6_reg_1545 <= imm_6_fu_987_p3;
                op_code_reg_1508 <= op_code_fu_780_p1;
                rd_reg_1529 <= memory_q0(11 downto 7);
                rs2_reg_1535 <= memory_q0(24 downto 20);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                imm_8_reg_1569 <= imm_8_fu_1096_p3;
                source1_reg_1550 <= g_xreg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((op_code_reg_1508 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                offset_1_reg_1645 <= offset_1_fu_1194_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((op_code_reg_1508 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                offset_reg_1652 <= offset_fu_1206_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                pc_reg_1491 <= g_pc;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((op_code_reg_1508 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((op_code_reg_1508 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then
                reg_737 <= memory_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                result_17_reg_1579 <= g_xreg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                result_reg_1716 <= result_execute_arithm_fu_685_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (not((offset_fu_1206_p2 = ap_const_lv2_2)) and not((offset_fu_1206_p2 = ap_const_lv2_0)) and (funct3_reg_1519 = ap_const_lv3_1) and (op_code_reg_1508 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not((funct3_reg_1519 = ap_const_lv3_2)) and not((funct3_reg_1519 = ap_const_lv3_0)) and not((funct3_reg_1519 = ap_const_lv3_1)) and (op_code_reg_1508 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((funct3_reg_1519 = ap_const_lv3_2) and (op_code_reg_1508 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (offset_reg_1652 = ap_const_lv2_3)) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (offset_reg_1652 = ap_const_lv2_0)) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (offset_reg_1652 = ap_const_lv2_1)) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (offset_reg_1652 = ap_const_lv2_2)))) then
                write_addr_0_ph_reg_586 <= write_addr_reg_1597;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((op_code_reg_1508 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                write_addr_reg_1597 <= add_ln174_fu_1143_p2(18 downto 2);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state7, op_code_reg_1508, funct3_reg_1519, ap_CS_fsm_state4, offset_1_fu_1194_p2, offset_fu_1206_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (((funct3_reg_1519 = ap_const_lv3_2) and (op_code_reg_1508 = ap_const_lv7_63)) or ((funct3_reg_1519 = ap_const_lv3_3) and (op_code_reg_1508 = ap_const_lv7_63))))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                elsif ((not((funct3_reg_1519 = ap_const_lv3_2)) and not((funct3_reg_1519 = ap_const_lv3_3)) and (op_code_reg_1508 = ap_const_lv7_63) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                elsif ((not((op_code_reg_1508 = ap_const_lv7_23)) and not((op_code_reg_1508 = ap_const_lv7_3)) and not((op_code_reg_1508 = ap_const_lv7_63)) and not((op_code_reg_1508 = ap_const_lv7_6F)) and not((op_code_reg_1508 = ap_const_lv7_67)) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and ((op_code_reg_1508 = ap_const_lv7_23) or (op_code_reg_1508 = ap_const_lv7_3)))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state7 => 
                if (((funct3_reg_1519 = ap_const_lv3_1) and (op_code_reg_1508 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state7) and (offset_fu_1206_p2 = ap_const_lv2_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                elsif (((funct3_reg_1519 = ap_const_lv3_1) and (op_code_reg_1508 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state7) and (offset_fu_1206_p2 = ap_const_lv2_2))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                elsif (((funct3_reg_1519 = ap_const_lv3_0) and (op_code_reg_1508 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                elsif (((funct3_reg_1519 = ap_const_lv3_1) and (op_code_reg_1508 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state7) and (offset_1_fu_1194_p2 = ap_const_lv2_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                elsif (((funct3_reg_1519 = ap_const_lv3_1) and (op_code_reg_1508 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state7) and (offset_1_fu_1194_p2 = ap_const_lv2_2))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                elsif (((funct3_reg_1519 = ap_const_lv3_5) and (op_code_reg_1508 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state7) and (offset_1_fu_1194_p2 = ap_const_lv2_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                elsif (((funct3_reg_1519 = ap_const_lv3_5) and (op_code_reg_1508 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state7) and (offset_1_fu_1194_p2 = ap_const_lv2_2))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (((((not((op_code_reg_1508 = ap_const_lv7_23)) and not((offset_1_fu_1194_p2 = ap_const_lv2_2)) and not((offset_1_fu_1194_p2 = ap_const_lv2_0)) and (funct3_reg_1519 = ap_const_lv3_5) and (op_code_reg_1508 = ap_const_lv7_3)) or (not((op_code_reg_1508 = ap_const_lv7_23)) and not((funct3_reg_1519 = ap_const_lv3_1)) and not((funct3_reg_1519 = ap_const_lv3_5)) and (funct3_reg_1519 = ap_const_lv3_2) and (op_code_reg_1508 = ap_const_lv7_3))) or (not((op_code_reg_1508 = ap_const_lv7_23)) and not((offset_1_fu_1194_p2 = ap_const_lv2_2)) and not((offset_1_fu_1194_p2 = ap_const_lv2_0)) and (funct3_reg_1519 = ap_const_lv3_1) and (op_code_reg_1508 = ap_const_lv7_3))) or (not((offset_fu_1206_p2 = ap_const_lv2_2)) and not((offset_fu_1206_p2 = ap_const_lv2_0)) and not((funct3_reg_1519 = ap_const_lv3_0)) and (op_code_reg_1508 = ap_const_lv7_23))) or (not((funct3_reg_1519 = ap_const_lv3_0)) and not((funct3_reg_1519 = ap_const_lv3_1)) and (op_code_reg_1508 = ap_const_lv7_23))))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                elsif ((not((funct3_reg_1519 = ap_const_lv3_2)) and not((funct3_reg_1519 = ap_const_lv3_1)) and not((funct3_reg_1519 = ap_const_lv3_4)) and not((funct3_reg_1519 = ap_const_lv3_5)) and (op_code_reg_1508 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln122_fu_1116_p2 <= std_logic_vector(unsigned(trunc_ln122_1_fu_1113_p1) + unsigned(trunc_ln122_fu_1110_p1));
    add_ln174_fu_1143_p2 <= std_logic_vector(unsigned(trunc_ln174_1_fu_1140_p1) + unsigned(trunc_ln174_fu_1137_p1));
    add_ln382_fu_1474_p2 <= std_logic_vector(unsigned(ap_phi_mux_empty_16_phi_fu_667_p6) + unsigned(imm_8_reg_1569));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;
    ap_ST_fsm_state1_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_condition_423_assign_proc : process(op_code_reg_1508, ap_phi_mux_branch_2_ph_phi_fu_509_p54)
    begin
                ap_condition_423 <= (not((op_code_reg_1508 = ap_const_lv7_6F)) and not((op_code_reg_1508 = ap_const_lv7_67)) and (ap_phi_mux_branch_2_ph_phi_fu_509_p54 = ap_const_lv1_0));
    end process;


    ap_condition_427_assign_proc : process(op_code_reg_1508, ap_phi_mux_branch_2_ph_phi_fu_509_p54)
    begin
                ap_condition_427 <= ((op_code_reg_1508 = ap_const_lv7_6F) or ((op_code_reg_1508 = ap_const_lv7_67) or (ap_phi_mux_branch_2_ph_phi_fu_509_p54 = ap_const_lv1_1)));
    end process;

    ap_phi_mux_branch_2_ph_phi_fu_509_p54 <= branch_2_ph_reg_505;

    ap_phi_mux_empty_16_phi_fu_667_p6_assign_proc : process(op_code_reg_1508, pc_reg_1491, ap_phi_mux_write_mem_0_ph_phi_fu_422_p54, ap_phi_mux_branch_2_ph_phi_fu_509_p54, empty_16_reg_664, ap_CS_fsm_state19)
    begin
        if (((not((op_code_reg_1508 = ap_const_lv7_6F)) and not((op_code_reg_1508 = ap_const_lv7_67)) and (ap_phi_mux_branch_2_ph_phi_fu_509_p54 = ap_const_lv1_1) and (ap_phi_mux_write_mem_0_ph_phi_fu_422_p54 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19)) or (not((op_code_reg_1508 = ap_const_lv7_6F)) and not((op_code_reg_1508 = ap_const_lv7_67)) and (ap_phi_mux_branch_2_ph_phi_fu_509_p54 = ap_const_lv1_1) and (ap_phi_mux_write_mem_0_ph_phi_fu_422_p54 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19)))) then 
            ap_phi_mux_empty_16_phi_fu_667_p6 <= pc_reg_1491;
        else 
            ap_phi_mux_empty_16_phi_fu_667_p6 <= empty_16_reg_664;
        end if; 
    end process;


    ap_phi_mux_storemerge_phi_fu_679_p4_assign_proc : process(ap_CS_fsm_state19, grp_fu_706_p2, add_ln382_fu_1474_p2, ap_condition_423, ap_condition_427)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then
            if ((ap_const_boolean_1 = ap_condition_427)) then 
                ap_phi_mux_storemerge_phi_fu_679_p4 <= add_ln382_fu_1474_p2;
            elsif ((ap_const_boolean_1 = ap_condition_423)) then 
                ap_phi_mux_storemerge_phi_fu_679_p4 <= grp_fu_706_p2;
            else 
                ap_phi_mux_storemerge_phi_fu_679_p4 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            ap_phi_mux_storemerge_phi_fu_679_p4 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    ap_phi_mux_write_mem_0_ph_phi_fu_422_p54 <= write_mem_0_ph_reg_417;
    ap_phi_mux_write_reg_0_phi_fu_262_p54 <= write_reg_0_reg_257;
    branch_1_fu_1176_p2 <= "0" when (source1_reg_1550 = result_17_reg_1579) else "1";
    branch_3_fu_1170_p2 <= (grp_fu_702_p2 xor ap_const_lv1_1);
    branch_5_fu_1164_p2 <= (grp_fu_698_p2 xor ap_const_lv1_1);
    branch_fu_1180_p2 <= "1" when (source1_reg_1550 = result_17_reg_1579) else "0";
    error <= g_error;

    g_xreg_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state1, ap_CS_fsm_state3, ap_CS_fsm_state6, ap_CS_fsm_state19, zext_ln42_fu_834_p1, zext_ln43_fu_995_p1, zext_ln376_fu_1184_p1, zext_ln376_1_fu_1465_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            g_xreg_address0 <= zext_ln376_1_fu_1465_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            g_xreg_address0 <= zext_ln376_fu_1184_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            g_xreg_address0 <= zext_ln43_fu_995_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            g_xreg_address0 <= zext_ln42_fu_834_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            g_xreg_address0 <= ap_const_lv5_0;
        else 
            g_xreg_address0 <= "XXXXX";
        end if; 
    end process;


    g_xreg_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state1, ap_CS_fsm_state3, ap_CS_fsm_state6, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            g_xreg_ce0 <= ap_const_logic_1;
        else 
            g_xreg_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    g_xreg_d0_assign_proc : process(ap_CS_fsm_state1, result_813_reg_345, ap_CS_fsm_state6, ap_CS_fsm_state19, grp_fu_706_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            g_xreg_d0 <= result_813_reg_345;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            g_xreg_d0 <= grp_fu_706_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            g_xreg_d0 <= ap_const_lv32_0;
        else 
            g_xreg_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    g_xreg_we0_assign_proc : process(op_code_reg_1508, ap_CS_fsm_state1, ap_phi_mux_write_reg_0_phi_fu_262_p54, ap_CS_fsm_state6, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state6) or (not((op_code_reg_1508 = ap_const_lv7_6F)) and not((op_code_reg_1508 = ap_const_lv7_67)) and (ap_phi_mux_write_reg_0_phi_fu_262_p54 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19)))) then 
            g_xreg_we0 <= ap_const_logic_1;
        else 
            g_xreg_we0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_698_p2 <= "1" when (unsigned(source1_reg_1550) < unsigned(result_17_reg_1579)) else "0";
    grp_fu_702_p2 <= "1" when (signed(source1_reg_1550) < signed(result_17_reg_1579)) else "0";
    grp_fu_706_p2 <= std_logic_vector(unsigned(pc_reg_1491) + unsigned(ap_const_lv32_4));
    grp_fu_713_p4 <= reg_737(31 downto 16);
    grp_fu_722_p2 <= "1" when (offset_1_reg_1645 = ap_const_lv2_0) else "0";
    grp_fu_727_p2 <= "1" when (offset_1_reg_1645 = ap_const_lv2_1) else "0";
    grp_fu_732_p2 <= "1" when (offset_1_reg_1645 = ap_const_lv2_2) else "0";
    icmp_ln26_fu_753_p2 <= "1" when (trunc_ln25_fu_749_p1 = ap_const_lv2_0) else "0";
    icmp_ln46_1_fu_981_p2 <= "1" when (op_code_fu_780_p1 = ap_const_lv7_23) else "0";
    icmp_ln46_2_fu_1034_p2 <= "1" when (op_code_reg_1508 = ap_const_lv7_37) else "0";
    icmp_ln46_3_fu_1039_p2 <= "1" when (op_code_reg_1508 = ap_const_lv7_17) else "0";
    icmp_ln46_4_fu_1058_p2 <= "1" when (op_code_reg_1508 = ap_const_lv7_3) else "0";
    icmp_ln46_5_fu_1063_p2 <= "1" when (op_code_reg_1508 = ap_const_lv7_13) else "0";
    icmp_ln46_6_fu_1068_p2 <= "1" when (op_code_reg_1508 = ap_const_lv7_67) else "0";
    icmp_ln46_7_fu_1073_p2 <= "1" when (op_code_reg_1508 = ap_const_lv7_73) else "0";
    icmp_ln46_fu_967_p2 <= "1" when (op_code_fu_780_p1 = ap_const_lv7_63) else "0";
    imm_1_fu_859_p3 <= (tmp_1_fu_849_p4 & tmp_s_fu_839_p4);
    imm_2_fu_907_p6 <= ((((tmp_5_fu_899_p3 & tmp_4_fu_891_p3) & tmp_3_fu_881_p4) & tmp_2_fu_871_p4) & ap_const_lv1_0);
    imm_3_fu_1023_p3 <= (tmp_fu_1013_p4 & ap_const_lv12_0);
    imm_4_fu_953_p6 <= ((((tmp_5_fu_899_p3 & tmp_8_fu_943_p4) & tmp_7_fu_935_p3) & tmp_6_fu_925_p4) & ap_const_lv1_0);
    imm_5_fu_973_p3 <= 
        sext_ln401_1_fu_921_p1 when (icmp_ln46_fu_967_p2(0) = '1') else 
        imm_4_fu_953_p6;
    imm_6_fu_987_p3 <= 
        sext_ln401_fu_867_p1 when (icmp_ln46_1_fu_981_p2(0) = '1') else 
        imm_5_fu_973_p3;
    imm_7_fu_1050_p3 <= 
        imm_3_fu_1023_p3 when (or_ln46_fu_1044_p2(0) = '1') else 
        sext_ln401_2_fu_1031_p1;
    imm_8_fu_1096_p3 <= 
        sext_ln52_fu_1009_p1 when (or_ln46_3_fu_1090_p2(0) = '1') else 
        imm_7_fu_1050_p3;
    imm_fu_999_p4 <= reg_737(31 downto 20);
    lshr_ln_fu_765_p4 <= g_pc(18 downto 2);
    mem_pos_fu_1122_p4 <= add_ln122_fu_1116_p2(18 downto 2);

    memory_address0_assign_proc : process(op_code_reg_1508, ap_CS_fsm_state1, ap_CS_fsm_state4, ap_CS_fsm_state19, zext_ln29_fu_775_p1, zext_ln124_fu_1132_p1, zext_ln176_fu_1159_p1, zext_ln379_fu_1469_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            memory_address0 <= zext_ln379_fu_1469_p1(17 - 1 downto 0);
        elsif (((op_code_reg_1508 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            memory_address0 <= zext_ln176_fu_1159_p1(17 - 1 downto 0);
        elsif (((op_code_reg_1508 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            memory_address0 <= zext_ln124_fu_1132_p1(17 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            memory_address0 <= zext_ln29_fu_775_p1(17 - 1 downto 0);
        else 
            memory_address0 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    memory_ce0_assign_proc : process(op_code_reg_1508, ap_CS_fsm_state1, ap_CS_fsm_state4, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state19) or ((op_code_reg_1508 = ap_const_lv7_23) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((op_code_reg_1508 = ap_const_lv7_3) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            memory_ce0 <= ap_const_logic_1;
        else 
            memory_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    memory_d0 <= result_813_reg_345;

    memory_we0_assign_proc : process(op_code_reg_1508, ap_phi_mux_write_mem_0_ph_phi_fu_422_p54, ap_CS_fsm_state19)
    begin
        if ((not((op_code_reg_1508 = ap_const_lv7_6F)) and not((op_code_reg_1508 = ap_const_lv7_67)) and (ap_phi_mux_write_mem_0_ph_phi_fu_422_p54 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            memory_we0 <= ap_const_logic_1;
        else 
            memory_we0 <= ap_const_logic_0;
        end if; 
    end process;

    offset_1_fu_1194_p2 <= std_logic_vector(unsigned(trunc_ln122_3_fu_1191_p1) + unsigned(trunc_ln122_2_fu_1188_p1));
    offset_fu_1206_p2 <= std_logic_vector(unsigned(trunc_ln174_3_fu_1203_p1) + unsigned(trunc_ln174_2_fu_1200_p1));
    op_code_fu_780_p1 <= memory_q0(7 - 1 downto 0);
    or_ln127_fu_1352_p2 <= (grp_fu_732_p2 or grp_fu_727_p2);
    or_ln148_fu_1272_p2 <= (grp_fu_732_p2 or grp_fu_727_p2);
    or_ln46_1_fu_1078_p2 <= (icmp_ln46_5_fu_1063_p2 or icmp_ln46_4_fu_1058_p2);
    or_ln46_2_fu_1084_p2 <= (icmp_ln46_7_fu_1073_p2 or icmp_ln46_6_fu_1068_p2);
    or_ln46_3_fu_1090_p2 <= (or_ln46_2_fu_1084_p2 or or_ln46_1_fu_1078_p2);
    or_ln46_fu_1044_p2 <= (icmp_ln46_3_fu_1039_p2 or icmp_ln46_2_fu_1034_p2);
    result_10_fu_1417_p5 <= (reg_737(31 downto 24) & trunc_ln180_fu_1414_p1 & reg_737(15 downto 0));
    result_11_fu_1402_p5 <= (reg_737(31 downto 16) & trunc_ln191_fu_1399_p1);
    result_12_fu_1387_p5 <= (trunc_ln193_fu_1384_p1 & reg_737(15 downto 0));
    result_13_fu_1302_p1 <= reg_737(16 - 1 downto 0);
    result_15_fu_1222_p1 <= reg_737(16 - 1 downto 0);
    result_4_fu_1366_p3 <= 
        select_ln127_fu_1344_p3 when (or_ln127_fu_1352_p2(0) = '1') else 
        select_ln127_1_fu_1358_p3;
    result_5_fu_1286_p3 <= 
        select_ln148_fu_1264_p3 when (or_ln148_fu_1272_p2(0) = '1') else 
        select_ln148_1_fu_1278_p3;
    result_7_fu_1453_p5 <= (trunc_ln180_fu_1414_p1 & reg_737(23 downto 0));
    result_8_fu_1441_p5 <= (reg_737(31 downto 8) & trunc_ln180_fu_1414_p1);
    result_9_fu_1429_p5 <= (reg_737(31 downto 16) & trunc_ln180_fu_1414_p1 & reg_737(7 downto 0));
    rs1_fu_814_p4 <= memory_q0(19 downto 15);
    select_ln127_1_fu_1358_p3 <= 
        trunc_ln128_fu_1320_p1 when (grp_fu_722_p2(0) = '1') else 
        tmp_9_fu_1310_p4;
    select_ln127_fu_1344_p3 <= 
        tmp_11_fu_1334_p4 when (grp_fu_732_p2(0) = '1') else 
        tmp_10_fu_1324_p4;
    select_ln148_1_fu_1278_p3 <= 
        trunc_ln149_fu_1240_p1 when (grp_fu_722_p2(0) = '1') else 
        tmp_12_fu_1230_p4;
    select_ln148_fu_1264_p3 <= 
        tmp_14_fu_1254_p4 when (grp_fu_732_p2(0) = '1') else 
        tmp_13_fu_1244_p4;
        sext_ln132_fu_1374_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(result_4_fu_1366_p3),32));

        sext_ln139_fu_1306_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(result_13_fu_1302_p1),32));

        sext_ln141_fu_1298_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_713_p4),32));

        sext_ln401_1_fu_921_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(imm_2_fu_907_p6),21));

        sext_ln401_2_fu_1031_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(imm_6_reg_1545),32));

        sext_ln401_fu_867_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(imm_1_fu_859_p3),21));

        sext_ln52_fu_1009_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(imm_fu_999_p4),32));

    tmp_10_fu_1324_p4 <= reg_737(15 downto 8);
    tmp_11_fu_1334_p4 <= reg_737(23 downto 16);
    tmp_12_fu_1230_p4 <= reg_737(31 downto 24);
    tmp_13_fu_1244_p4 <= reg_737(15 downto 8);
    tmp_14_fu_1254_p4 <= reg_737(23 downto 16);
    tmp_1_fu_849_p4 <= memory_q0(31 downto 25);
    tmp_2_fu_871_p4 <= memory_q0(11 downto 8);
    tmp_3_fu_881_p4 <= memory_q0(30 downto 25);
    tmp_4_fu_891_p3 <= memory_q0(7 downto 7);
    tmp_5_fu_899_p3 <= memory_q0(31 downto 31);
    tmp_6_fu_925_p4 <= memory_q0(30 downto 21);
    tmp_7_fu_935_p3 <= memory_q0(20 downto 20);
    tmp_8_fu_943_p4 <= memory_q0(19 downto 12);
    tmp_9_fu_1310_p4 <= reg_737(31 downto 24);
    tmp_fu_1013_p4 <= reg_737(31 downto 12);
    tmp_s_fu_839_p4 <= memory_q0(11 downto 7);
    trunc_ln122_1_fu_1113_p1 <= imm_8_reg_1569(19 - 1 downto 0);
    trunc_ln122_2_fu_1188_p1 <= source1_reg_1550(2 - 1 downto 0);
    trunc_ln122_3_fu_1191_p1 <= imm_8_reg_1569(2 - 1 downto 0);
    trunc_ln122_fu_1110_p1 <= source1_reg_1550(19 - 1 downto 0);
    trunc_ln128_fu_1320_p1 <= reg_737(8 - 1 downto 0);
    trunc_ln149_fu_1240_p1 <= reg_737(8 - 1 downto 0);
    trunc_ln174_1_fu_1140_p1 <= imm_8_reg_1569(19 - 1 downto 0);
    trunc_ln174_2_fu_1200_p1 <= source1_reg_1550(2 - 1 downto 0);
    trunc_ln174_3_fu_1203_p1 <= imm_8_reg_1569(2 - 1 downto 0);
    trunc_ln174_fu_1137_p1 <= source1_reg_1550(19 - 1 downto 0);
    trunc_ln180_fu_1414_p1 <= result_17_reg_1579(8 - 1 downto 0);
    trunc_ln191_fu_1399_p1 <= result_17_reg_1579(16 - 1 downto 0);
    trunc_ln193_fu_1384_p1 <= result_17_reg_1579(16 - 1 downto 0);
    trunc_ln25_fu_749_p1 <= g_pc(2 - 1 downto 0);
    write_addr_fu_1149_p4 <= add_ln174_fu_1143_p2(18 downto 2);
    zext_ln124_fu_1132_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mem_pos_fu_1122_p4),64));
    zext_ln153_fu_1294_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(result_5_fu_1286_p3),32));
    zext_ln160_fu_1226_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(result_15_fu_1222_p1),32));
    zext_ln162_fu_1218_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_713_p4),32));
    zext_ln176_fu_1159_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(write_addr_fu_1149_p4),64));
    zext_ln29_fu_775_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_fu_765_p4),64));
    zext_ln376_1_fu_1465_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rd_reg_1529),64));
    zext_ln376_fu_1184_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rd_reg_1529),64));
    zext_ln379_fu_1469_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(write_addr_0_ph_reg_586),64));
    zext_ln42_fu_834_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rs1_fu_814_p4),64));
    zext_ln43_fu_995_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rs2_reg_1535),64));
end behav;
