// ==============================================================
// Generated by Vitis HLS v2023.1.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module processor_execute_arithm (
        ap_ready,
        op_code_val,
        funct3_val,
        funct7_val,
        source1_val,
        source2_val,
        imm_val,
        pc_val,
        g_error,
        g_error_ap_vld,
        ap_return
);


output   ap_ready;
input  [6:0] op_code_val;
input  [2:0] funct3_val;
input  [6:0] funct7_val;
input  [31:0] source1_val;
input  [31:0] source2_val;
input  [31:0] imm_val;
input  [31:0] pc_val;
output  [0:0] g_error;
output   g_error_ap_vld;
output  [31:0] ap_return;

reg g_error_ap_vld;

wire   [31:0] add_ln210_fu_464_p2;
reg   [31:0] ap_phi_mux_phi_ln367_phi_fu_105_p68;
wire   [6:0] op_code_val_read_read_fu_96_p2;
wire   [31:0] and_ln341_fu_350_p2;
wire   [2:0] funct3_val_read_read_fu_90_p2;
wire   [0:0] icmp_ln241_fu_189_p2;
wire   [31:0] ashr_ln253_fu_436_p2;
wire   [6:0] funct7_val_read_read_fu_84_p2;
wire   [31:0] lshr_ln250_fu_451_p2;
wire   [31:0] and_ln238_fu_378_p2;
wire   [31:0] or_ln235_fu_385_p2;
wire   [31:0] xor_ln232_fu_392_p2;
wire   [31:0] zext_ln225_fu_405_p1;
wire   [31:0] zext_ln218_fu_416_p1;
wire   [31:0] add_ln215_fu_421_p2;
wire   [31:0] shl_ln242_fu_371_p2;
wire   [31:0] shl_ln285_fu_317_p2;
wire   [31:0] zext_ln292_fu_298_p1;
wire   [31:0] zext_ln303_fu_281_p1;
wire   [31:0] xor_ln314_fu_262_p2;
wire   [31:0] or_ln334_fu_213_p2;
wire   [31:0] sub_ln275_fu_324_p2;
wire   [31:0] add_ln271_fu_331_p2;
wire   [31:0] ashr_ln325_fu_228_p2;
wire   [31:0] lshr_ln322_fu_243_p2;
wire   [0:0] icmp_ln355_fu_195_p2;
wire   [4:0] trunc_ln325_fu_220_p1;
wire   [31:0] zext_ln325_fu_224_p1;
wire   [4:0] trunc_ln322_fu_235_p1;
wire   [31:0] zext_ln322_fu_239_p1;
wire   [0:0] icmp_ln303_fu_275_p2;
wire   [0:0] icmp_ln292_fu_292_p2;
wire   [4:0] trunc_ln285_fu_309_p1;
wire   [31:0] zext_ln285_fu_313_p1;
wire   [4:0] trunc_ln242_fu_363_p1;
wire   [31:0] zext_ln242_fu_367_p1;
wire   [0:0] icmp_ln225_fu_399_p2;
wire   [0:0] icmp_ln218_fu_410_p2;
wire   [4:0] trunc_ln253_fu_428_p1;
wire   [31:0] zext_ln253_fu_432_p1;
wire   [4:0] trunc_ln250_fu_443_p1;
wire   [31:0] zext_ln250_fu_447_p1;
wire    ap_ce_reg;

always @ (*) begin
    if (((funct7_val_read_read_fu_84_p2 == 7'd0) & (funct3_val_read_read_fu_90_p2 == 3'd5) & (op_code_val_read_read_fu_96_p2 == 7'd51))) begin
        ap_phi_mux_phi_ln367_phi_fu_105_p68 = lshr_ln322_fu_243_p2;
    end else if (((funct7_val_read_read_fu_84_p2 == 7'd32) & (funct3_val_read_read_fu_90_p2 == 3'd5) & (op_code_val_read_read_fu_96_p2 == 7'd51))) begin
        ap_phi_mux_phi_ln367_phi_fu_105_p68 = ashr_ln325_fu_228_p2;
    end else if (((funct7_val_read_read_fu_84_p2 == 7'd0) & (funct3_val_read_read_fu_90_p2 == 3'd0) & (op_code_val_read_read_fu_96_p2 == 7'd51))) begin
        ap_phi_mux_phi_ln367_phi_fu_105_p68 = add_ln271_fu_331_p2;
    end else if (((funct7_val_read_read_fu_84_p2 == 7'd32) & (funct3_val_read_read_fu_90_p2 == 3'd0) & (op_code_val_read_read_fu_96_p2 == 7'd51))) begin
        ap_phi_mux_phi_ln367_phi_fu_105_p68 = sub_ln275_fu_324_p2;
    end else if (((icmp_ln241_fu_189_p2 == 1'd1) & (funct3_val_read_read_fu_90_p2 == 3'd6) & (op_code_val_read_read_fu_96_p2 == 7'd51))) begin
        ap_phi_mux_phi_ln367_phi_fu_105_p68 = or_ln334_fu_213_p2;
    end else if (((icmp_ln241_fu_189_p2 == 1'd1) & (funct3_val_read_read_fu_90_p2 == 3'd4) & (op_code_val_read_read_fu_96_p2 == 7'd51))) begin
        ap_phi_mux_phi_ln367_phi_fu_105_p68 = xor_ln314_fu_262_p2;
    end else if (((icmp_ln241_fu_189_p2 == 1'd1) & (funct3_val_read_read_fu_90_p2 == 3'd3) & (op_code_val_read_read_fu_96_p2 == 7'd51))) begin
        ap_phi_mux_phi_ln367_phi_fu_105_p68 = zext_ln303_fu_281_p1;
    end else if (((icmp_ln241_fu_189_p2 == 1'd1) & (funct3_val_read_read_fu_90_p2 == 3'd2) & (op_code_val_read_read_fu_96_p2 == 7'd51))) begin
        ap_phi_mux_phi_ln367_phi_fu_105_p68 = zext_ln292_fu_298_p1;
    end else if (((icmp_ln241_fu_189_p2 == 1'd1) & (funct3_val_read_read_fu_90_p2 == 3'd1) & (op_code_val_read_read_fu_96_p2 == 7'd51))) begin
        ap_phi_mux_phi_ln367_phi_fu_105_p68 = shl_ln285_fu_317_p2;
    end else if (((icmp_ln241_fu_189_p2 == 1'd1) & (funct3_val_read_read_fu_90_p2 == 3'd1) & (op_code_val_read_read_fu_96_p2 == 7'd19))) begin
        ap_phi_mux_phi_ln367_phi_fu_105_p68 = shl_ln242_fu_371_p2;
    end else if (((funct3_val_read_read_fu_90_p2 == 3'd0) & (op_code_val_read_read_fu_96_p2 == 7'd19))) begin
        ap_phi_mux_phi_ln367_phi_fu_105_p68 = add_ln215_fu_421_p2;
    end else if (((funct3_val_read_read_fu_90_p2 == 3'd2) & (op_code_val_read_read_fu_96_p2 == 7'd19))) begin
        ap_phi_mux_phi_ln367_phi_fu_105_p68 = zext_ln218_fu_416_p1;
    end else if (((funct3_val_read_read_fu_90_p2 == 3'd3) & (op_code_val_read_read_fu_96_p2 == 7'd19))) begin
        ap_phi_mux_phi_ln367_phi_fu_105_p68 = zext_ln225_fu_405_p1;
    end else if (((funct3_val_read_read_fu_90_p2 == 3'd4) & (op_code_val_read_read_fu_96_p2 == 7'd19))) begin
        ap_phi_mux_phi_ln367_phi_fu_105_p68 = xor_ln232_fu_392_p2;
    end else if (((funct3_val_read_read_fu_90_p2 == 3'd6) & (op_code_val_read_read_fu_96_p2 == 7'd19))) begin
        ap_phi_mux_phi_ln367_phi_fu_105_p68 = or_ln235_fu_385_p2;
    end else if (((funct3_val_read_read_fu_90_p2 == 3'd7) & (op_code_val_read_read_fu_96_p2 == 7'd19))) begin
        ap_phi_mux_phi_ln367_phi_fu_105_p68 = and_ln238_fu_378_p2;
    end else if (((funct7_val_read_read_fu_84_p2 == 7'd0) & (funct3_val_read_read_fu_90_p2 == 3'd5) & (op_code_val_read_read_fu_96_p2 == 7'd19))) begin
        ap_phi_mux_phi_ln367_phi_fu_105_p68 = lshr_ln250_fu_451_p2;
    end else if (((funct7_val_read_read_fu_84_p2 == 7'd32) & (funct3_val_read_read_fu_90_p2 == 3'd5) & (op_code_val_read_read_fu_96_p2 == 7'd19))) begin
        ap_phi_mux_phi_ln367_phi_fu_105_p68 = ashr_ln253_fu_436_p2;
    end else if (((icmp_ln241_fu_189_p2 == 1'd1) & (funct3_val_read_read_fu_90_p2 == 3'd7) & (op_code_val_read_read_fu_96_p2 == 7'd51))) begin
        ap_phi_mux_phi_ln367_phi_fu_105_p68 = and_ln341_fu_350_p2;
    end else if ((op_code_val_read_read_fu_96_p2 == 7'd55)) begin
        ap_phi_mux_phi_ln367_phi_fu_105_p68 = imm_val;
    end else if ((op_code_val_read_read_fu_96_p2 == 7'd23)) begin
        ap_phi_mux_phi_ln367_phi_fu_105_p68 = add_ln210_fu_464_p2;
    end else begin
        ap_phi_mux_phi_ln367_phi_fu_105_p68 = 'bx;
    end
end

always @ (*) begin
    if (((~(op_code_val_read_read_fu_96_p2 == 7'd19) & ~(op_code_val_read_read_fu_96_p2 == 7'd51) & ~(op_code_val_read_read_fu_96_p2 == 7'd55) & ~(op_code_val_read_read_fu_96_p2 == 7'd23) & ~(op_code_val_read_read_fu_96_p2 == 7'd15) & ~(op_code_val_read_read_fu_96_p2 == 7'd115)) | (~(funct7_val_read_read_fu_84_p2 == 7'd0) & ~(funct7_val_read_read_fu_84_p2 == 7'd32) & (funct3_val_read_read_fu_90_p2 == 3'd0) & (op_code_val_read_read_fu_96_p2 == 7'd51)) | (~(funct7_val_read_read_fu_84_p2 == 7'd0) & ~(funct7_val_read_read_fu_84_p2 == 7'd32) & (funct3_val_read_read_fu_90_p2 == 3'd5) & (op_code_val_read_read_fu_96_p2 == 7'd19)) | (~(funct7_val_read_read_fu_84_p2 == 7'd0) & ~(funct7_val_read_read_fu_84_p2 == 7'd32) & (funct3_val_read_read_fu_90_p2 == 3'd5) & (op_code_val_read_read_fu_96_p2 == 7'd51)) | ((icmp_ln241_fu_189_p2 == 1'd0) & (funct3_val_read_read_fu_90_p2 == 3'd1) & (op_code_val_read_read_fu_96_p2 == 7'd19)) | ((icmp_ln241_fu_189_p2 == 1'd0) & (funct3_val_read_read_fu_90_p2 == 3'd1) & (op_code_val_read_read_fu_96_p2 
    == 7'd51)) | ((icmp_ln241_fu_189_p2 == 1'd0) & (funct3_val_read_read_fu_90_p2 == 3'd2) & (op_code_val_read_read_fu_96_p2 == 7'd51)) | ((icmp_ln241_fu_189_p2 == 1'd0) & (funct3_val_read_read_fu_90_p2 == 3'd3) & (op_code_val_read_read_fu_96_p2 == 7'd51)) | ((icmp_ln241_fu_189_p2 == 1'd0) & (funct3_val_read_read_fu_90_p2 == 3'd4) & (op_code_val_read_read_fu_96_p2 == 7'd51)) | ((icmp_ln241_fu_189_p2 == 1'd0) & (funct3_val_read_read_fu_90_p2 == 3'd6) & (op_code_val_read_read_fu_96_p2 == 7'd51)) | ((icmp_ln241_fu_189_p2 == 1'd0) & (funct3_val_read_read_fu_90_p2 == 3'd7) & (op_code_val_read_read_fu_96_p2 == 7'd51)) | ((op_code_val_read_read_fu_96_p2 == 7'd115) & (icmp_ln355_fu_195_p2 == 1'd0)))) begin
        g_error_ap_vld = 1'b1;
    end else begin
        g_error_ap_vld = 1'b0;
    end
end

assign add_ln210_fu_464_p2 = (pc_val + imm_val);

assign add_ln215_fu_421_p2 = (imm_val + source1_val);

assign add_ln271_fu_331_p2 = (source2_val + source1_val);

assign and_ln238_fu_378_p2 = (source1_val & imm_val);

assign and_ln341_fu_350_p2 = (source2_val & source1_val);

assign ap_ready = 1'b1;

assign ashr_ln253_fu_436_p2 = $signed(source1_val) >>> zext_ln253_fu_432_p1;

assign ashr_ln325_fu_228_p2 = $signed(source1_val) >>> zext_ln325_fu_224_p1;

assign g_error = 1'd1;

assign icmp_ln218_fu_410_p2 = (($signed(source1_val) < $signed(imm_val)) ? 1'b1 : 1'b0);

assign icmp_ln225_fu_399_p2 = ((source1_val < imm_val) ? 1'b1 : 1'b0);

assign icmp_ln292_fu_292_p2 = (($signed(source1_val) < $signed(source2_val)) ? 1'b1 : 1'b0);

assign icmp_ln303_fu_275_p2 = ((source1_val < source2_val) ? 1'b1 : 1'b0);

assign icmp_ln355_fu_195_p2 = ((imm_val == 32'd0) ? 1'b1 : 1'b0);

assign lshr_ln250_fu_451_p2 = source1_val >> zext_ln250_fu_447_p1;

assign lshr_ln322_fu_243_p2 = source1_val >> zext_ln322_fu_239_p1;

assign or_ln235_fu_385_p2 = (source1_val | imm_val);

assign or_ln334_fu_213_p2 = (source2_val | source1_val);

assign shl_ln242_fu_371_p2 = source1_val << zext_ln242_fu_367_p1;

assign shl_ln285_fu_317_p2 = source1_val << zext_ln285_fu_313_p1;

assign sub_ln275_fu_324_p2 = (source1_val - source2_val);

assign trunc_ln242_fu_363_p1 = imm_val[4:0];

assign trunc_ln250_fu_443_p1 = imm_val[4:0];

assign trunc_ln253_fu_428_p1 = imm_val[4:0];

assign trunc_ln285_fu_309_p1 = source2_val[4:0];

assign trunc_ln322_fu_235_p1 = source2_val[4:0];

assign trunc_ln325_fu_220_p1 = source2_val[4:0];

assign xor_ln232_fu_392_p2 = (source1_val ^ imm_val);

assign xor_ln314_fu_262_p2 = (source2_val ^ source1_val);

assign zext_ln218_fu_416_p1 = icmp_ln218_fu_410_p2;

assign zext_ln225_fu_405_p1 = icmp_ln225_fu_399_p2;

assign zext_ln242_fu_367_p1 = trunc_ln242_fu_363_p1;

assign zext_ln250_fu_447_p1 = trunc_ln250_fu_443_p1;

assign zext_ln253_fu_432_p1 = trunc_ln253_fu_428_p1;

assign zext_ln285_fu_313_p1 = trunc_ln285_fu_309_p1;

assign zext_ln292_fu_298_p1 = icmp_ln292_fu_292_p2;

assign zext_ln303_fu_281_p1 = icmp_ln303_fu_275_p2;

assign zext_ln322_fu_239_p1 = trunc_ln322_fu_235_p1;

assign zext_ln325_fu_224_p1 = trunc_ln325_fu_220_p1;

assign ap_return = ap_phi_mux_phi_ln367_phi_fu_105_p68;

assign funct3_val_read_read_fu_90_p2 = funct3_val;

assign funct7_val_read_read_fu_84_p2 = funct7_val;

assign icmp_ln241_fu_189_p2 = ((funct7_val == 7'd0) ? 1'b1 : 1'b0);

assign op_code_val_read_read_fu_96_p2 = op_code_val;

endmodule //processor_execute_arithm
