-- ==============================================================
-- Generated by Vitis HLS v2023.1.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity processor_do_process is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    instr_memory_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    instr_memory_ce0 : OUT STD_LOGIC;
    instr_memory_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    data_memory_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_memory_ce0 : OUT STD_LOGIC;
    data_memory_we0 : OUT STD_LOGIC;
    data_memory_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    data_memory_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of processor_do_process is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv7_63 : STD_LOGIC_VECTOR (6 downto 0) := "1100011";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv7_3 : STD_LOGIC_VECTOR (6 downto 0) := "0000011";
    constant ap_const_lv7_23 : STD_LOGIC_VECTOR (6 downto 0) := "0100011";
    constant ap_const_lv7_67 : STD_LOGIC_VECTOR (6 downto 0) := "1100111";
    constant ap_const_lv7_6F : STD_LOGIC_VECTOR (6 downto 0) := "1101111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv5_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv5_B : STD_LOGIC_VECTOR (4 downto 0) := "01011";
    constant ap_const_lv5_C : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_const_lv5_D : STD_LOGIC_VECTOR (4 downto 0) := "01101";
    constant ap_const_lv5_E : STD_LOGIC_VECTOR (4 downto 0) := "01110";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_11 : STD_LOGIC_VECTOR (4 downto 0) := "10001";
    constant ap_const_lv5_12 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_const_lv5_13 : STD_LOGIC_VECTOR (4 downto 0) := "10011";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv5_15 : STD_LOGIC_VECTOR (4 downto 0) := "10101";
    constant ap_const_lv5_16 : STD_LOGIC_VECTOR (4 downto 0) := "10110";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv5_1A : STD_LOGIC_VECTOR (4 downto 0) := "11010";
    constant ap_const_lv5_1B : STD_LOGIC_VECTOR (4 downto 0) := "11011";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv5_1D : STD_LOGIC_VECTOR (4 downto 0) := "11101";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv7_37 : STD_LOGIC_VECTOR (6 downto 0) := "0110111";
    constant ap_const_lv7_17 : STD_LOGIC_VECTOR (6 downto 0) := "0010111";
    constant ap_const_lv7_13 : STD_LOGIC_VECTOR (6 downto 0) := "0010011";
    constant ap_const_lv7_73 : STD_LOGIC_VECTOR (6 downto 0) := "1110011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal g_pc : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal g_error : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal g_xreg_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal g_xreg_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal g_xreg_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal g_xreg_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal g_xreg_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal g_xreg_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal g_xreg_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal g_xreg_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal g_xreg_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal g_xreg_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal g_xreg_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal g_xreg_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal g_xreg_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal g_xreg_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal g_xreg_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal g_xreg_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal g_xreg_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal g_xreg_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal g_xreg_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal g_xreg_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal g_xreg_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal g_xreg_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal g_xreg_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal g_xreg_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal g_xreg_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal g_xreg_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal g_xreg_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal g_xreg_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal g_xreg_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal g_xreg_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal g_xreg_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pc_reg_1859 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln26_fu_469_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln26_reg_1872 : STD_LOGIC_VECTOR (0 downto 0);
    signal op_code_fu_496_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal op_code_reg_1881 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal funct3_fu_500_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal funct3_reg_1886 : STD_LOGIC_VECTOR (2 downto 0);
    signal funct7_reg_1891 : STD_LOGIC_VECTOR (6 downto 0);
    signal rd_fu_520_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal rd_reg_1896 : STD_LOGIC_VECTOR (4 downto 0);
    signal source1_fu_674_p34 : STD_LOGIC_VECTOR (31 downto 0);
    signal source1_reg_1900 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_19_fu_747_p34 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_19_reg_1907 : STD_LOGIC_VECTOR (31 downto 0);
    signal imm_8_fu_1080_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal imm_8_reg_1916 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_418_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal branch_5_reg_1923 : STD_LOGIC_VECTOR (0 downto 0);
    signal branch_4_reg_1927 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_422_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal branch_3_reg_1931 : STD_LOGIC_VECTOR (0 downto 0);
    signal branch_2_reg_1935 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_426_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal branch_1_reg_1939 : STD_LOGIC_VECTOR (0 downto 0);
    signal branch_reg_1943 : STD_LOGIC_VECTOR (0 downto 0);
    signal offset_1_fu_1326_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal offset_1_reg_1950 : STD_LOGIC_VECTOR (1 downto 0);
    signal data_memory_addr_reg_1965 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal result_execute_arithm_fu_404_ap_ready : STD_LOGIC;
    signal result_execute_arithm_fu_404_g_error : STD_LOGIC_VECTOR (0 downto 0);
    signal result_execute_arithm_fu_404_g_error_ap_vld : STD_LOGIC;
    signal result_execute_arithm_fu_404_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_empty_reg_308 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_empty_reg_308 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_empty_17_phi_fu_320_p14 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_empty_17_reg_317 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_empty_17_reg_317 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_p_0_0_03061_phi_fu_340_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_p_0_0_03061_reg_337 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_9_fu_1650_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal offset_fu_1570_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter0_p_0_0_03061_reg_337 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_13_fu_1595_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_14_fu_1579_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_10_fu_1637_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_11_fu_1624_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_12_fu_1611_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_result_2_phi_fu_367_p22 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_result_2_reg_363 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln156_fu_1476_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln135_fu_1559_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln142_fu_1490_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln144_fu_1481_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln163_fu_1407_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln165_fu_1398_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_storemerge_phi_fu_398_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_430_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_storemerge_reg_395 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln388_fu_1392_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln29_fu_485_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln127_fu_1332_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln183_fu_1381_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_pc : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_1312_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_1367_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln25_fu_465_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal lshr_ln_fu_475_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal source1_fu_674_p33 : STD_LOGIC_VECTOR (4 downto 0);
    signal result_19_fu_747_p33 : STD_LOGIC_VECTOR (4 downto 0);
    signal imm_fu_820_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_1_fu_844_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_s_fu_834_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal imm_1_fu_854_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_5_fu_894_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_886_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_876_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_2_fu_866_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal imm_2_fu_902_p6 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_fu_920_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_8_fu_956_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_fu_948_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_938_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln46_fu_980_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln402_1_fu_916_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal imm_4_fu_966_p6 : STD_LOGIC_VECTOR (20 downto 0);
    signal icmp_ln46_1_fu_994_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln402_fu_862_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal imm_5_fu_986_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal imm_6_fu_1000_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal icmp_ln46_2_fu_1012_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln46_3_fu_1018_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln46_fu_1024_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal imm_3_fu_930_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln402_2_fu_1008_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln46_4_fu_1038_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln46_5_fu_1044_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln46_6_fu_1050_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln46_7_fu_1056_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln46_2_fu_1068_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln46_1_fu_1062_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln46_3_fu_1074_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln52_fu_830_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal imm_7_fu_1030_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln120_1_fu_1284_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal trunc_ln120_fu_1280_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal add_ln120_fu_1296_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal trunc_ln120_3_fu_1292_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln120_2_fu_1288_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal mem_pos_fu_1302_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln176_1_fu_1347_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal trunc_ln176_fu_1343_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal add_ln176_fu_1351_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal write_addr_fu_1357_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_436_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal result_17_fu_1403_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_456_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_1436_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_fu_1426_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_451_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_446_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln152_fu_1422_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_14_fu_1412_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln151_fu_1454_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln151_fu_1446_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln151_1_fu_1460_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal result_8_fu_1468_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal result_15_fu_1486_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_13_fu_1519_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_12_fu_1509_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln131_fu_1505_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_fu_1495_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln130_fu_1537_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln130_fu_1529_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln130_1_fu_1543_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal result_7_fu_1551_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln176_3_fu_1567_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln176_2_fu_1564_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln200_fu_1576_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln198_fu_1592_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln187_fu_1608_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to1 : STD_LOGIC;
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_136 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component processor_execute_arithm IS
    port (
        ap_ready : OUT STD_LOGIC;
        op_code_val : IN STD_LOGIC_VECTOR (6 downto 0);
        funct3_val : IN STD_LOGIC_VECTOR (2 downto 0);
        funct7_val : IN STD_LOGIC_VECTOR (6 downto 0);
        source1_val : IN STD_LOGIC_VECTOR (31 downto 0);
        source2_val : IN STD_LOGIC_VECTOR (31 downto 0);
        imm_val : IN STD_LOGIC_VECTOR (31 downto 0);
        pc_val : IN STD_LOGIC_VECTOR (31 downto 0);
        g_error : OUT STD_LOGIC_VECTOR (0 downto 0);
        g_error_ap_vld : OUT STD_LOGIC;
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component processor_mux_32_5_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        din17_WIDTH : INTEGER;
        din18_WIDTH : INTEGER;
        din19_WIDTH : INTEGER;
        din20_WIDTH : INTEGER;
        din21_WIDTH : INTEGER;
        din22_WIDTH : INTEGER;
        din23_WIDTH : INTEGER;
        din24_WIDTH : INTEGER;
        din25_WIDTH : INTEGER;
        din26_WIDTH : INTEGER;
        din27_WIDTH : INTEGER;
        din28_WIDTH : INTEGER;
        din29_WIDTH : INTEGER;
        din30_WIDTH : INTEGER;
        din31_WIDTH : INTEGER;
        din32_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        din10 : IN STD_LOGIC_VECTOR (31 downto 0);
        din11 : IN STD_LOGIC_VECTOR (31 downto 0);
        din12 : IN STD_LOGIC_VECTOR (31 downto 0);
        din13 : IN STD_LOGIC_VECTOR (31 downto 0);
        din14 : IN STD_LOGIC_VECTOR (31 downto 0);
        din15 : IN STD_LOGIC_VECTOR (31 downto 0);
        din16 : IN STD_LOGIC_VECTOR (31 downto 0);
        din17 : IN STD_LOGIC_VECTOR (31 downto 0);
        din18 : IN STD_LOGIC_VECTOR (31 downto 0);
        din19 : IN STD_LOGIC_VECTOR (31 downto 0);
        din20 : IN STD_LOGIC_VECTOR (31 downto 0);
        din21 : IN STD_LOGIC_VECTOR (31 downto 0);
        din22 : IN STD_LOGIC_VECTOR (31 downto 0);
        din23 : IN STD_LOGIC_VECTOR (31 downto 0);
        din24 : IN STD_LOGIC_VECTOR (31 downto 0);
        din25 : IN STD_LOGIC_VECTOR (31 downto 0);
        din26 : IN STD_LOGIC_VECTOR (31 downto 0);
        din27 : IN STD_LOGIC_VECTOR (31 downto 0);
        din28 : IN STD_LOGIC_VECTOR (31 downto 0);
        din29 : IN STD_LOGIC_VECTOR (31 downto 0);
        din30 : IN STD_LOGIC_VECTOR (31 downto 0);
        din31 : IN STD_LOGIC_VECTOR (31 downto 0);
        din32 : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    result_execute_arithm_fu_404 : component processor_execute_arithm
    port map (
        ap_ready => result_execute_arithm_fu_404_ap_ready,
        op_code_val => op_code_reg_1881,
        funct3_val => funct3_reg_1886,
        funct7_val => funct7_reg_1891,
        source1_val => source1_reg_1900,
        source2_val => result_19_reg_1907,
        imm_val => imm_8_reg_1916,
        pc_val => pc_reg_1859,
        g_error => result_execute_arithm_fu_404_g_error,
        g_error_ap_vld => result_execute_arithm_fu_404_g_error_ap_vld,
        ap_return => result_execute_arithm_fu_404_ap_return);

    mux_32_5_32_1_1_U9 : component processor_mux_32_5_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 32,
        din24_WIDTH => 32,
        din25_WIDTH => 32,
        din26_WIDTH => 32,
        din27_WIDTH => 32,
        din28_WIDTH => 32,
        din29_WIDTH => 32,
        din30_WIDTH => 32,
        din31_WIDTH => 32,
        din32_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_0,
        din1 => g_xreg_1,
        din2 => g_xreg_2,
        din3 => g_xreg_3,
        din4 => g_xreg_4,
        din5 => g_xreg_5,
        din6 => g_xreg_6,
        din7 => g_xreg_7,
        din8 => g_xreg_8,
        din9 => g_xreg_9,
        din10 => g_xreg_10,
        din11 => g_xreg_11,
        din12 => g_xreg_12,
        din13 => g_xreg_13,
        din14 => g_xreg_14,
        din15 => g_xreg_15,
        din16 => g_xreg_16,
        din17 => g_xreg_17,
        din18 => g_xreg_18,
        din19 => g_xreg_19,
        din20 => g_xreg_20,
        din21 => g_xreg_21,
        din22 => g_xreg_22,
        din23 => g_xreg_23,
        din24 => g_xreg_24,
        din25 => g_xreg_25,
        din26 => g_xreg_26,
        din27 => g_xreg_27,
        din28 => g_xreg_28,
        din29 => g_xreg_29,
        din30 => g_xreg_30,
        din31 => g_xreg_31,
        din32 => source1_fu_674_p33,
        dout => source1_fu_674_p34);

    mux_32_5_32_1_1_U10 : component processor_mux_32_5_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 32,
        din24_WIDTH => 32,
        din25_WIDTH => 32,
        din26_WIDTH => 32,
        din27_WIDTH => 32,
        din28_WIDTH => 32,
        din29_WIDTH => 32,
        din30_WIDTH => 32,
        din31_WIDTH => 32,
        din32_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_0,
        din1 => g_xreg_1,
        din2 => g_xreg_2,
        din3 => g_xreg_3,
        din4 => g_xreg_4,
        din5 => g_xreg_5,
        din6 => g_xreg_6,
        din7 => g_xreg_7,
        din8 => g_xreg_8,
        din9 => g_xreg_9,
        din10 => g_xreg_10,
        din11 => g_xreg_11,
        din12 => g_xreg_12,
        din13 => g_xreg_13,
        din14 => g_xreg_14,
        din15 => g_xreg_15,
        din16 => g_xreg_16,
        din17 => g_xreg_17,
        din18 => g_xreg_18,
        din19 => g_xreg_19,
        din20 => g_xreg_20,
        din21 => g_xreg_21,
        din22 => g_xreg_22,
        din23 => g_xreg_23,
        din24 => g_xreg_24,
        din25 => g_xreg_25,
        din26 => g_xreg_26,
        din27 => g_xreg_27,
        din28 => g_xreg_28,
        din29 => g_xreg_29,
        din30 => g_xreg_30,
        din31 => g_xreg_31,
        din32 => result_19_fu_747_p33,
        dout => result_19_fu_747_p34);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    g_pc_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                g_pc <= ap_const_lv32_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    g_pc <= ap_phi_mux_storemerge_phi_fu_398_p4;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_empty_17_reg_317_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (grp_fu_426_p2 = ap_const_lv1_1) and (funct3_fu_500_p4 = ap_const_lv3_0) and (op_code_fu_496_p1 = ap_const_lv7_63)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (grp_fu_418_p2 = ap_const_lv1_0) and (funct3_fu_500_p4 = ap_const_lv3_7) and (op_code_fu_496_p1 = ap_const_lv7_63)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (grp_fu_418_p2 = ap_const_lv1_1) and (funct3_fu_500_p4 = ap_const_lv3_6) and (op_code_fu_496_p1 = ap_const_lv7_63)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (grp_fu_422_p2 = ap_const_lv1_0) and (funct3_fu_500_p4 = ap_const_lv3_5) 
    and (op_code_fu_496_p1 = ap_const_lv7_63)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (grp_fu_422_p2 = ap_const_lv1_1) and (funct3_fu_500_p4 = ap_const_lv3_4) and (op_code_fu_496_p1 = ap_const_lv7_63)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (grp_fu_426_p2 = ap_const_lv1_0) and (funct3_fu_500_p4 = ap_const_lv3_1) and (op_code_fu_496_p1 = ap_const_lv7_63)))) then 
                ap_phi_reg_pp0_iter1_empty_17_reg_317 <= pc_reg_1859;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_phi_reg_pp0_iter1_empty_17_reg_317 <= ap_phi_reg_pp0_iter0_empty_17_reg_317;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_empty_reg_308_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_136)) then
                if ((op_code_fu_496_p1 = ap_const_lv7_6F)) then 
                    ap_phi_reg_pp0_iter1_empty_reg_308 <= pc_reg_1859;
                elsif ((op_code_fu_496_p1 = ap_const_lv7_67)) then 
                    ap_phi_reg_pp0_iter1_empty_reg_308 <= source1_fu_674_p34;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_empty_reg_308 <= ap_phi_reg_pp0_iter0_empty_reg_308;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_p_0_0_03061_reg_337_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_136)) then
                if (((funct3_fu_500_p4 = ap_const_lv3_2) and (op_code_fu_496_p1 = ap_const_lv7_23))) then 
                    ap_phi_reg_pp0_iter1_p_0_0_03061_reg_337 <= result_19_fu_747_p34;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_p_0_0_03061_reg_337 <= ap_phi_reg_pp0_iter0_p_0_0_03061_reg_337;
                end if;
            end if; 
        end if;
    end process;

    g_error_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((tmp_9_fu_1367_p3 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (op_code_fu_496_p1 = ap_const_lv7_23)) or (not((funct3_fu_500_p4 = ap_const_lv3_2)) and not((funct3_fu_500_p4 = ap_const_lv3_0)) and not((funct3_fu_500_p4 = ap_const_lv3_1)) and not((funct3_fu_500_p4 = ap_const_lv3_4)) and not((funct3_fu_500_p4 = ap_const_lv3_5)) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (op_code_fu_496_p1 = ap_const_lv7_3)) or (not((funct3_fu_500_p4 = ap_const_lv3_2)) and not((funct3_fu_500_p4 = ap_const_lv3_0)) and not((funct3_fu_500_p4 = ap_const_lv3_1)) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (op_code_fu_496_p1 = ap_const_lv7_23)) or ((tmp_10_fu_1312_p3 = ap_const_lv1_0) and (ap_const_boolean_0 
    = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (op_code_fu_496_p1 = ap_const_lv7_3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (((funct3_fu_500_p4 = ap_const_lv3_3) and (op_code_fu_496_p1 = ap_const_lv7_63)) or ((funct3_fu_500_p4 = ap_const_lv3_2) and (op_code_fu_496_p1 = ap_const_lv7_63)))) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln26_reg_1872 = ap_const_lv1_0)))) then 
                g_error <= ap_const_lv1_1;
            elsif ((not((op_code_reg_1881 = ap_const_lv7_63)) and not((op_code_reg_1881 = ap_const_lv7_3)) and not((op_code_reg_1881 = ap_const_lv7_23)) and not((op_code_reg_1881 = ap_const_lv7_6F)) and not((op_code_reg_1881 = ap_const_lv7_67)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (result_execute_arithm_fu_404_g_error_ap_vld = ap_const_logic_1))) then 
                g_error <= result_execute_arithm_fu_404_g_error;
            end if; 
        end if;
    end process;

    g_xreg_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (((rd_fu_520_p4 = ap_const_lv5_1) and (op_code_fu_496_p1 = ap_const_lv7_6F)) or ((rd_fu_520_p4 = ap_const_lv5_1) and (op_code_fu_496_p1 = ap_const_lv7_67))))) then 
                g_xreg_1 <= grp_fu_430_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and ((not((op_code_reg_1881 = ap_const_lv7_63)) and not((op_code_reg_1881 = ap_const_lv7_23)) and not((op_code_reg_1881 = ap_const_lv7_6F)) and not((op_code_reg_1881 = ap_const_lv7_67)) and (rd_reg_1896 = ap_const_lv5_1)) or (not((op_code_reg_1881 = ap_const_lv7_23)) and (rd_reg_1896 = ap_const_lv5_1) and (op_code_reg_1881 = ap_const_lv7_3))))) then 
                g_xreg_1 <= ap_phi_mux_result_2_phi_fu_367_p22;
            end if; 
        end if;
    end process;

    g_xreg_10_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (((rd_fu_520_p4 = ap_const_lv5_A) and (op_code_fu_496_p1 = ap_const_lv7_6F)) or ((rd_fu_520_p4 = ap_const_lv5_A) and (op_code_fu_496_p1 = ap_const_lv7_67))))) then 
                g_xreg_10 <= grp_fu_430_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and ((not((op_code_reg_1881 = ap_const_lv7_63)) and not((op_code_reg_1881 = ap_const_lv7_23)) and not((op_code_reg_1881 = ap_const_lv7_6F)) and not((op_code_reg_1881 = ap_const_lv7_67)) and (rd_reg_1896 = ap_const_lv5_A)) or (not((op_code_reg_1881 = ap_const_lv7_23)) and (rd_reg_1896 = ap_const_lv5_A) and (op_code_reg_1881 = ap_const_lv7_3))))) then 
                g_xreg_10 <= ap_phi_mux_result_2_phi_fu_367_p22;
            end if; 
        end if;
    end process;

    g_xreg_11_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (((rd_fu_520_p4 = ap_const_lv5_B) and (op_code_fu_496_p1 = ap_const_lv7_6F)) or ((rd_fu_520_p4 = ap_const_lv5_B) and (op_code_fu_496_p1 = ap_const_lv7_67))))) then 
                g_xreg_11 <= grp_fu_430_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and ((not((op_code_reg_1881 = ap_const_lv7_63)) and not((op_code_reg_1881 = ap_const_lv7_23)) and not((op_code_reg_1881 = ap_const_lv7_6F)) and not((op_code_reg_1881 = ap_const_lv7_67)) and (rd_reg_1896 = ap_const_lv5_B)) or (not((op_code_reg_1881 = ap_const_lv7_23)) and (rd_reg_1896 = ap_const_lv5_B) and (op_code_reg_1881 = ap_const_lv7_3))))) then 
                g_xreg_11 <= ap_phi_mux_result_2_phi_fu_367_p22;
            end if; 
        end if;
    end process;

    g_xreg_12_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (((rd_fu_520_p4 = ap_const_lv5_C) and (op_code_fu_496_p1 = ap_const_lv7_6F)) or ((rd_fu_520_p4 = ap_const_lv5_C) and (op_code_fu_496_p1 = ap_const_lv7_67))))) then 
                g_xreg_12 <= grp_fu_430_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and ((not((op_code_reg_1881 = ap_const_lv7_63)) and not((op_code_reg_1881 = ap_const_lv7_23)) and not((op_code_reg_1881 = ap_const_lv7_6F)) and not((op_code_reg_1881 = ap_const_lv7_67)) and (rd_reg_1896 = ap_const_lv5_C)) or (not((op_code_reg_1881 = ap_const_lv7_23)) and (rd_reg_1896 = ap_const_lv5_C) and (op_code_reg_1881 = ap_const_lv7_3))))) then 
                g_xreg_12 <= ap_phi_mux_result_2_phi_fu_367_p22;
            end if; 
        end if;
    end process;

    g_xreg_13_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (((rd_fu_520_p4 = ap_const_lv5_D) and (op_code_fu_496_p1 = ap_const_lv7_6F)) or ((rd_fu_520_p4 = ap_const_lv5_D) and (op_code_fu_496_p1 = ap_const_lv7_67))))) then 
                g_xreg_13 <= grp_fu_430_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and ((not((op_code_reg_1881 = ap_const_lv7_63)) and not((op_code_reg_1881 = ap_const_lv7_23)) and not((op_code_reg_1881 = ap_const_lv7_6F)) and not((op_code_reg_1881 = ap_const_lv7_67)) and (rd_reg_1896 = ap_const_lv5_D)) or (not((op_code_reg_1881 = ap_const_lv7_23)) and (rd_reg_1896 = ap_const_lv5_D) and (op_code_reg_1881 = ap_const_lv7_3))))) then 
                g_xreg_13 <= ap_phi_mux_result_2_phi_fu_367_p22;
            end if; 
        end if;
    end process;

    g_xreg_14_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (((rd_fu_520_p4 = ap_const_lv5_E) and (op_code_fu_496_p1 = ap_const_lv7_6F)) or ((rd_fu_520_p4 = ap_const_lv5_E) and (op_code_fu_496_p1 = ap_const_lv7_67))))) then 
                g_xreg_14 <= grp_fu_430_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and ((not((op_code_reg_1881 = ap_const_lv7_63)) and not((op_code_reg_1881 = ap_const_lv7_23)) and not((op_code_reg_1881 = ap_const_lv7_6F)) and not((op_code_reg_1881 = ap_const_lv7_67)) and (rd_reg_1896 = ap_const_lv5_E)) or (not((op_code_reg_1881 = ap_const_lv7_23)) and (rd_reg_1896 = ap_const_lv5_E) and (op_code_reg_1881 = ap_const_lv7_3))))) then 
                g_xreg_14 <= ap_phi_mux_result_2_phi_fu_367_p22;
            end if; 
        end if;
    end process;

    g_xreg_15_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (((rd_fu_520_p4 = ap_const_lv5_F) and (op_code_fu_496_p1 = ap_const_lv7_6F)) or ((rd_fu_520_p4 = ap_const_lv5_F) and (op_code_fu_496_p1 = ap_const_lv7_67))))) then 
                g_xreg_15 <= grp_fu_430_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and ((not((op_code_reg_1881 = ap_const_lv7_63)) and not((op_code_reg_1881 = ap_const_lv7_23)) and not((op_code_reg_1881 = ap_const_lv7_6F)) and not((op_code_reg_1881 = ap_const_lv7_67)) and (rd_reg_1896 = ap_const_lv5_F)) or (not((op_code_reg_1881 = ap_const_lv7_23)) and (rd_reg_1896 = ap_const_lv5_F) and (op_code_reg_1881 = ap_const_lv7_3))))) then 
                g_xreg_15 <= ap_phi_mux_result_2_phi_fu_367_p22;
            end if; 
        end if;
    end process;

    g_xreg_16_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (((rd_fu_520_p4 = ap_const_lv5_10) and (op_code_fu_496_p1 = ap_const_lv7_6F)) or ((rd_fu_520_p4 = ap_const_lv5_10) and (op_code_fu_496_p1 = ap_const_lv7_67))))) then 
                g_xreg_16 <= grp_fu_430_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and ((not((op_code_reg_1881 = ap_const_lv7_63)) and not((op_code_reg_1881 = ap_const_lv7_23)) and not((op_code_reg_1881 = ap_const_lv7_6F)) and not((op_code_reg_1881 = ap_const_lv7_67)) and (rd_reg_1896 = ap_const_lv5_10)) or (not((op_code_reg_1881 = ap_const_lv7_23)) and (rd_reg_1896 = ap_const_lv5_10) and (op_code_reg_1881 = ap_const_lv7_3))))) then 
                g_xreg_16 <= ap_phi_mux_result_2_phi_fu_367_p22;
            end if; 
        end if;
    end process;

    g_xreg_17_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (((rd_fu_520_p4 = ap_const_lv5_11) and (op_code_fu_496_p1 = ap_const_lv7_6F)) or ((rd_fu_520_p4 = ap_const_lv5_11) and (op_code_fu_496_p1 = ap_const_lv7_67))))) then 
                g_xreg_17 <= grp_fu_430_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and ((not((op_code_reg_1881 = ap_const_lv7_63)) and not((op_code_reg_1881 = ap_const_lv7_23)) and not((op_code_reg_1881 = ap_const_lv7_6F)) and not((op_code_reg_1881 = ap_const_lv7_67)) and (rd_reg_1896 = ap_const_lv5_11)) or (not((op_code_reg_1881 = ap_const_lv7_23)) and (rd_reg_1896 = ap_const_lv5_11) and (op_code_reg_1881 = ap_const_lv7_3))))) then 
                g_xreg_17 <= ap_phi_mux_result_2_phi_fu_367_p22;
            end if; 
        end if;
    end process;

    g_xreg_18_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (((rd_fu_520_p4 = ap_const_lv5_12) and (op_code_fu_496_p1 = ap_const_lv7_6F)) or ((rd_fu_520_p4 = ap_const_lv5_12) and (op_code_fu_496_p1 = ap_const_lv7_67))))) then 
                g_xreg_18 <= grp_fu_430_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and ((not((op_code_reg_1881 = ap_const_lv7_63)) and not((op_code_reg_1881 = ap_const_lv7_23)) and not((op_code_reg_1881 = ap_const_lv7_6F)) and not((op_code_reg_1881 = ap_const_lv7_67)) and (rd_reg_1896 = ap_const_lv5_12)) or (not((op_code_reg_1881 = ap_const_lv7_23)) and (rd_reg_1896 = ap_const_lv5_12) and (op_code_reg_1881 = ap_const_lv7_3))))) then 
                g_xreg_18 <= ap_phi_mux_result_2_phi_fu_367_p22;
            end if; 
        end if;
    end process;

    g_xreg_19_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (((rd_fu_520_p4 = ap_const_lv5_13) and (op_code_fu_496_p1 = ap_const_lv7_6F)) or ((rd_fu_520_p4 = ap_const_lv5_13) and (op_code_fu_496_p1 = ap_const_lv7_67))))) then 
                g_xreg_19 <= grp_fu_430_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and ((not((op_code_reg_1881 = ap_const_lv7_63)) and not((op_code_reg_1881 = ap_const_lv7_23)) and not((op_code_reg_1881 = ap_const_lv7_6F)) and not((op_code_reg_1881 = ap_const_lv7_67)) and (rd_reg_1896 = ap_const_lv5_13)) or (not((op_code_reg_1881 = ap_const_lv7_23)) and (rd_reg_1896 = ap_const_lv5_13) and (op_code_reg_1881 = ap_const_lv7_3))))) then 
                g_xreg_19 <= ap_phi_mux_result_2_phi_fu_367_p22;
            end if; 
        end if;
    end process;

    g_xreg_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (((rd_fu_520_p4 = ap_const_lv5_2) and (op_code_fu_496_p1 = ap_const_lv7_6F)) or ((rd_fu_520_p4 = ap_const_lv5_2) and (op_code_fu_496_p1 = ap_const_lv7_67))))) then 
                g_xreg_2 <= grp_fu_430_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and ((not((op_code_reg_1881 = ap_const_lv7_63)) and not((op_code_reg_1881 = ap_const_lv7_23)) and not((op_code_reg_1881 = ap_const_lv7_6F)) and not((op_code_reg_1881 = ap_const_lv7_67)) and (rd_reg_1896 = ap_const_lv5_2)) or (not((op_code_reg_1881 = ap_const_lv7_23)) and (rd_reg_1896 = ap_const_lv5_2) and (op_code_reg_1881 = ap_const_lv7_3))))) then 
                g_xreg_2 <= ap_phi_mux_result_2_phi_fu_367_p22;
            end if; 
        end if;
    end process;

    g_xreg_20_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (((rd_fu_520_p4 = ap_const_lv5_14) and (op_code_fu_496_p1 = ap_const_lv7_6F)) or ((rd_fu_520_p4 = ap_const_lv5_14) and (op_code_fu_496_p1 = ap_const_lv7_67))))) then 
                g_xreg_20 <= grp_fu_430_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and ((not((op_code_reg_1881 = ap_const_lv7_63)) and not((op_code_reg_1881 = ap_const_lv7_23)) and not((op_code_reg_1881 = ap_const_lv7_6F)) and not((op_code_reg_1881 = ap_const_lv7_67)) and (rd_reg_1896 = ap_const_lv5_14)) or (not((op_code_reg_1881 = ap_const_lv7_23)) and (rd_reg_1896 = ap_const_lv5_14) and (op_code_reg_1881 = ap_const_lv7_3))))) then 
                g_xreg_20 <= ap_phi_mux_result_2_phi_fu_367_p22;
            end if; 
        end if;
    end process;

    g_xreg_21_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (((rd_fu_520_p4 = ap_const_lv5_15) and (op_code_fu_496_p1 = ap_const_lv7_6F)) or ((rd_fu_520_p4 = ap_const_lv5_15) and (op_code_fu_496_p1 = ap_const_lv7_67))))) then 
                g_xreg_21 <= grp_fu_430_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and ((not((op_code_reg_1881 = ap_const_lv7_63)) and not((op_code_reg_1881 = ap_const_lv7_23)) and not((op_code_reg_1881 = ap_const_lv7_6F)) and not((op_code_reg_1881 = ap_const_lv7_67)) and (rd_reg_1896 = ap_const_lv5_15)) or (not((op_code_reg_1881 = ap_const_lv7_23)) and (rd_reg_1896 = ap_const_lv5_15) and (op_code_reg_1881 = ap_const_lv7_3))))) then 
                g_xreg_21 <= ap_phi_mux_result_2_phi_fu_367_p22;
            end if; 
        end if;
    end process;

    g_xreg_22_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (((rd_fu_520_p4 = ap_const_lv5_16) and (op_code_fu_496_p1 = ap_const_lv7_6F)) or ((rd_fu_520_p4 = ap_const_lv5_16) and (op_code_fu_496_p1 = ap_const_lv7_67))))) then 
                g_xreg_22 <= grp_fu_430_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and ((not((op_code_reg_1881 = ap_const_lv7_63)) and not((op_code_reg_1881 = ap_const_lv7_23)) and not((op_code_reg_1881 = ap_const_lv7_6F)) and not((op_code_reg_1881 = ap_const_lv7_67)) and (rd_reg_1896 = ap_const_lv5_16)) or (not((op_code_reg_1881 = ap_const_lv7_23)) and (rd_reg_1896 = ap_const_lv5_16) and (op_code_reg_1881 = ap_const_lv7_3))))) then 
                g_xreg_22 <= ap_phi_mux_result_2_phi_fu_367_p22;
            end if; 
        end if;
    end process;

    g_xreg_23_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (((rd_fu_520_p4 = ap_const_lv5_17) and (op_code_fu_496_p1 = ap_const_lv7_6F)) or ((rd_fu_520_p4 = ap_const_lv5_17) and (op_code_fu_496_p1 = ap_const_lv7_67))))) then 
                g_xreg_23 <= grp_fu_430_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and ((not((op_code_reg_1881 = ap_const_lv7_63)) and not((op_code_reg_1881 = ap_const_lv7_23)) and not((op_code_reg_1881 = ap_const_lv7_6F)) and not((op_code_reg_1881 = ap_const_lv7_67)) and (rd_reg_1896 = ap_const_lv5_17)) or (not((op_code_reg_1881 = ap_const_lv7_23)) and (rd_reg_1896 = ap_const_lv5_17) and (op_code_reg_1881 = ap_const_lv7_3))))) then 
                g_xreg_23 <= ap_phi_mux_result_2_phi_fu_367_p22;
            end if; 
        end if;
    end process;

    g_xreg_24_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (((rd_fu_520_p4 = ap_const_lv5_18) and (op_code_fu_496_p1 = ap_const_lv7_6F)) or ((rd_fu_520_p4 = ap_const_lv5_18) and (op_code_fu_496_p1 = ap_const_lv7_67))))) then 
                g_xreg_24 <= grp_fu_430_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and ((not((op_code_reg_1881 = ap_const_lv7_63)) and not((op_code_reg_1881 = ap_const_lv7_23)) and not((op_code_reg_1881 = ap_const_lv7_6F)) and not((op_code_reg_1881 = ap_const_lv7_67)) and (rd_reg_1896 = ap_const_lv5_18)) or (not((op_code_reg_1881 = ap_const_lv7_23)) and (rd_reg_1896 = ap_const_lv5_18) and (op_code_reg_1881 = ap_const_lv7_3))))) then 
                g_xreg_24 <= ap_phi_mux_result_2_phi_fu_367_p22;
            end if; 
        end if;
    end process;

    g_xreg_25_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (((rd_fu_520_p4 = ap_const_lv5_19) and (op_code_fu_496_p1 = ap_const_lv7_6F)) or ((rd_fu_520_p4 = ap_const_lv5_19) and (op_code_fu_496_p1 = ap_const_lv7_67))))) then 
                g_xreg_25 <= grp_fu_430_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and ((not((op_code_reg_1881 = ap_const_lv7_63)) and not((op_code_reg_1881 = ap_const_lv7_23)) and not((op_code_reg_1881 = ap_const_lv7_6F)) and not((op_code_reg_1881 = ap_const_lv7_67)) and (rd_reg_1896 = ap_const_lv5_19)) or (not((op_code_reg_1881 = ap_const_lv7_23)) and (rd_reg_1896 = ap_const_lv5_19) and (op_code_reg_1881 = ap_const_lv7_3))))) then 
                g_xreg_25 <= ap_phi_mux_result_2_phi_fu_367_p22;
            end if; 
        end if;
    end process;

    g_xreg_26_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (((rd_fu_520_p4 = ap_const_lv5_1A) and (op_code_fu_496_p1 = ap_const_lv7_6F)) or ((rd_fu_520_p4 = ap_const_lv5_1A) and (op_code_fu_496_p1 = ap_const_lv7_67))))) then 
                g_xreg_26 <= grp_fu_430_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and ((not((op_code_reg_1881 = ap_const_lv7_63)) and not((op_code_reg_1881 = ap_const_lv7_23)) and not((op_code_reg_1881 = ap_const_lv7_6F)) and not((op_code_reg_1881 = ap_const_lv7_67)) and (rd_reg_1896 = ap_const_lv5_1A)) or (not((op_code_reg_1881 = ap_const_lv7_23)) and (rd_reg_1896 = ap_const_lv5_1A) and (op_code_reg_1881 = ap_const_lv7_3))))) then 
                g_xreg_26 <= ap_phi_mux_result_2_phi_fu_367_p22;
            end if; 
        end if;
    end process;

    g_xreg_27_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (((rd_fu_520_p4 = ap_const_lv5_1B) and (op_code_fu_496_p1 = ap_const_lv7_6F)) or ((rd_fu_520_p4 = ap_const_lv5_1B) and (op_code_fu_496_p1 = ap_const_lv7_67))))) then 
                g_xreg_27 <= grp_fu_430_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and ((not((op_code_reg_1881 = ap_const_lv7_63)) and not((op_code_reg_1881 = ap_const_lv7_23)) and not((op_code_reg_1881 = ap_const_lv7_6F)) and not((op_code_reg_1881 = ap_const_lv7_67)) and (rd_reg_1896 = ap_const_lv5_1B)) or (not((op_code_reg_1881 = ap_const_lv7_23)) and (rd_reg_1896 = ap_const_lv5_1B) and (op_code_reg_1881 = ap_const_lv7_3))))) then 
                g_xreg_27 <= ap_phi_mux_result_2_phi_fu_367_p22;
            end if; 
        end if;
    end process;

    g_xreg_28_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (((rd_fu_520_p4 = ap_const_lv5_1C) and (op_code_fu_496_p1 = ap_const_lv7_6F)) or ((rd_fu_520_p4 = ap_const_lv5_1C) and (op_code_fu_496_p1 = ap_const_lv7_67))))) then 
                g_xreg_28 <= grp_fu_430_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and ((not((op_code_reg_1881 = ap_const_lv7_63)) and not((op_code_reg_1881 = ap_const_lv7_23)) and not((op_code_reg_1881 = ap_const_lv7_6F)) and not((op_code_reg_1881 = ap_const_lv7_67)) and (rd_reg_1896 = ap_const_lv5_1C)) or (not((op_code_reg_1881 = ap_const_lv7_23)) and (rd_reg_1896 = ap_const_lv5_1C) and (op_code_reg_1881 = ap_const_lv7_3))))) then 
                g_xreg_28 <= ap_phi_mux_result_2_phi_fu_367_p22;
            end if; 
        end if;
    end process;

    g_xreg_29_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (((rd_fu_520_p4 = ap_const_lv5_1D) and (op_code_fu_496_p1 = ap_const_lv7_6F)) or ((rd_fu_520_p4 = ap_const_lv5_1D) and (op_code_fu_496_p1 = ap_const_lv7_67))))) then 
                g_xreg_29 <= grp_fu_430_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and ((not((op_code_reg_1881 = ap_const_lv7_63)) and not((op_code_reg_1881 = ap_const_lv7_23)) and not((op_code_reg_1881 = ap_const_lv7_6F)) and not((op_code_reg_1881 = ap_const_lv7_67)) and (rd_reg_1896 = ap_const_lv5_1D)) or (not((op_code_reg_1881 = ap_const_lv7_23)) and (rd_reg_1896 = ap_const_lv5_1D) and (op_code_reg_1881 = ap_const_lv7_3))))) then 
                g_xreg_29 <= ap_phi_mux_result_2_phi_fu_367_p22;
            end if; 
        end if;
    end process;

    g_xreg_3_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (((rd_fu_520_p4 = ap_const_lv5_3) and (op_code_fu_496_p1 = ap_const_lv7_6F)) or ((rd_fu_520_p4 = ap_const_lv5_3) and (op_code_fu_496_p1 = ap_const_lv7_67))))) then 
                g_xreg_3 <= grp_fu_430_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and ((not((op_code_reg_1881 = ap_const_lv7_63)) and not((op_code_reg_1881 = ap_const_lv7_23)) and not((op_code_reg_1881 = ap_const_lv7_6F)) and not((op_code_reg_1881 = ap_const_lv7_67)) and (rd_reg_1896 = ap_const_lv5_3)) or (not((op_code_reg_1881 = ap_const_lv7_23)) and (rd_reg_1896 = ap_const_lv5_3) and (op_code_reg_1881 = ap_const_lv7_3))))) then 
                g_xreg_3 <= ap_phi_mux_result_2_phi_fu_367_p22;
            end if; 
        end if;
    end process;

    g_xreg_30_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (((rd_fu_520_p4 = ap_const_lv5_1E) and (op_code_fu_496_p1 = ap_const_lv7_6F)) or ((rd_fu_520_p4 = ap_const_lv5_1E) and (op_code_fu_496_p1 = ap_const_lv7_67))))) then 
                g_xreg_30 <= grp_fu_430_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and ((not((op_code_reg_1881 = ap_const_lv7_63)) and not((op_code_reg_1881 = ap_const_lv7_23)) and not((op_code_reg_1881 = ap_const_lv7_6F)) and not((op_code_reg_1881 = ap_const_lv7_67)) and (rd_reg_1896 = ap_const_lv5_1E)) or (not((op_code_reg_1881 = ap_const_lv7_23)) and (rd_reg_1896 = ap_const_lv5_1E) and (op_code_reg_1881 = ap_const_lv7_3))))) then 
                g_xreg_30 <= ap_phi_mux_result_2_phi_fu_367_p22;
            end if; 
        end if;
    end process;

    g_xreg_31_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (((rd_fu_520_p4 = ap_const_lv5_1F) and (op_code_fu_496_p1 = ap_const_lv7_6F)) or ((rd_fu_520_p4 = ap_const_lv5_1F) and (op_code_fu_496_p1 = ap_const_lv7_67))))) then 
                g_xreg_31 <= grp_fu_430_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and ((not((op_code_reg_1881 = ap_const_lv7_63)) and not((op_code_reg_1881 = ap_const_lv7_23)) and not((op_code_reg_1881 = ap_const_lv7_6F)) and not((op_code_reg_1881 = ap_const_lv7_67)) and (rd_reg_1896 = ap_const_lv5_1F)) or (not((op_code_reg_1881 = ap_const_lv7_23)) and (rd_reg_1896 = ap_const_lv5_1F) and (op_code_reg_1881 = ap_const_lv7_3))))) then 
                g_xreg_31 <= ap_phi_mux_result_2_phi_fu_367_p22;
            end if; 
        end if;
    end process;

    g_xreg_4_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (((rd_fu_520_p4 = ap_const_lv5_4) and (op_code_fu_496_p1 = ap_const_lv7_6F)) or ((rd_fu_520_p4 = ap_const_lv5_4) and (op_code_fu_496_p1 = ap_const_lv7_67))))) then 
                g_xreg_4 <= grp_fu_430_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and ((not((op_code_reg_1881 = ap_const_lv7_63)) and not((op_code_reg_1881 = ap_const_lv7_23)) and not((op_code_reg_1881 = ap_const_lv7_6F)) and not((op_code_reg_1881 = ap_const_lv7_67)) and (rd_reg_1896 = ap_const_lv5_4)) or (not((op_code_reg_1881 = ap_const_lv7_23)) and (rd_reg_1896 = ap_const_lv5_4) and (op_code_reg_1881 = ap_const_lv7_3))))) then 
                g_xreg_4 <= ap_phi_mux_result_2_phi_fu_367_p22;
            end if; 
        end if;
    end process;

    g_xreg_5_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (((rd_fu_520_p4 = ap_const_lv5_5) and (op_code_fu_496_p1 = ap_const_lv7_6F)) or ((rd_fu_520_p4 = ap_const_lv5_5) and (op_code_fu_496_p1 = ap_const_lv7_67))))) then 
                g_xreg_5 <= grp_fu_430_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and ((not((op_code_reg_1881 = ap_const_lv7_63)) and not((op_code_reg_1881 = ap_const_lv7_23)) and not((op_code_reg_1881 = ap_const_lv7_6F)) and not((op_code_reg_1881 = ap_const_lv7_67)) and (rd_reg_1896 = ap_const_lv5_5)) or (not((op_code_reg_1881 = ap_const_lv7_23)) and (rd_reg_1896 = ap_const_lv5_5) and (op_code_reg_1881 = ap_const_lv7_3))))) then 
                g_xreg_5 <= ap_phi_mux_result_2_phi_fu_367_p22;
            end if; 
        end if;
    end process;

    g_xreg_6_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (((rd_fu_520_p4 = ap_const_lv5_6) and (op_code_fu_496_p1 = ap_const_lv7_6F)) or ((rd_fu_520_p4 = ap_const_lv5_6) and (op_code_fu_496_p1 = ap_const_lv7_67))))) then 
                g_xreg_6 <= grp_fu_430_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and ((not((op_code_reg_1881 = ap_const_lv7_63)) and not((op_code_reg_1881 = ap_const_lv7_23)) and not((op_code_reg_1881 = ap_const_lv7_6F)) and not((op_code_reg_1881 = ap_const_lv7_67)) and (rd_reg_1896 = ap_const_lv5_6)) or (not((op_code_reg_1881 = ap_const_lv7_23)) and (rd_reg_1896 = ap_const_lv5_6) and (op_code_reg_1881 = ap_const_lv7_3))))) then 
                g_xreg_6 <= ap_phi_mux_result_2_phi_fu_367_p22;
            end if; 
        end if;
    end process;

    g_xreg_7_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (((rd_fu_520_p4 = ap_const_lv5_7) and (op_code_fu_496_p1 = ap_const_lv7_6F)) or ((rd_fu_520_p4 = ap_const_lv5_7) and (op_code_fu_496_p1 = ap_const_lv7_67))))) then 
                g_xreg_7 <= grp_fu_430_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and ((not((op_code_reg_1881 = ap_const_lv7_63)) and not((op_code_reg_1881 = ap_const_lv7_23)) and not((op_code_reg_1881 = ap_const_lv7_6F)) and not((op_code_reg_1881 = ap_const_lv7_67)) and (rd_reg_1896 = ap_const_lv5_7)) or (not((op_code_reg_1881 = ap_const_lv7_23)) and (rd_reg_1896 = ap_const_lv5_7) and (op_code_reg_1881 = ap_const_lv7_3))))) then 
                g_xreg_7 <= ap_phi_mux_result_2_phi_fu_367_p22;
            end if; 
        end if;
    end process;

    g_xreg_8_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (((rd_fu_520_p4 = ap_const_lv5_8) and (op_code_fu_496_p1 = ap_const_lv7_6F)) or ((rd_fu_520_p4 = ap_const_lv5_8) and (op_code_fu_496_p1 = ap_const_lv7_67))))) then 
                g_xreg_8 <= grp_fu_430_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and ((not((op_code_reg_1881 = ap_const_lv7_63)) and not((op_code_reg_1881 = ap_const_lv7_23)) and not((op_code_reg_1881 = ap_const_lv7_6F)) and not((op_code_reg_1881 = ap_const_lv7_67)) and (rd_reg_1896 = ap_const_lv5_8)) or (not((op_code_reg_1881 = ap_const_lv7_23)) and (rd_reg_1896 = ap_const_lv5_8) and (op_code_reg_1881 = ap_const_lv7_3))))) then 
                g_xreg_8 <= ap_phi_mux_result_2_phi_fu_367_p22;
            end if; 
        end if;
    end process;

    g_xreg_9_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (((rd_fu_520_p4 = ap_const_lv5_9) and (op_code_fu_496_p1 = ap_const_lv7_6F)) or ((rd_fu_520_p4 = ap_const_lv5_9) and (op_code_fu_496_p1 = ap_const_lv7_67))))) then 
                g_xreg_9 <= grp_fu_430_p2;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and ((not((op_code_reg_1881 = ap_const_lv7_63)) and not((op_code_reg_1881 = ap_const_lv7_23)) and not((op_code_reg_1881 = ap_const_lv7_6F)) and not((op_code_reg_1881 = ap_const_lv7_67)) and (rd_reg_1896 = ap_const_lv5_9)) or (not((op_code_reg_1881 = ap_const_lv7_23)) and (rd_reg_1896 = ap_const_lv5_9) and (op_code_reg_1881 = ap_const_lv7_3))))) then 
                g_xreg_9 <= ap_phi_mux_result_2_phi_fu_367_p22;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (funct3_fu_500_p4 = ap_const_lv3_1) and (op_code_fu_496_p1 = ap_const_lv7_63))) then
                branch_1_reg_1939 <= grp_fu_426_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (funct3_fu_500_p4 = ap_const_lv3_4) and (op_code_fu_496_p1 = ap_const_lv7_63))) then
                branch_2_reg_1935 <= grp_fu_422_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (funct3_fu_500_p4 = ap_const_lv3_5) and (op_code_fu_496_p1 = ap_const_lv7_63))) then
                branch_3_reg_1931 <= grp_fu_422_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (funct3_fu_500_p4 = ap_const_lv3_6) and (op_code_fu_496_p1 = ap_const_lv7_63))) then
                branch_4_reg_1927 <= grp_fu_418_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (funct3_fu_500_p4 = ap_const_lv3_7) and (op_code_fu_496_p1 = ap_const_lv7_63))) then
                branch_5_reg_1923 <= grp_fu_418_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (funct3_fu_500_p4 = ap_const_lv3_0) and (op_code_fu_496_p1 = ap_const_lv7_63))) then
                branch_reg_1943 <= grp_fu_426_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (op_code_fu_496_p1 = ap_const_lv7_23))) then
                data_memory_addr_reg_1965 <= zext_ln183_fu_1381_p1(16 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                funct3_reg_1886 <= instr_memory_q0(14 downto 12);
                funct7_reg_1891 <= instr_memory_q0(31 downto 25);
                imm_8_reg_1916 <= imm_8_fu_1080_p3;
                op_code_reg_1881 <= op_code_fu_496_p1;
                rd_reg_1896 <= instr_memory_q0(11 downto 7);
                result_19_reg_1907 <= result_19_fu_747_p34;
                source1_reg_1900 <= source1_fu_674_p34;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln26_reg_1872 <= icmp_ln26_fu_469_p2;
                pc_reg_1859 <= ap_sig_allocacmp_pc;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (op_code_fu_496_p1 = ap_const_lv7_3))) then
                offset_1_reg_1950 <= offset_1_fu_1326_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_block_pp0_stage1_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to1, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0_1to1 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_reset_idle_pp0 = ap_const_logic_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_reset_idle_pp0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    add_ln120_fu_1296_p2 <= std_logic_vector(unsigned(trunc_ln120_1_fu_1284_p1) + unsigned(trunc_ln120_fu_1280_p1));
    add_ln176_fu_1351_p2 <= std_logic_vector(unsigned(trunc_ln176_1_fu_1347_p1) + unsigned(trunc_ln176_fu_1343_p1));
    add_ln388_fu_1392_p2 <= std_logic_vector(unsigned(ap_phi_mux_empty_17_phi_fu_320_p14) + unsigned(imm_8_reg_1916));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_136_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
                ap_condition_136 <= ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_done_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to1_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_0)) then 
            ap_idle_pp0_1to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_empty_17_phi_fu_320_p14_assign_proc : process(op_code_reg_1881, ap_phi_reg_pp0_iter1_empty_reg_308, ap_phi_reg_pp0_iter1_empty_17_reg_317)
    begin
        if (((op_code_reg_1881 = ap_const_lv7_6F) or (op_code_reg_1881 = ap_const_lv7_67))) then 
            ap_phi_mux_empty_17_phi_fu_320_p14 <= ap_phi_reg_pp0_iter1_empty_reg_308;
        else 
            ap_phi_mux_empty_17_phi_fu_320_p14 <= ap_phi_reg_pp0_iter1_empty_17_reg_317;
        end if; 
    end process;


    ap_phi_mux_p_0_0_03061_phi_fu_340_p18_assign_proc : process(data_memory_q0, op_code_reg_1881, funct3_reg_1886, ap_phi_reg_pp0_iter1_p_0_0_03061_reg_337, result_9_fu_1650_p5, offset_fu_1570_p2, result_13_fu_1595_p5, result_14_fu_1579_p5, result_10_fu_1637_p5, result_11_fu_1624_p5, result_12_fu_1611_p5)
    begin
        if (((offset_fu_1570_p2 = ap_const_lv2_2) and (funct3_reg_1886 = ap_const_lv3_0) and (op_code_reg_1881 = ap_const_lv7_23))) then 
            ap_phi_mux_p_0_0_03061_phi_fu_340_p18 <= result_12_fu_1611_p5;
        elsif (((offset_fu_1570_p2 = ap_const_lv2_1) and (funct3_reg_1886 = ap_const_lv3_0) and (op_code_reg_1881 = ap_const_lv7_23))) then 
            ap_phi_mux_p_0_0_03061_phi_fu_340_p18 <= result_11_fu_1624_p5;
        elsif (((offset_fu_1570_p2 = ap_const_lv2_0) and (funct3_reg_1886 = ap_const_lv3_0) and (op_code_reg_1881 = ap_const_lv7_23))) then 
            ap_phi_mux_p_0_0_03061_phi_fu_340_p18 <= result_10_fu_1637_p5;
        elsif (((offset_fu_1570_p2 = ap_const_lv2_2) and (funct3_reg_1886 = ap_const_lv3_1) and (op_code_reg_1881 = ap_const_lv7_23))) then 
            ap_phi_mux_p_0_0_03061_phi_fu_340_p18 <= result_14_fu_1579_p5;
        elsif (((offset_fu_1570_p2 = ap_const_lv2_0) and (funct3_reg_1886 = ap_const_lv3_1) and (op_code_reg_1881 = ap_const_lv7_23))) then 
            ap_phi_mux_p_0_0_03061_phi_fu_340_p18 <= result_13_fu_1595_p5;
        elsif (((offset_fu_1570_p2 = ap_const_lv2_3) and (funct3_reg_1886 = ap_const_lv3_0) and (op_code_reg_1881 = ap_const_lv7_23))) then 
            ap_phi_mux_p_0_0_03061_phi_fu_340_p18 <= result_9_fu_1650_p5;
        elsif (((not((offset_fu_1570_p2 = ap_const_lv2_2)) and not((offset_fu_1570_p2 = ap_const_lv2_0)) and (funct3_reg_1886 = ap_const_lv3_1) and (op_code_reg_1881 = ap_const_lv7_23)) or (not((funct3_reg_1886 = ap_const_lv3_2)) and not((funct3_reg_1886 = ap_const_lv3_1)) and not((funct3_reg_1886 = ap_const_lv3_0)) and (op_code_reg_1881 = ap_const_lv7_23)))) then 
            ap_phi_mux_p_0_0_03061_phi_fu_340_p18 <= data_memory_q0;
        else 
            ap_phi_mux_p_0_0_03061_phi_fu_340_p18 <= ap_phi_reg_pp0_iter1_p_0_0_03061_reg_337;
        end if; 
    end process;


    ap_phi_mux_result_2_phi_fu_367_p22_assign_proc : process(data_memory_q0, op_code_reg_1881, funct3_reg_1886, offset_1_reg_1950, result_execute_arithm_fu_404_ap_return, ap_phi_reg_pp0_iter1_result_2_reg_363, zext_ln156_fu_1476_p1, sext_ln135_fu_1559_p1, sext_ln142_fu_1490_p1, sext_ln144_fu_1481_p1, zext_ln163_fu_1407_p1, zext_ln165_fu_1398_p1)
    begin
        if (((offset_1_reg_1950 = ap_const_lv2_2) and (funct3_reg_1886 = ap_const_lv3_5) and (op_code_reg_1881 = ap_const_lv7_3))) then 
            ap_phi_mux_result_2_phi_fu_367_p22 <= zext_ln165_fu_1398_p1;
        elsif (((offset_1_reg_1950 = ap_const_lv2_0) and (funct3_reg_1886 = ap_const_lv3_5) and (op_code_reg_1881 = ap_const_lv7_3))) then 
            ap_phi_mux_result_2_phi_fu_367_p22 <= zext_ln163_fu_1407_p1;
        elsif (((offset_1_reg_1950 = ap_const_lv2_2) and (funct3_reg_1886 = ap_const_lv3_1) and (op_code_reg_1881 = ap_const_lv7_3))) then 
            ap_phi_mux_result_2_phi_fu_367_p22 <= sext_ln144_fu_1481_p1;
        elsif (((offset_1_reg_1950 = ap_const_lv2_0) and (funct3_reg_1886 = ap_const_lv3_1) and (op_code_reg_1881 = ap_const_lv7_3))) then 
            ap_phi_mux_result_2_phi_fu_367_p22 <= sext_ln142_fu_1490_p1;
        elsif (((funct3_reg_1886 = ap_const_lv3_2) and (op_code_reg_1881 = ap_const_lv7_3))) then 
            ap_phi_mux_result_2_phi_fu_367_p22 <= data_memory_q0;
        elsif (((funct3_reg_1886 = ap_const_lv3_0) and (op_code_reg_1881 = ap_const_lv7_3))) then 
            ap_phi_mux_result_2_phi_fu_367_p22 <= sext_ln135_fu_1559_p1;
        elsif (((funct3_reg_1886 = ap_const_lv3_4) and (op_code_reg_1881 = ap_const_lv7_3))) then 
            ap_phi_mux_result_2_phi_fu_367_p22 <= zext_ln156_fu_1476_p1;
        elsif ((not((op_code_reg_1881 = ap_const_lv7_63)) and not((op_code_reg_1881 = ap_const_lv7_3)) and not((op_code_reg_1881 = ap_const_lv7_23)) and not((op_code_reg_1881 = ap_const_lv7_6F)) and not((op_code_reg_1881 = ap_const_lv7_67)))) then 
            ap_phi_mux_result_2_phi_fu_367_p22 <= result_execute_arithm_fu_404_ap_return;
        else 
            ap_phi_mux_result_2_phi_fu_367_p22 <= ap_phi_reg_pp0_iter1_result_2_reg_363;
        end if; 
    end process;


    ap_phi_mux_storemerge_phi_fu_398_p4_assign_proc : process(op_code_reg_1881, funct3_reg_1886, branch_5_reg_1923, branch_4_reg_1927, branch_3_reg_1931, branch_2_reg_1935, branch_1_reg_1939, branch_reg_1943, grp_fu_430_p2, ap_phi_reg_pp0_iter1_storemerge_reg_395, add_ln388_fu_1392_p2)
    begin
        if (((op_code_reg_1881 = ap_const_lv7_6F) or ((op_code_reg_1881 = ap_const_lv7_67) or (((((((branch_4_reg_1927 = ap_const_lv1_1) and (funct3_reg_1886 = ap_const_lv3_6) and (op_code_reg_1881 = ap_const_lv7_63)) or ((branch_5_reg_1923 = ap_const_lv1_0) and (funct3_reg_1886 = ap_const_lv3_7) and (op_code_reg_1881 = ap_const_lv7_63))) or ((branch_3_reg_1931 = ap_const_lv1_0) and (funct3_reg_1886 = ap_const_lv3_5) and (op_code_reg_1881 = ap_const_lv7_63))) or ((branch_2_reg_1935 = ap_const_lv1_1) and (funct3_reg_1886 = ap_const_lv3_4) and (op_code_reg_1881 = ap_const_lv7_63))) or (not((funct3_reg_1886 = ap_const_lv3_6)) and not((funct3_reg_1886 = ap_const_lv3_7)) and not((funct3_reg_1886 = ap_const_lv3_3)) and not((funct3_reg_1886 = ap_const_lv3_5)) and not((funct3_reg_1886 = ap_const_lv3_4)) and not((funct3_reg_1886 = ap_const_lv3_2)) and not((funct3_reg_1886 = ap_const_lv3_1)) and (branch_reg_1943 = ap_const_lv1_1) and (op_code_reg_1881 = ap_const_lv7_63))) or ((branch_1_reg_1939 = ap_const_lv1_0) and (funct3_reg_1886 
    = ap_const_lv3_1) and (op_code_reg_1881 = ap_const_lv7_63)))))) then 
            ap_phi_mux_storemerge_phi_fu_398_p4 <= add_ln388_fu_1392_p2;
        elsif (((((((((((funct3_reg_1886 = ap_const_lv3_3) and (op_code_reg_1881 = ap_const_lv7_63)) or ((funct3_reg_1886 = ap_const_lv3_2) and (op_code_reg_1881 = ap_const_lv7_63))) or ((branch_5_reg_1923 = ap_const_lv1_1) and (funct3_reg_1886 = ap_const_lv3_7) and (op_code_reg_1881 = ap_const_lv7_63))) or ((branch_4_reg_1927 = ap_const_lv1_0) and (funct3_reg_1886 = ap_const_lv3_6) and (op_code_reg_1881 = ap_const_lv7_63))) or ((branch_3_reg_1931 = ap_const_lv1_1) and (funct3_reg_1886 = ap_const_lv3_5) and (op_code_reg_1881 = ap_const_lv7_63))) or ((branch_2_reg_1935 = ap_const_lv1_0) and (funct3_reg_1886 = ap_const_lv3_4) and (op_code_reg_1881 = ap_const_lv7_63))) or (not((funct3_reg_1886 = ap_const_lv3_6)) and not((funct3_reg_1886 = ap_const_lv3_7)) and not((funct3_reg_1886 = ap_const_lv3_5)) and not((funct3_reg_1886 = ap_const_lv3_4)) and not((funct3_reg_1886 = ap_const_lv3_1)) and (branch_reg_1943 = ap_const_lv1_0) and (op_code_reg_1881 = ap_const_lv7_63))) or ((branch_1_reg_1939 = ap_const_lv1_1) and (funct3_reg_1886 = 
    ap_const_lv3_1) and (op_code_reg_1881 = ap_const_lv7_63))) or (not((op_code_reg_1881 = ap_const_lv7_63)) and not((op_code_reg_1881 = ap_const_lv7_6F)) and not((op_code_reg_1881 = ap_const_lv7_67))))) then 
            ap_phi_mux_storemerge_phi_fu_398_p4 <= grp_fu_430_p2;
        else 
            ap_phi_mux_storemerge_phi_fu_398_p4 <= ap_phi_reg_pp0_iter1_storemerge_reg_395;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_empty_17_reg_317 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_empty_reg_308 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_p_0_0_03061_reg_337 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter1_result_2_reg_363 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter1_storemerge_reg_395 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_ready_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= g_error;

    ap_sig_allocacmp_pc_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, g_pc, ap_phi_mux_storemerge_phi_fu_398_p4, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_pc <= ap_phi_mux_storemerge_phi_fu_398_p4;
        else 
            ap_sig_allocacmp_pc <= g_pc;
        end if; 
    end process;


    data_memory_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, op_code_fu_496_p1, data_memory_addr_reg_1965, ap_block_pp0_stage0, zext_ln127_fu_1332_p1, ap_block_pp0_stage1, zext_ln183_fu_1381_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            data_memory_address0 <= data_memory_addr_reg_1965;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (op_code_fu_496_p1 = ap_const_lv7_23))) then 
            data_memory_address0 <= zext_ln183_fu_1381_p1(16 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (op_code_fu_496_p1 = ap_const_lv7_3))) then 
            data_memory_address0 <= zext_ln127_fu_1332_p1(16 - 1 downto 0);
        else 
            data_memory_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    data_memory_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, op_code_fu_496_p1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (op_code_fu_496_p1 = ap_const_lv7_23)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (op_code_fu_496_p1 = ap_const_lv7_3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            data_memory_ce0 <= ap_const_logic_1;
        else 
            data_memory_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    data_memory_d0 <= ap_phi_mux_p_0_0_03061_phi_fu_340_p18;

    data_memory_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, op_code_reg_1881)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (op_code_reg_1881 = ap_const_lv7_23))) then 
            data_memory_we0 <= ap_const_logic_1;
        else 
            data_memory_we0 <= ap_const_logic_0;
        end if; 
    end process;

    funct3_fu_500_p4 <= instr_memory_q0(14 downto 12);
    grp_fu_418_p2 <= "1" when (unsigned(source1_fu_674_p34) < unsigned(result_19_fu_747_p34)) else "0";
    grp_fu_422_p2 <= "1" when (signed(source1_fu_674_p34) < signed(result_19_fu_747_p34)) else "0";
    grp_fu_426_p2 <= "1" when (source1_fu_674_p34 = result_19_fu_747_p34) else "0";
    grp_fu_430_p2 <= std_logic_vector(unsigned(pc_reg_1859) + unsigned(ap_const_lv32_4));
    grp_fu_436_p4 <= data_memory_q0(31 downto 16);
    grp_fu_446_p2 <= "1" when (offset_1_reg_1950 = ap_const_lv2_0) else "0";
    grp_fu_451_p2 <= "1" when (offset_1_reg_1950 = ap_const_lv2_1) else "0";
    grp_fu_456_p2 <= "1" when (offset_1_reg_1950 = ap_const_lv2_2) else "0";
    icmp_ln26_fu_469_p2 <= "1" when (trunc_ln25_fu_465_p1 = ap_const_lv2_0) else "0";
    icmp_ln46_1_fu_994_p2 <= "1" when (op_code_fu_496_p1 = ap_const_lv7_23) else "0";
    icmp_ln46_2_fu_1012_p2 <= "1" when (op_code_fu_496_p1 = ap_const_lv7_37) else "0";
    icmp_ln46_3_fu_1018_p2 <= "1" when (op_code_fu_496_p1 = ap_const_lv7_17) else "0";
    icmp_ln46_4_fu_1038_p2 <= "1" when (op_code_fu_496_p1 = ap_const_lv7_3) else "0";
    icmp_ln46_5_fu_1044_p2 <= "1" when (op_code_fu_496_p1 = ap_const_lv7_13) else "0";
    icmp_ln46_6_fu_1050_p2 <= "1" when (op_code_fu_496_p1 = ap_const_lv7_67) else "0";
    icmp_ln46_7_fu_1056_p2 <= "1" when (op_code_fu_496_p1 = ap_const_lv7_73) else "0";
    icmp_ln46_fu_980_p2 <= "1" when (op_code_fu_496_p1 = ap_const_lv7_63) else "0";
    imm_1_fu_854_p3 <= (tmp_1_fu_844_p4 & tmp_s_fu_834_p4);
    imm_2_fu_902_p6 <= ((((tmp_5_fu_894_p3 & tmp_4_fu_886_p3) & tmp_3_fu_876_p4) & tmp_2_fu_866_p4) & ap_const_lv1_0);
    imm_3_fu_930_p3 <= (tmp_fu_920_p4 & ap_const_lv12_0);
    imm_4_fu_966_p6 <= ((((tmp_5_fu_894_p3 & tmp_8_fu_956_p4) & tmp_7_fu_948_p3) & tmp_6_fu_938_p4) & ap_const_lv1_0);
    imm_5_fu_986_p3 <= 
        sext_ln402_1_fu_916_p1 when (icmp_ln46_fu_980_p2(0) = '1') else 
        imm_4_fu_966_p6;
    imm_6_fu_1000_p3 <= 
        sext_ln402_fu_862_p1 when (icmp_ln46_1_fu_994_p2(0) = '1') else 
        imm_5_fu_986_p3;
    imm_7_fu_1030_p3 <= 
        imm_3_fu_930_p3 when (or_ln46_fu_1024_p2(0) = '1') else 
        sext_ln402_2_fu_1008_p1;
    imm_8_fu_1080_p3 <= 
        sext_ln52_fu_830_p1 when (or_ln46_3_fu_1074_p2(0) = '1') else 
        imm_7_fu_1030_p3;
    imm_fu_820_p4 <= instr_memory_q0(31 downto 20);
    instr_memory_address0 <= zext_ln29_fu_485_p1(16 - 1 downto 0);

    instr_memory_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            instr_memory_ce0 <= ap_const_logic_1;
        else 
            instr_memory_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    lshr_ln_fu_475_p4 <= ap_sig_allocacmp_pc(17 downto 2);
    mem_pos_fu_1302_p4 <= add_ln120_fu_1296_p2(17 downto 2);
    offset_1_fu_1326_p2 <= std_logic_vector(unsigned(trunc_ln120_3_fu_1292_p1) + unsigned(trunc_ln120_2_fu_1288_p1));
    offset_fu_1570_p2 <= std_logic_vector(unsigned(trunc_ln176_3_fu_1567_p1) + unsigned(trunc_ln176_2_fu_1564_p1));
    op_code_fu_496_p1 <= instr_memory_q0(7 - 1 downto 0);
    or_ln130_fu_1537_p2 <= (grp_fu_456_p2 or grp_fu_451_p2);
    or_ln151_fu_1454_p2 <= (grp_fu_456_p2 or grp_fu_451_p2);
    or_ln46_1_fu_1062_p2 <= (icmp_ln46_5_fu_1044_p2 or icmp_ln46_4_fu_1038_p2);
    or_ln46_2_fu_1068_p2 <= (icmp_ln46_7_fu_1056_p2 or icmp_ln46_6_fu_1050_p2);
    or_ln46_3_fu_1074_p2 <= (or_ln46_2_fu_1068_p2 or or_ln46_1_fu_1062_p2);
    or_ln46_fu_1024_p2 <= (icmp_ln46_3_fu_1018_p2 or icmp_ln46_2_fu_1012_p2);
    rd_fu_520_p4 <= instr_memory_q0(11 downto 7);
    result_10_fu_1637_p5 <= (data_memory_q0(31 downto 8) & trunc_ln187_fu_1608_p1);
    result_11_fu_1624_p5 <= (data_memory_q0(31 downto 16) & trunc_ln187_fu_1608_p1 & data_memory_q0(7 downto 0));
    result_12_fu_1611_p5 <= (data_memory_q0(31 downto 24) & trunc_ln187_fu_1608_p1 & data_memory_q0(15 downto 0));
    result_13_fu_1595_p5 <= (data_memory_q0(31 downto 16) & trunc_ln198_fu_1592_p1);
    result_14_fu_1579_p5 <= (trunc_ln200_fu_1576_p1 & data_memory_q0(15 downto 0));
    result_15_fu_1486_p1 <= data_memory_q0(16 - 1 downto 0);
    result_17_fu_1403_p1 <= data_memory_q0(16 - 1 downto 0);
    result_19_fu_747_p33 <= instr_memory_q0(24 downto 20);
    result_7_fu_1551_p3 <= 
        select_ln130_fu_1529_p3 when (or_ln130_fu_1537_p2(0) = '1') else 
        select_ln130_1_fu_1543_p3;
    result_8_fu_1468_p3 <= 
        select_ln151_fu_1446_p3 when (or_ln151_fu_1454_p2(0) = '1') else 
        select_ln151_1_fu_1460_p3;
    result_9_fu_1650_p5 <= (trunc_ln187_fu_1608_p1 & data_memory_q0(23 downto 0));
    select_ln130_1_fu_1543_p3 <= 
        trunc_ln131_fu_1505_p1 when (grp_fu_446_p2(0) = '1') else 
        tmp_11_fu_1495_p4;
    select_ln130_fu_1529_p3 <= 
        tmp_13_fu_1519_p4 when (grp_fu_456_p2(0) = '1') else 
        tmp_12_fu_1509_p4;
    select_ln151_1_fu_1460_p3 <= 
        trunc_ln152_fu_1422_p1 when (grp_fu_446_p2(0) = '1') else 
        tmp_14_fu_1412_p4;
    select_ln151_fu_1446_p3 <= 
        tmp_16_fu_1436_p4 when (grp_fu_456_p2(0) = '1') else 
        tmp_15_fu_1426_p4;
        sext_ln135_fu_1559_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(result_7_fu_1551_p3),32));

        sext_ln142_fu_1490_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(result_15_fu_1486_p1),32));

        sext_ln144_fu_1481_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_436_p4),32));

        sext_ln402_1_fu_916_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(imm_2_fu_902_p6),21));

        sext_ln402_2_fu_1008_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(imm_6_fu_1000_p3),32));

        sext_ln402_fu_862_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(imm_1_fu_854_p3),21));

        sext_ln52_fu_830_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(imm_fu_820_p4),32));

    source1_fu_674_p33 <= instr_memory_q0(19 downto 15);
    tmp_10_fu_1312_p3 <= add_ln120_fu_1296_p2(28 downto 28);
    tmp_11_fu_1495_p4 <= data_memory_q0(31 downto 24);
    tmp_12_fu_1509_p4 <= data_memory_q0(15 downto 8);
    tmp_13_fu_1519_p4 <= data_memory_q0(23 downto 16);
    tmp_14_fu_1412_p4 <= data_memory_q0(31 downto 24);
    tmp_15_fu_1426_p4 <= data_memory_q0(15 downto 8);
    tmp_16_fu_1436_p4 <= data_memory_q0(23 downto 16);
    tmp_1_fu_844_p4 <= instr_memory_q0(31 downto 25);
    tmp_2_fu_866_p4 <= instr_memory_q0(11 downto 8);
    tmp_3_fu_876_p4 <= instr_memory_q0(30 downto 25);
    tmp_4_fu_886_p3 <= instr_memory_q0(7 downto 7);
    tmp_5_fu_894_p3 <= instr_memory_q0(31 downto 31);
    tmp_6_fu_938_p4 <= instr_memory_q0(30 downto 21);
    tmp_7_fu_948_p3 <= instr_memory_q0(20 downto 20);
    tmp_8_fu_956_p4 <= instr_memory_q0(19 downto 12);
    tmp_9_fu_1367_p3 <= add_ln176_fu_1351_p2(28 downto 28);
    tmp_fu_920_p4 <= instr_memory_q0(31 downto 12);
    tmp_s_fu_834_p4 <= instr_memory_q0(11 downto 7);
    trunc_ln120_1_fu_1284_p1 <= imm_8_fu_1080_p3(29 - 1 downto 0);
    trunc_ln120_2_fu_1288_p1 <= source1_fu_674_p34(2 - 1 downto 0);
    trunc_ln120_3_fu_1292_p1 <= imm_8_fu_1080_p3(2 - 1 downto 0);
    trunc_ln120_fu_1280_p1 <= source1_fu_674_p34(29 - 1 downto 0);
    trunc_ln131_fu_1505_p1 <= data_memory_q0(8 - 1 downto 0);
    trunc_ln152_fu_1422_p1 <= data_memory_q0(8 - 1 downto 0);
    trunc_ln176_1_fu_1347_p1 <= imm_8_fu_1080_p3(29 - 1 downto 0);
    trunc_ln176_2_fu_1564_p1 <= source1_reg_1900(2 - 1 downto 0);
    trunc_ln176_3_fu_1567_p1 <= imm_8_reg_1916(2 - 1 downto 0);
    trunc_ln176_fu_1343_p1 <= source1_fu_674_p34(29 - 1 downto 0);
    trunc_ln187_fu_1608_p1 <= result_19_reg_1907(8 - 1 downto 0);
    trunc_ln198_fu_1592_p1 <= result_19_reg_1907(16 - 1 downto 0);
    trunc_ln200_fu_1576_p1 <= result_19_reg_1907(16 - 1 downto 0);
    trunc_ln25_fu_465_p1 <= ap_sig_allocacmp_pc(2 - 1 downto 0);
    write_addr_fu_1357_p4 <= add_ln176_fu_1351_p2(17 downto 2);
    zext_ln127_fu_1332_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mem_pos_fu_1302_p4),64));
    zext_ln156_fu_1476_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(result_8_fu_1468_p3),32));
    zext_ln163_fu_1407_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(result_17_fu_1403_p1),32));
    zext_ln165_fu_1398_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_436_p4),32));
    zext_ln183_fu_1381_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(write_addr_fu_1357_p4),64));
    zext_ln29_fu_485_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_fu_475_p4),64));
end behav;
