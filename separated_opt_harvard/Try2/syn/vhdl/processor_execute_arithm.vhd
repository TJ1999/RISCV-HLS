-- ==============================================================
-- Generated by Vitis HLS v2023.1.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity processor_execute_arithm is
port (
    ap_ready : OUT STD_LOGIC;
    op_code_val : IN STD_LOGIC_VECTOR (6 downto 0);
    funct3_val : IN STD_LOGIC_VECTOR (2 downto 0);
    funct7_val : IN STD_LOGIC_VECTOR (6 downto 0);
    source1_val : IN STD_LOGIC_VECTOR (31 downto 0);
    source2_val : IN STD_LOGIC_VECTOR (31 downto 0);
    imm_val : IN STD_LOGIC_VECTOR (31 downto 0);
    pc_val : IN STD_LOGIC_VECTOR (31 downto 0);
    g_error : OUT STD_LOGIC_VECTOR (0 downto 0);
    g_error_ap_vld : OUT STD_LOGIC;
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of processor_execute_arithm is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv7_17 : STD_LOGIC_VECTOR (6 downto 0) := "0010111";
    constant ap_const_lv7_37 : STD_LOGIC_VECTOR (6 downto 0) := "0110111";
    constant ap_const_lv7_33 : STD_LOGIC_VECTOR (6 downto 0) := "0110011";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv7_13 : STD_LOGIC_VECTOR (6 downto 0) := "0010011";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv7_20 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv7_73 : STD_LOGIC_VECTOR (6 downto 0) := "1110011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv7_F : STD_LOGIC_VECTOR (6 downto 0) := "0001111";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";

attribute shreg_extract : string;
    signal add_ln220_fu_464_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_phi_ln377_phi_fu_105_p68 : STD_LOGIC_VECTOR (31 downto 0);
    signal op_code_val_read_read_fu_96_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal and_ln351_fu_350_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal funct3_val_read_read_fu_90_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln251_fu_189_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ashr_ln263_fu_436_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal funct7_val_read_read_fu_84_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln260_fu_451_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln248_fu_378_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln245_fu_385_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln242_fu_392_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln235_fu_405_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln228_fu_416_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln225_fu_421_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln252_fu_371_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln295_fu_317_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln302_fu_298_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln313_fu_281_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln324_fu_262_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln344_fu_213_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln285_fu_324_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln281_fu_331_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ashr_ln335_fu_228_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln332_fu_243_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln365_fu_195_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln335_fu_220_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln335_fu_224_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln332_fu_235_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln332_fu_239_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln313_fu_275_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln302_fu_292_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln295_fu_309_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln295_fu_313_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln252_fu_363_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln252_fu_367_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln235_fu_399_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln228_fu_410_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln263_fu_428_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln263_fu_432_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln260_fu_443_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln260_fu_447_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_ce_reg : STD_LOGIC;


begin



    add_ln220_fu_464_p2 <= std_logic_vector(unsigned(pc_val) + unsigned(imm_val));
    add_ln225_fu_421_p2 <= std_logic_vector(unsigned(imm_val) + unsigned(source1_val));
    add_ln281_fu_331_p2 <= std_logic_vector(unsigned(source2_val) + unsigned(source1_val));
    and_ln248_fu_378_p2 <= (source1_val and imm_val);
    and_ln351_fu_350_p2 <= (source2_val and source1_val);

    ap_phi_mux_phi_ln377_phi_fu_105_p68_assign_proc : process(imm_val, add_ln220_fu_464_p2, op_code_val_read_read_fu_96_p2, and_ln351_fu_350_p2, funct3_val_read_read_fu_90_p2, icmp_ln251_fu_189_p2, ashr_ln263_fu_436_p2, funct7_val_read_read_fu_84_p2, lshr_ln260_fu_451_p2, and_ln248_fu_378_p2, or_ln245_fu_385_p2, xor_ln242_fu_392_p2, zext_ln235_fu_405_p1, zext_ln228_fu_416_p1, add_ln225_fu_421_p2, shl_ln252_fu_371_p2, shl_ln295_fu_317_p2, zext_ln302_fu_298_p1, zext_ln313_fu_281_p1, xor_ln324_fu_262_p2, or_ln344_fu_213_p2, sub_ln285_fu_324_p2, add_ln281_fu_331_p2, ashr_ln335_fu_228_p2, lshr_ln332_fu_243_p2)
    begin
        if (((funct7_val_read_read_fu_84_p2 = ap_const_lv7_0) and (funct3_val_read_read_fu_90_p2 = ap_const_lv3_5) and (op_code_val_read_read_fu_96_p2 = ap_const_lv7_33))) then 
            ap_phi_mux_phi_ln377_phi_fu_105_p68 <= lshr_ln332_fu_243_p2;
        elsif (((funct7_val_read_read_fu_84_p2 = ap_const_lv7_20) and (funct3_val_read_read_fu_90_p2 = ap_const_lv3_5) and (op_code_val_read_read_fu_96_p2 = ap_const_lv7_33))) then 
            ap_phi_mux_phi_ln377_phi_fu_105_p68 <= ashr_ln335_fu_228_p2;
        elsif (((funct7_val_read_read_fu_84_p2 = ap_const_lv7_0) and (funct3_val_read_read_fu_90_p2 = ap_const_lv3_0) and (op_code_val_read_read_fu_96_p2 = ap_const_lv7_33))) then 
            ap_phi_mux_phi_ln377_phi_fu_105_p68 <= add_ln281_fu_331_p2;
        elsif (((funct7_val_read_read_fu_84_p2 = ap_const_lv7_20) and (funct3_val_read_read_fu_90_p2 = ap_const_lv3_0) and (op_code_val_read_read_fu_96_p2 = ap_const_lv7_33))) then 
            ap_phi_mux_phi_ln377_phi_fu_105_p68 <= sub_ln285_fu_324_p2;
        elsif (((icmp_ln251_fu_189_p2 = ap_const_lv1_1) and (funct3_val_read_read_fu_90_p2 = ap_const_lv3_6) and (op_code_val_read_read_fu_96_p2 = ap_const_lv7_33))) then 
            ap_phi_mux_phi_ln377_phi_fu_105_p68 <= or_ln344_fu_213_p2;
        elsif (((icmp_ln251_fu_189_p2 = ap_const_lv1_1) and (funct3_val_read_read_fu_90_p2 = ap_const_lv3_4) and (op_code_val_read_read_fu_96_p2 = ap_const_lv7_33))) then 
            ap_phi_mux_phi_ln377_phi_fu_105_p68 <= xor_ln324_fu_262_p2;
        elsif (((icmp_ln251_fu_189_p2 = ap_const_lv1_1) and (funct3_val_read_read_fu_90_p2 = ap_const_lv3_3) and (op_code_val_read_read_fu_96_p2 = ap_const_lv7_33))) then 
            ap_phi_mux_phi_ln377_phi_fu_105_p68 <= zext_ln313_fu_281_p1;
        elsif (((icmp_ln251_fu_189_p2 = ap_const_lv1_1) and (funct3_val_read_read_fu_90_p2 = ap_const_lv3_2) and (op_code_val_read_read_fu_96_p2 = ap_const_lv7_33))) then 
            ap_phi_mux_phi_ln377_phi_fu_105_p68 <= zext_ln302_fu_298_p1;
        elsif (((icmp_ln251_fu_189_p2 = ap_const_lv1_1) and (funct3_val_read_read_fu_90_p2 = ap_const_lv3_1) and (op_code_val_read_read_fu_96_p2 = ap_const_lv7_33))) then 
            ap_phi_mux_phi_ln377_phi_fu_105_p68 <= shl_ln295_fu_317_p2;
        elsif (((icmp_ln251_fu_189_p2 = ap_const_lv1_1) and (funct3_val_read_read_fu_90_p2 = ap_const_lv3_1) and (op_code_val_read_read_fu_96_p2 = ap_const_lv7_13))) then 
            ap_phi_mux_phi_ln377_phi_fu_105_p68 <= shl_ln252_fu_371_p2;
        elsif (((funct3_val_read_read_fu_90_p2 = ap_const_lv3_0) and (op_code_val_read_read_fu_96_p2 = ap_const_lv7_13))) then 
            ap_phi_mux_phi_ln377_phi_fu_105_p68 <= add_ln225_fu_421_p2;
        elsif (((funct3_val_read_read_fu_90_p2 = ap_const_lv3_2) and (op_code_val_read_read_fu_96_p2 = ap_const_lv7_13))) then 
            ap_phi_mux_phi_ln377_phi_fu_105_p68 <= zext_ln228_fu_416_p1;
        elsif (((funct3_val_read_read_fu_90_p2 = ap_const_lv3_3) and (op_code_val_read_read_fu_96_p2 = ap_const_lv7_13))) then 
            ap_phi_mux_phi_ln377_phi_fu_105_p68 <= zext_ln235_fu_405_p1;
        elsif (((funct3_val_read_read_fu_90_p2 = ap_const_lv3_4) and (op_code_val_read_read_fu_96_p2 = ap_const_lv7_13))) then 
            ap_phi_mux_phi_ln377_phi_fu_105_p68 <= xor_ln242_fu_392_p2;
        elsif (((funct3_val_read_read_fu_90_p2 = ap_const_lv3_6) and (op_code_val_read_read_fu_96_p2 = ap_const_lv7_13))) then 
            ap_phi_mux_phi_ln377_phi_fu_105_p68 <= or_ln245_fu_385_p2;
        elsif (((funct3_val_read_read_fu_90_p2 = ap_const_lv3_7) and (op_code_val_read_read_fu_96_p2 = ap_const_lv7_13))) then 
            ap_phi_mux_phi_ln377_phi_fu_105_p68 <= and_ln248_fu_378_p2;
        elsif (((funct7_val_read_read_fu_84_p2 = ap_const_lv7_0) and (funct3_val_read_read_fu_90_p2 = ap_const_lv3_5) and (op_code_val_read_read_fu_96_p2 = ap_const_lv7_13))) then 
            ap_phi_mux_phi_ln377_phi_fu_105_p68 <= lshr_ln260_fu_451_p2;
        elsif (((funct7_val_read_read_fu_84_p2 = ap_const_lv7_20) and (funct3_val_read_read_fu_90_p2 = ap_const_lv3_5) and (op_code_val_read_read_fu_96_p2 = ap_const_lv7_13))) then 
            ap_phi_mux_phi_ln377_phi_fu_105_p68 <= ashr_ln263_fu_436_p2;
        elsif (((icmp_ln251_fu_189_p2 = ap_const_lv1_1) and (funct3_val_read_read_fu_90_p2 = ap_const_lv3_7) and (op_code_val_read_read_fu_96_p2 = ap_const_lv7_33))) then 
            ap_phi_mux_phi_ln377_phi_fu_105_p68 <= and_ln351_fu_350_p2;
        elsif ((op_code_val_read_read_fu_96_p2 = ap_const_lv7_37)) then 
            ap_phi_mux_phi_ln377_phi_fu_105_p68 <= imm_val;
        elsif ((op_code_val_read_read_fu_96_p2 = ap_const_lv7_17)) then 
            ap_phi_mux_phi_ln377_phi_fu_105_p68 <= add_ln220_fu_464_p2;
        else 
            ap_phi_mux_phi_ln377_phi_fu_105_p68 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    ap_ready <= ap_const_logic_1;
    ap_return <= ap_phi_mux_phi_ln377_phi_fu_105_p68;
    ashr_ln263_fu_436_p2 <= std_logic_vector(shift_right(signed(source1_val),to_integer(unsigned('0' & zext_ln263_fu_432_p1(31-1 downto 0)))));
    ashr_ln335_fu_228_p2 <= std_logic_vector(shift_right(signed(source1_val),to_integer(unsigned('0' & zext_ln335_fu_224_p1(31-1 downto 0)))));
    funct3_val_read_read_fu_90_p2 <= funct3_val;
    funct7_val_read_read_fu_84_p2 <= funct7_val;
    g_error <= ap_const_lv1_1;

    g_error_ap_vld_assign_proc : process(op_code_val_read_read_fu_96_p2, funct3_val_read_read_fu_90_p2, icmp_ln251_fu_189_p2, funct7_val_read_read_fu_84_p2, icmp_ln365_fu_195_p2)
    begin
        if (((not((op_code_val_read_read_fu_96_p2 = ap_const_lv7_13)) and not((op_code_val_read_read_fu_96_p2 = ap_const_lv7_33)) and not((op_code_val_read_read_fu_96_p2 = ap_const_lv7_37)) and not((op_code_val_read_read_fu_96_p2 = ap_const_lv7_17)) and not((op_code_val_read_read_fu_96_p2 = ap_const_lv7_F)) and not((op_code_val_read_read_fu_96_p2 = ap_const_lv7_73))) or (not((funct7_val_read_read_fu_84_p2 = ap_const_lv7_0)) and not((funct7_val_read_read_fu_84_p2 = ap_const_lv7_20)) and (funct3_val_read_read_fu_90_p2 = ap_const_lv3_0) and (op_code_val_read_read_fu_96_p2 = ap_const_lv7_33)) or (not((funct7_val_read_read_fu_84_p2 = ap_const_lv7_0)) and not((funct7_val_read_read_fu_84_p2 = ap_const_lv7_20)) and (funct3_val_read_read_fu_90_p2 = ap_const_lv3_5) and (op_code_val_read_read_fu_96_p2 = ap_const_lv7_13)) or (not((funct7_val_read_read_fu_84_p2 = ap_const_lv7_0)) and not((funct7_val_read_read_fu_84_p2 = ap_const_lv7_20)) and (funct3_val_read_read_fu_90_p2 = ap_const_lv3_5) and (op_code_val_read_read_fu_96_p2 = ap_const_lv7_33)) 
    or ((icmp_ln251_fu_189_p2 = ap_const_lv1_0) and (funct3_val_read_read_fu_90_p2 = ap_const_lv3_1) and (op_code_val_read_read_fu_96_p2 = ap_const_lv7_13)) or ((icmp_ln251_fu_189_p2 = ap_const_lv1_0) and (funct3_val_read_read_fu_90_p2 = ap_const_lv3_1) and (op_code_val_read_read_fu_96_p2 = ap_const_lv7_33)) or ((icmp_ln251_fu_189_p2 = ap_const_lv1_0) and (funct3_val_read_read_fu_90_p2 = ap_const_lv3_2) and (op_code_val_read_read_fu_96_p2 = ap_const_lv7_33)) or ((icmp_ln251_fu_189_p2 = ap_const_lv1_0) and (funct3_val_read_read_fu_90_p2 = ap_const_lv3_3) and (op_code_val_read_read_fu_96_p2 = ap_const_lv7_33)) or ((icmp_ln251_fu_189_p2 = ap_const_lv1_0) and (funct3_val_read_read_fu_90_p2 = ap_const_lv3_4) and (op_code_val_read_read_fu_96_p2 = ap_const_lv7_33)) or ((icmp_ln251_fu_189_p2 = ap_const_lv1_0) and (funct3_val_read_read_fu_90_p2 = ap_const_lv3_6) and (op_code_val_read_read_fu_96_p2 = ap_const_lv7_33)) or ((icmp_ln251_fu_189_p2 = ap_const_lv1_0) and (funct3_val_read_read_fu_90_p2 = ap_const_lv3_7) and (op_code_val_read_read_fu_96_p2 
    = ap_const_lv7_33)) or ((op_code_val_read_read_fu_96_p2 = ap_const_lv7_73) and (icmp_ln365_fu_195_p2 = ap_const_lv1_0)))) then 
            g_error_ap_vld <= ap_const_logic_1;
        else 
            g_error_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln228_fu_410_p2 <= "1" when (signed(source1_val) < signed(imm_val)) else "0";
    icmp_ln235_fu_399_p2 <= "1" when (unsigned(source1_val) < unsigned(imm_val)) else "0";
    icmp_ln251_fu_189_p2 <= "1" when (funct7_val = ap_const_lv7_0) else "0";
    icmp_ln302_fu_292_p2 <= "1" when (signed(source1_val) < signed(source2_val)) else "0";
    icmp_ln313_fu_275_p2 <= "1" when (unsigned(source1_val) < unsigned(source2_val)) else "0";
    icmp_ln365_fu_195_p2 <= "1" when (imm_val = ap_const_lv32_0) else "0";
    lshr_ln260_fu_451_p2 <= std_logic_vector(shift_right(unsigned(source1_val),to_integer(unsigned('0' & zext_ln260_fu_447_p1(31-1 downto 0)))));
    lshr_ln332_fu_243_p2 <= std_logic_vector(shift_right(unsigned(source1_val),to_integer(unsigned('0' & zext_ln332_fu_239_p1(31-1 downto 0)))));
    op_code_val_read_read_fu_96_p2 <= op_code_val;
    or_ln245_fu_385_p2 <= (source1_val or imm_val);
    or_ln344_fu_213_p2 <= (source2_val or source1_val);
    shl_ln252_fu_371_p2 <= std_logic_vector(shift_left(unsigned(source1_val),to_integer(unsigned('0' & zext_ln252_fu_367_p1(31-1 downto 0)))));
    shl_ln295_fu_317_p2 <= std_logic_vector(shift_left(unsigned(source1_val),to_integer(unsigned('0' & zext_ln295_fu_313_p1(31-1 downto 0)))));
    sub_ln285_fu_324_p2 <= std_logic_vector(unsigned(source1_val) - unsigned(source2_val));
    trunc_ln252_fu_363_p1 <= imm_val(5 - 1 downto 0);
    trunc_ln260_fu_443_p1 <= imm_val(5 - 1 downto 0);
    trunc_ln263_fu_428_p1 <= imm_val(5 - 1 downto 0);
    trunc_ln295_fu_309_p1 <= source2_val(5 - 1 downto 0);
    trunc_ln332_fu_235_p1 <= source2_val(5 - 1 downto 0);
    trunc_ln335_fu_220_p1 <= source2_val(5 - 1 downto 0);
    xor_ln242_fu_392_p2 <= (source1_val xor imm_val);
    xor_ln324_fu_262_p2 <= (source2_val xor source1_val);
    zext_ln228_fu_416_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(icmp_ln228_fu_410_p2),32));
    zext_ln235_fu_405_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(icmp_ln235_fu_399_p2),32));
    zext_ln252_fu_367_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln252_fu_363_p1),32));
    zext_ln260_fu_447_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln260_fu_443_p1),32));
    zext_ln263_fu_432_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln263_fu_428_p1),32));
    zext_ln295_fu_313_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln295_fu_309_p1),32));
    zext_ln302_fu_298_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(icmp_ln302_fu_292_p2),32));
    zext_ln313_fu_281_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(icmp_ln313_fu_275_p2),32));
    zext_ln332_fu_239_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln332_fu_235_p1),32));
    zext_ln335_fu_224_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln335_fu_220_p1),32));
end behav;
