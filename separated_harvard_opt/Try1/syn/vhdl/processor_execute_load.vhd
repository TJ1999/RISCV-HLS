-- ==============================================================
-- Generated by Vitis HLS v2023.1.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity processor_execute_load is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    funct3_val : IN STD_LOGIC_VECTOR (2 downto 0);
    imm_val : IN STD_LOGIC_VECTOR (31 downto 0);
    data_memory_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_memory_ce0 : OUT STD_LOGIC;
    data_memory_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    source1_val : IN STD_LOGIC_VECTOR (31 downto 0);
    g_error : OUT STD_LOGIC_VECTOR (0 downto 0);
    g_error_ap_vld : OUT STD_LOGIC;
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of processor_execute_load is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv26_C7FF : STD_LOGIC_VECTOR (25 downto 0) := "00000000001100011111111111";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal funct3_val_read_read_fu_96_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal funct3_val_read_reg_631 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal select_ln129_fu_440_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln129_reg_635 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln130_fu_468_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln130_reg_639 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_g_error_flag_2_phi_fu_215_p36 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_g_error_flag_2_reg_211 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_g_error_flag_2_reg_211 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_phi_ln183_phi_fu_258_p36 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_phi_ln183_reg_254 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln175_1_fu_549_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln173_1_fu_558_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln168_1_fu_563_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln166_1_fu_568_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln164_1_fu_573_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln162_1_fu_582_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln154_fu_587_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln152_fu_596_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln147_fu_601_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln145_fu_606_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln143_fu_611_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln141_fu_620_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln175_fu_484_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln173_fu_489_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln168_fu_494_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln166_fu_499_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln164_fu_504_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln162_fu_509_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln158_fu_514_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln154_fu_519_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln152_fu_524_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln147_fu_529_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln145_fu_534_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln143_fu_539_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln141_fu_544_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_fu_342_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln128_fu_354_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln128_fu_358_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_17_fu_346_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_fu_342_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln128_3_fu_372_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln128_fu_350_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal sext_ln128_fu_354_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal add_ln128_3_fu_372_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln128_1_fu_362_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal trunc_ln128_fu_358_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal add_ln128_1_fu_388_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal add_ln128_fu_378_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal trunc_ln128_2_fu_384_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln129_fu_412_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_and_t_fu_418_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln128_2_fu_366_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_fu_404_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln129_1_fu_426_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_s_fu_432_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_1_fu_448_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal pos_fu_394_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal icmp_ln134_fu_462_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln130_fu_456_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal pos_1_fu_474_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_302_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln173_fu_554_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_312_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_322_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_332_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln162_fu_578_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln152_fu_592_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln141_fu_616_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_183 : BOOLEAN;
    signal ap_condition_176 : BOOLEAN;
    signal ap_condition_251 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_g_error_flag_2_reg_211_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_176)) then
                if ((ap_const_boolean_1 = ap_condition_183)) then 
                    ap_phi_reg_pp0_iter1_g_error_flag_2_reg_211 <= ap_const_lv1_1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_g_error_flag_2_reg_211 <= ap_phi_reg_pp0_iter0_g_error_flag_2_reg_211;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                funct3_val_read_reg_631 <= funct3_val;
                or_ln130_reg_639 <= or_ln130_fu_468_p2;
                select_ln129_reg_635 <= select_ln129_fu_440_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln128_1_fu_388_p2 <= std_logic_vector(unsigned(trunc_ln128_1_fu_362_p1) + unsigned(trunc_ln128_fu_358_p1));
    add_ln128_2_fu_366_p2 <= std_logic_vector(unsigned(empty_17_fu_346_p1) + unsigned(empty_fu_342_p1));
    add_ln128_3_fu_372_p1 <= imm_val;
    add_ln128_3_fu_372_p2 <= std_logic_vector(unsigned(source1_val) + unsigned(add_ln128_3_fu_372_p1));
    add_ln128_fu_378_p2 <= std_logic_vector(unsigned(zext_ln128_fu_350_p1) + unsigned(sext_ln128_fu_354_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_176_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_176 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_183_assign_proc : process(funct3_val_read_read_fu_96_p2)
    begin
                ap_condition_183 <= ((funct3_val_read_read_fu_96_p2 = ap_const_lv3_3) or ((funct3_val_read_read_fu_96_p2 = ap_const_lv3_6) or (funct3_val_read_read_fu_96_p2 = ap_const_lv3_7)));
    end process;


    ap_condition_251_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0)
    begin
                ap_condition_251 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_g_error_flag_2_phi_fu_215_p36_assign_proc : process(funct3_val_read_reg_631, select_ln129_reg_635, or_ln130_reg_639, ap_phi_reg_pp0_iter1_g_error_flag_2_reg_211)
    begin
        if (((funct3_val_read_reg_631 = ap_const_lv3_2) or (not((select_ln129_reg_635 = ap_const_lv3_3)) and not((select_ln129_reg_635 = ap_const_lv3_1)) and not((select_ln129_reg_635 = ap_const_lv3_2)) and not((select_ln129_reg_635 = ap_const_lv3_0)) and (funct3_val_read_reg_631 = ap_const_lv3_0)) or (not((select_ln129_reg_635 = ap_const_lv3_3)) and not((select_ln129_reg_635 = ap_const_lv3_1)) and not((select_ln129_reg_635 = ap_const_lv3_2)) and not((select_ln129_reg_635 = ap_const_lv3_0)) and (funct3_val_read_reg_631 = ap_const_lv3_4)) or ((select_ln129_reg_635 = ap_const_lv3_3) and (funct3_val_read_reg_631 = ap_const_lv3_0)) or ((select_ln129_reg_635 = ap_const_lv3_3) and (funct3_val_read_reg_631 = ap_const_lv3_4)) or ((select_ln129_reg_635 = ap_const_lv3_1) and (funct3_val_read_reg_631 = ap_const_lv3_0)) or ((select_ln129_reg_635 = ap_const_lv3_1) and (funct3_val_read_reg_631 = ap_const_lv3_4)) or (not((select_ln129_reg_635 = ap_const_lv3_2)) and not((select_ln129_reg_635 = ap_const_lv3_0)) and (funct3_val_read_reg_631 
    = ap_const_lv3_1)) or (not((select_ln129_reg_635 = ap_const_lv3_2)) and not((select_ln129_reg_635 = ap_const_lv3_0)) and (funct3_val_read_reg_631 = ap_const_lv3_5)) or ((select_ln129_reg_635 = ap_const_lv3_2) and (funct3_val_read_reg_631 = ap_const_lv3_0)) or ((select_ln129_reg_635 = ap_const_lv3_2) and (funct3_val_read_reg_631 = ap_const_lv3_1)) or ((select_ln129_reg_635 = ap_const_lv3_2) and (funct3_val_read_reg_631 = ap_const_lv3_4)) or ((select_ln129_reg_635 = ap_const_lv3_2) and (funct3_val_read_reg_631 = ap_const_lv3_5)) or ((select_ln129_reg_635 = ap_const_lv3_0) and (funct3_val_read_reg_631 = ap_const_lv3_0)) or ((select_ln129_reg_635 = ap_const_lv3_0) and (funct3_val_read_reg_631 = ap_const_lv3_1)) or ((select_ln129_reg_635 = ap_const_lv3_0) and (funct3_val_read_reg_631 = ap_const_lv3_4)) or ((select_ln129_reg_635 = ap_const_lv3_0) and (funct3_val_read_reg_631 = ap_const_lv3_5)))) then 
            ap_phi_mux_g_error_flag_2_phi_fu_215_p36 <= or_ln130_reg_639;
        else 
            ap_phi_mux_g_error_flag_2_phi_fu_215_p36 <= ap_phi_reg_pp0_iter1_g_error_flag_2_reg_211;
        end if; 
    end process;


    ap_phi_mux_phi_ln183_phi_fu_258_p36_assign_proc : process(data_memory_q0, funct3_val_read_reg_631, select_ln129_reg_635, ap_phi_reg_pp0_iter1_phi_ln183_reg_254, zext_ln175_1_fu_549_p1, zext_ln173_1_fu_558_p1, zext_ln168_1_fu_563_p1, zext_ln166_1_fu_568_p1, zext_ln164_1_fu_573_p1, zext_ln162_1_fu_582_p1, sext_ln154_fu_587_p1, sext_ln152_fu_596_p1, sext_ln147_fu_601_p1, sext_ln145_fu_606_p1, sext_ln143_fu_611_p1, sext_ln141_fu_620_p1)
    begin
        if (((select_ln129_reg_635 = ap_const_lv3_0) and (funct3_val_read_reg_631 = ap_const_lv3_0))) then 
            ap_phi_mux_phi_ln183_phi_fu_258_p36 <= sext_ln141_fu_620_p1;
        elsif (((select_ln129_reg_635 = ap_const_lv3_1) and (funct3_val_read_reg_631 = ap_const_lv3_0))) then 
            ap_phi_mux_phi_ln183_phi_fu_258_p36 <= sext_ln143_fu_611_p1;
        elsif (((select_ln129_reg_635 = ap_const_lv3_2) and (funct3_val_read_reg_631 = ap_const_lv3_0))) then 
            ap_phi_mux_phi_ln183_phi_fu_258_p36 <= sext_ln145_fu_606_p1;
        elsif (((select_ln129_reg_635 = ap_const_lv3_3) and (funct3_val_read_reg_631 = ap_const_lv3_0))) then 
            ap_phi_mux_phi_ln183_phi_fu_258_p36 <= sext_ln147_fu_601_p1;
        elsif (((select_ln129_reg_635 = ap_const_lv3_0) and (funct3_val_read_reg_631 = ap_const_lv3_1))) then 
            ap_phi_mux_phi_ln183_phi_fu_258_p36 <= sext_ln152_fu_596_p1;
        elsif (((select_ln129_reg_635 = ap_const_lv3_2) and (funct3_val_read_reg_631 = ap_const_lv3_1))) then 
            ap_phi_mux_phi_ln183_phi_fu_258_p36 <= sext_ln154_fu_587_p1;
        elsif (((select_ln129_reg_635 = ap_const_lv3_0) and (funct3_val_read_reg_631 = ap_const_lv3_4))) then 
            ap_phi_mux_phi_ln183_phi_fu_258_p36 <= zext_ln162_1_fu_582_p1;
        elsif (((select_ln129_reg_635 = ap_const_lv3_1) and (funct3_val_read_reg_631 = ap_const_lv3_4))) then 
            ap_phi_mux_phi_ln183_phi_fu_258_p36 <= zext_ln164_1_fu_573_p1;
        elsif (((select_ln129_reg_635 = ap_const_lv3_2) and (funct3_val_read_reg_631 = ap_const_lv3_4))) then 
            ap_phi_mux_phi_ln183_phi_fu_258_p36 <= zext_ln166_1_fu_568_p1;
        elsif (((select_ln129_reg_635 = ap_const_lv3_3) and (funct3_val_read_reg_631 = ap_const_lv3_4))) then 
            ap_phi_mux_phi_ln183_phi_fu_258_p36 <= zext_ln168_1_fu_563_p1;
        elsif (((select_ln129_reg_635 = ap_const_lv3_0) and (funct3_val_read_reg_631 = ap_const_lv3_5))) then 
            ap_phi_mux_phi_ln183_phi_fu_258_p36 <= zext_ln173_1_fu_558_p1;
        elsif (((select_ln129_reg_635 = ap_const_lv3_2) and (funct3_val_read_reg_631 = ap_const_lv3_5))) then 
            ap_phi_mux_phi_ln183_phi_fu_258_p36 <= zext_ln175_1_fu_549_p1;
        elsif ((funct3_val_read_reg_631 = ap_const_lv3_2)) then 
            ap_phi_mux_phi_ln183_phi_fu_258_p36 <= data_memory_q0;
        else 
            ap_phi_mux_phi_ln183_phi_fu_258_p36 <= ap_phi_reg_pp0_iter1_phi_ln183_reg_254;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_g_error_flag_2_reg_211 <= "X";
    ap_phi_reg_pp0_iter1_phi_ln183_reg_254 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_ready_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= ap_phi_mux_phi_ln183_phi_fu_258_p36;

    data_memory_address0_assign_proc : process(funct3_val_read_read_fu_96_p2, select_ln129_fu_440_p3, zext_ln175_fu_484_p1, zext_ln173_fu_489_p1, zext_ln168_fu_494_p1, zext_ln166_fu_499_p1, zext_ln164_fu_504_p1, zext_ln162_fu_509_p1, zext_ln158_fu_514_p1, zext_ln154_fu_519_p1, zext_ln152_fu_524_p1, zext_ln147_fu_529_p1, zext_ln145_fu_534_p1, zext_ln143_fu_539_p1, zext_ln141_fu_544_p1, ap_condition_251)
    begin
        if ((ap_const_boolean_1 = ap_condition_251)) then
            if (((select_ln129_fu_440_p3 = ap_const_lv3_0) and (funct3_val_read_read_fu_96_p2 = ap_const_lv3_0))) then 
                data_memory_address0 <= zext_ln141_fu_544_p1(16 - 1 downto 0);
            elsif (((select_ln129_fu_440_p3 = ap_const_lv3_1) and (funct3_val_read_read_fu_96_p2 = ap_const_lv3_0))) then 
                data_memory_address0 <= zext_ln143_fu_539_p1(16 - 1 downto 0);
            elsif (((select_ln129_fu_440_p3 = ap_const_lv3_2) and (funct3_val_read_read_fu_96_p2 = ap_const_lv3_0))) then 
                data_memory_address0 <= zext_ln145_fu_534_p1(16 - 1 downto 0);
            elsif (((select_ln129_fu_440_p3 = ap_const_lv3_3) and (funct3_val_read_read_fu_96_p2 = ap_const_lv3_0))) then 
                data_memory_address0 <= zext_ln147_fu_529_p1(16 - 1 downto 0);
            elsif (((select_ln129_fu_440_p3 = ap_const_lv3_0) and (funct3_val_read_read_fu_96_p2 = ap_const_lv3_1))) then 
                data_memory_address0 <= zext_ln152_fu_524_p1(16 - 1 downto 0);
            elsif (((select_ln129_fu_440_p3 = ap_const_lv3_2) and (funct3_val_read_read_fu_96_p2 = ap_const_lv3_1))) then 
                data_memory_address0 <= zext_ln154_fu_519_p1(16 - 1 downto 0);
            elsif ((funct3_val_read_read_fu_96_p2 = ap_const_lv3_2)) then 
                data_memory_address0 <= zext_ln158_fu_514_p1(16 - 1 downto 0);
            elsif (((select_ln129_fu_440_p3 = ap_const_lv3_0) and (funct3_val_read_read_fu_96_p2 = ap_const_lv3_4))) then 
                data_memory_address0 <= zext_ln162_fu_509_p1(16 - 1 downto 0);
            elsif (((select_ln129_fu_440_p3 = ap_const_lv3_1) and (funct3_val_read_read_fu_96_p2 = ap_const_lv3_4))) then 
                data_memory_address0 <= zext_ln164_fu_504_p1(16 - 1 downto 0);
            elsif (((select_ln129_fu_440_p3 = ap_const_lv3_2) and (funct3_val_read_read_fu_96_p2 = ap_const_lv3_4))) then 
                data_memory_address0 <= zext_ln166_fu_499_p1(16 - 1 downto 0);
            elsif (((select_ln129_fu_440_p3 = ap_const_lv3_3) and (funct3_val_read_read_fu_96_p2 = ap_const_lv3_4))) then 
                data_memory_address0 <= zext_ln168_fu_494_p1(16 - 1 downto 0);
            elsif (((select_ln129_fu_440_p3 = ap_const_lv3_0) and (funct3_val_read_read_fu_96_p2 = ap_const_lv3_5))) then 
                data_memory_address0 <= zext_ln173_fu_489_p1(16 - 1 downto 0);
            elsif (((select_ln129_fu_440_p3 = ap_const_lv3_2) and (funct3_val_read_read_fu_96_p2 = ap_const_lv3_5))) then 
                data_memory_address0 <= zext_ln175_fu_484_p1(16 - 1 downto 0);
            else 
                data_memory_address0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            data_memory_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    data_memory_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, funct3_val_read_read_fu_96_p2, ap_block_pp0_stage0_11001, select_ln129_fu_440_p3)
    begin
        if ((((select_ln129_fu_440_p3 = ap_const_lv3_1) and (funct3_val_read_read_fu_96_p2 = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((select_ln129_fu_440_p3 = ap_const_lv3_1) and (funct3_val_read_read_fu_96_p2 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((select_ln129_fu_440_p3 = ap_const_lv3_3) and (funct3_val_read_read_fu_96_p2 = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((select_ln129_fu_440_p3 = ap_const_lv3_3) and (funct3_val_read_read_fu_96_p2 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((select_ln129_fu_440_p3 = ap_const_lv3_0) 
    and (funct3_val_read_read_fu_96_p2 = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((select_ln129_fu_440_p3 = ap_const_lv3_0) and (funct3_val_read_read_fu_96_p2 = ap_const_lv3_5) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((select_ln129_fu_440_p3 = ap_const_lv3_0) and (funct3_val_read_read_fu_96_p2 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((select_ln129_fu_440_p3 = ap_const_lv3_0) and (funct3_val_read_read_fu_96_p2 = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((select_ln129_fu_440_p3 = ap_const_lv3_2) and (funct3_val_read_read_fu_96_p2 
    = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((select_ln129_fu_440_p3 = ap_const_lv3_2) and (funct3_val_read_read_fu_96_p2 = ap_const_lv3_5) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((select_ln129_fu_440_p3 = ap_const_lv3_2) and (funct3_val_read_read_fu_96_p2 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((select_ln129_fu_440_p3 = ap_const_lv3_2) and (funct3_val_read_read_fu_96_p2 = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((funct3_val_read_read_fu_96_p2 = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 
    = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            data_memory_ce0 <= ap_const_logic_1;
        else 
            data_memory_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    empty_17_fu_346_p1 <= source1_val(2 - 1 downto 0);
    empty_fu_342_p0 <= imm_val;
    empty_fu_342_p1 <= empty_fu_342_p0(2 - 1 downto 0);
    funct3_val_read_read_fu_96_p2 <= funct3_val;
    g_error <= ap_const_lv1_1;

    g_error_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_phi_mux_g_error_flag_2_phi_fu_215_p36)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_phi_mux_g_error_flag_2_phi_fu_215_p36 = ap_const_lv1_1))) then 
            g_error_ap_vld <= ap_const_logic_1;
        else 
            g_error_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_302_p4 <= data_memory_q0(31 downto 16);
    grp_fu_312_p4 <= data_memory_q0(31 downto 24);
    grp_fu_322_p4 <= data_memory_q0(23 downto 16);
    grp_fu_332_p4 <= data_memory_q0(15 downto 8);
    icmp_ln134_fu_462_p2 <= "1" when (unsigned(pos_fu_394_p4) > unsigned(ap_const_lv26_C7FF)) else "0";
    or_ln130_fu_468_p2 <= (xor_ln130_fu_456_p2 or icmp_ln134_fu_462_p2);
    p_and_t_fu_418_p3 <= (ap_const_lv1_0 & sub_ln129_fu_412_p2);
    pos_1_fu_474_p4 <= add_ln128_1_fu_388_p2(17 downto 2);
    pos_fu_394_p4 <= add_ln128_1_fu_388_p2(27 downto 2);
    select_ln129_fu_440_p3 <= 
        sub_ln129_1_fu_426_p2 when (tmp_fu_404_p3(0) = '1') else 
        tmp_s_fu_432_p3;
    sext_ln128_fu_354_p0 <= imm_val;
        sext_ln128_fu_354_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln128_fu_354_p0),34));

        sext_ln141_fu_620_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln141_fu_616_p1),32));

        sext_ln143_fu_611_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_332_p4),32));

        sext_ln145_fu_606_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_322_p4),32));

        sext_ln147_fu_601_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_312_p4),32));

        sext_ln152_fu_596_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln152_fu_592_p1),32));

        sext_ln154_fu_587_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_302_p4),32));

    sub_ln129_1_fu_426_p2 <= std_logic_vector(unsigned(ap_const_lv3_0) - unsigned(p_and_t_fu_418_p3));
    sub_ln129_fu_412_p2 <= std_logic_vector(unsigned(ap_const_lv2_0) - unsigned(trunc_ln128_2_fu_384_p1));
    tmp_1_fu_448_p3 <= add_ln128_1_fu_388_p2(28 downto 28);
    tmp_fu_404_p3 <= add_ln128_fu_378_p2(33 downto 33);
    tmp_s_fu_432_p3 <= (ap_const_lv1_0 & add_ln128_2_fu_366_p2);
    trunc_ln128_1_fu_362_p1 <= source1_val(29 - 1 downto 0);
    trunc_ln128_2_fu_384_p1 <= add_ln128_3_fu_372_p2(2 - 1 downto 0);
    trunc_ln128_fu_358_p0 <= imm_val;
    trunc_ln128_fu_358_p1 <= trunc_ln128_fu_358_p0(29 - 1 downto 0);
    trunc_ln141_fu_616_p1 <= data_memory_q0(8 - 1 downto 0);
    trunc_ln152_fu_592_p1 <= data_memory_q0(16 - 1 downto 0);
    trunc_ln162_fu_578_p1 <= data_memory_q0(8 - 1 downto 0);
    trunc_ln173_fu_554_p1 <= data_memory_q0(16 - 1 downto 0);
    xor_ln130_fu_456_p2 <= (tmp_1_fu_448_p3 xor ap_const_lv1_1);
    zext_ln128_fu_350_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(source1_val),34));
    zext_ln141_fu_544_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_1_fu_474_p4),64));
    zext_ln143_fu_539_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_1_fu_474_p4),64));
    zext_ln145_fu_534_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_1_fu_474_p4),64));
    zext_ln147_fu_529_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_1_fu_474_p4),64));
    zext_ln152_fu_524_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_1_fu_474_p4),64));
    zext_ln154_fu_519_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_1_fu_474_p4),64));
    zext_ln158_fu_514_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_1_fu_474_p4),64));
    zext_ln162_1_fu_582_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln162_fu_578_p1),32));
    zext_ln162_fu_509_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_1_fu_474_p4),64));
    zext_ln164_1_fu_573_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_332_p4),32));
    zext_ln164_fu_504_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_1_fu_474_p4),64));
    zext_ln166_1_fu_568_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_322_p4),32));
    zext_ln166_fu_499_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_1_fu_474_p4),64));
    zext_ln168_1_fu_563_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_312_p4),32));
    zext_ln168_fu_494_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_1_fu_474_p4),64));
    zext_ln173_1_fu_558_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln173_fu_554_p1),32));
    zext_ln173_fu_489_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_1_fu_474_p4),64));
    zext_ln175_1_fu_549_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_302_p4),32));
    zext_ln175_fu_484_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pos_1_fu_474_p4),64));
end behav;
