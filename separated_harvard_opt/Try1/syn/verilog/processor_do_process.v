// ==============================================================
// Generated by Vitis HLS v2023.1.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module processor_do_process (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        instr_memory_address0,
        instr_memory_ce0,
        instr_memory_q0,
        data_memory_address0,
        data_memory_ce0,
        data_memory_we0,
        data_memory_d0,
        data_memory_q0,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 3'd1;
parameter    ap_ST_fsm_pp0_stage2 = 3'd2;
parameter    ap_ST_fsm_pp0_stage1 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [15:0] instr_memory_address0;
output   instr_memory_ce0;
input  [31:0] instr_memory_q0;
output  [15:0] data_memory_address0;
output   data_memory_ce0;
output   data_memory_we0;
output  [31:0] data_memory_d0;
input  [31:0] data_memory_q0;
output  [0:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg instr_memory_ce0;
reg[15:0] data_memory_address0;
reg data_memory_ce0;
reg data_memory_we0;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state2_pp0_stage2_iter0;
wire    ap_block_state6_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_subdone;
reg   [31:0] g_pc;
reg   [0:0] g_error;
reg   [31:0] g_xreg_1;
reg   [31:0] g_xreg_2;
reg   [31:0] g_xreg_3;
reg   [31:0] g_xreg_4;
reg   [31:0] g_xreg_5;
reg   [31:0] g_xreg_6;
reg   [31:0] g_xreg_7;
reg   [31:0] g_xreg_8;
reg   [31:0] g_xreg_9;
reg   [31:0] g_xreg_10;
reg   [31:0] g_xreg_11;
reg   [31:0] g_xreg_12;
reg   [31:0] g_xreg_13;
reg   [31:0] g_xreg_14;
reg   [31:0] g_xreg_15;
reg   [31:0] g_xreg_16;
reg   [31:0] g_xreg_17;
reg   [31:0] g_xreg_18;
reg   [31:0] g_xreg_19;
reg   [31:0] g_xreg_20;
reg   [31:0] g_xreg_21;
reg   [31:0] g_xreg_22;
reg   [31:0] g_xreg_23;
reg   [31:0] g_xreg_24;
reg   [31:0] g_xreg_25;
reg   [31:0] g_xreg_26;
reg   [31:0] g_xreg_27;
reg   [31:0] g_xreg_28;
reg   [31:0] g_xreg_29;
reg   [31:0] g_xreg_30;
reg   [31:0] g_xreg_31;
wire   [31:0] grp_fu_490_p2;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state5_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
reg   [6:0] op_code_reg_1696;
reg   [31:0] pc_reg_1611;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg   [31:0] pc_reg_1611_pp0_iter1_reg;
wire   [0:0] or_ln26_fu_535_p2;
reg   [0:0] or_ln26_reg_1618;
wire  signed [31:0] immediate_9_fu_611_p3;
reg   [31:0] immediate_9_reg_1627;
wire    ap_block_pp0_stage2_11001;
wire   [31:0] source1_fu_748_p34;
reg   [31:0] source1_reg_1636;
wire   [31:0] result_13_fu_824_p34;
reg   [31:0] result_13_reg_1645;
wire   [31:0] grp_fu_486_p2;
reg   [2:0] funct3_reg_1701;
wire   [0:0] grp_fu_474_p2;
wire   [0:0] grp_fu_478_p2;
wire   [0:0] grp_fu_482_p2;
wire   [1:0] add_ln187_2_fu_908_p2;
reg   [1:0] add_ln187_2_reg_1685;
reg   [31:0] instr_reg_1690;
wire   [6:0] op_code_fu_926_p1;
reg   [6:0] op_code_reg_1696_pp0_iter1_reg;
reg   [6:0] funct7_reg_1707;
reg   [4:0] rd_reg_1712;
reg   [4:0] rd_reg_1712_pp0_iter1_reg;
wire   [20:0] immediate_6_fu_1108_p3;
reg   [20:0] immediate_6_reg_1716;
wire   [0:0] icmp_ln39_2_fu_1116_p2;
reg   [0:0] icmp_ln39_2_reg_1721;
wire   [0:0] icmp_ln39_3_fu_1122_p2;
reg   [0:0] icmp_ln39_3_reg_1726;
wire   [0:0] icmp_ln39_4_fu_1128_p2;
reg   [0:0] icmp_ln39_4_reg_1731;
wire   [0:0] icmp_ln39_5_fu_1134_p2;
reg   [0:0] icmp_ln39_5_reg_1736;
wire   [0:0] icmp_ln39_6_fu_1140_p2;
reg   [0:0] icmp_ln39_6_reg_1741;
wire   [0:0] icmp_ln39_7_fu_1146_p2;
reg   [0:0] icmp_ln39_7_reg_1746;
reg   [4:0] rs1_reg_1751;
reg   [4:0] rs2_reg_1756;
wire   [2:0] select_ln188_fu_1263_p3;
reg   [2:0] select_ln188_reg_1761;
wire   [0:0] tmp_6_fu_1271_p3;
wire   [15:0] pos_3_fu_1297_p4;
reg   [15:0] pos_3_reg_1772;
reg   [31:0] result_reg_1782;
reg   [0:0] write_reg_reg_1787;
wire   [31:0] grp_execute_load_fu_450_ap_return;
wire   [31:0] result_11_fu_1329_p5;
wire   [31:0] result_10_fu_1344_p5;
wire   [31:0] result_9_fu_1359_p5;
wire   [31:0] result_8_fu_1374_p5;
wire   [31:0] result_7_fu_1389_p5;
wire   [31:0] result_6_fu_1404_p5;
reg    ap_enable_reg_pp0_iter0_reg;
wire    grp_execute_load_fu_450_ap_start;
wire    grp_execute_load_fu_450_ap_done;
wire    grp_execute_load_fu_450_ap_idle;
wire    grp_execute_load_fu_450_ap_ready;
wire   [15:0] grp_execute_load_fu_450_data_memory_address0;
wire    grp_execute_load_fu_450_data_memory_ce0;
wire   [0:0] grp_execute_load_fu_450_g_error;
wire    grp_execute_load_fu_450_g_error_ap_vld;
wire    call_ret6_execute_arithm_fu_461_ap_ready;
wire   [0:0] call_ret6_execute_arithm_fu_461_g_error;
wire    call_ret6_execute_arithm_fu_461_g_error_ap_vld;
wire   [31:0] call_ret6_execute_arithm_fu_461_ap_return_0;
wire   [0:0] call_ret6_execute_arithm_fu_461_ap_return_1;
wire   [31:0] ap_phi_reg_pp0_iter0_storemerge_reg_324;
reg   [31:0] ap_phi_reg_pp0_iter1_storemerge_reg_324;
wire   [31:0] ap_phi_reg_pp0_iter0_result_77_reg_333;
reg   [31:0] ap_phi_reg_pp0_iter1_result_77_reg_333;
reg   [31:0] ap_phi_mux_result_12_phi_fu_362_p12;
wire   [31:0] ap_phi_reg_pp0_iter0_result_12_reg_358;
reg   [31:0] ap_phi_reg_pp0_iter1_result_12_reg_358;
reg   [0:0] ap_phi_mux_write_reg_1_phi_fu_384_p12;
wire   [0:0] ap_phi_reg_pp0_iter0_write_reg_1_reg_379;
reg   [0:0] ap_phi_reg_pp0_iter1_write_reg_1_reg_379;
reg   [0:0] ap_phi_mux_write_mem_phi_fu_407_p12;
wire   [0:0] ap_phi_reg_pp0_iter0_write_mem_reg_403;
reg   [0:0] ap_phi_reg_pp0_iter1_write_mem_reg_403;
reg   [15:0] ap_phi_mux_write_addr_1_phi_fu_431_p12;
wire   [15:0] ap_phi_reg_pp0_iter1_write_addr_1_reg_427;
reg    grp_execute_load_fu_450_ap_start_reg;
wire    ap_block_pp0_stage0;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln28_fu_541_p1;
wire   [63:0] zext_ln198_fu_1307_p1;
wire   [63:0] zext_ln405_fu_1602_p1;
wire    ap_block_pp0_stage2;
wire   [31:0] grp_fu_495_p2;
reg   [31:0] ap_sig_allocacmp_pc;
wire   [0:0] icmp_ln193_fu_1285_p2;
reg   [31:0] ap_sig_allocacmp_g_xreg_1_load;
reg   [31:0] ap_sig_allocacmp_g_xreg_2_load;
reg   [31:0] ap_sig_allocacmp_g_xreg_3_load;
reg   [31:0] ap_sig_allocacmp_g_xreg_4_load;
reg   [31:0] ap_sig_allocacmp_g_xreg_5_load;
reg   [31:0] ap_sig_allocacmp_g_xreg_6_load;
reg   [31:0] ap_sig_allocacmp_g_xreg_7_load;
reg   [31:0] ap_sig_allocacmp_g_xreg_8_load;
reg   [31:0] ap_sig_allocacmp_g_xreg_9_load;
reg   [31:0] ap_sig_allocacmp_g_xreg_10_load;
reg   [31:0] ap_sig_allocacmp_g_xreg_11_load;
reg   [31:0] ap_sig_allocacmp_g_xreg_12_load;
reg   [31:0] ap_sig_allocacmp_g_xreg_13_load;
reg   [31:0] ap_sig_allocacmp_g_xreg_14_load;
reg   [31:0] ap_sig_allocacmp_g_xreg_15_load;
reg   [31:0] ap_sig_allocacmp_g_xreg_16_load;
reg   [31:0] ap_sig_allocacmp_g_xreg_17_load;
reg   [31:0] ap_sig_allocacmp_g_xreg_18_load;
reg   [31:0] ap_sig_allocacmp_g_xreg_19_load;
reg   [31:0] ap_sig_allocacmp_g_xreg_20_load;
reg   [31:0] ap_sig_allocacmp_g_xreg_21_load;
reg   [31:0] ap_sig_allocacmp_g_xreg_22_load;
reg   [31:0] ap_sig_allocacmp_g_xreg_23_load;
reg   [31:0] ap_sig_allocacmp_g_xreg_24_load;
reg   [31:0] ap_sig_allocacmp_g_xreg_25_load;
reg   [31:0] ap_sig_allocacmp_g_xreg_26_load;
reg   [31:0] ap_sig_allocacmp_g_xreg_27_load;
reg   [31:0] ap_sig_allocacmp_g_xreg_28_load;
reg   [31:0] ap_sig_allocacmp_g_xreg_29_load;
reg   [31:0] ap_sig_allocacmp_g_xreg_30_load;
reg   [31:0] ap_sig_allocacmp_g_xreg_31_load;
reg   [31:0] grp_fu_490_p0;
wire   [1:0] trunc_ln25_fu_509_p1;
wire   [0:0] icmp_ln26_fu_513_p2;
wire   [0:0] icmp_ln26_1_fu_529_p2;
wire   [15:0] lshr_ln_fu_519_p4;
wire   [11:0] immediate_fu_552_p4;
wire   [19:0] tmp_fu_565_p4;
wire   [0:0] or_ln39_fu_585_p2;
wire   [31:0] immediate_3_fu_574_p3;
wire  signed [31:0] sext_ln418_2_fu_582_p1;
wire   [0:0] or_ln39_2_fu_601_p2;
wire   [0:0] or_ln39_1_fu_597_p2;
wire   [0:0] or_ln39_3_fu_605_p2;
wire  signed [31:0] sext_ln45_fu_561_p1;
wire   [31:0] immediate_7_fu_589_p3;
wire   [1:0] trunc_ln71_fu_820_p1;
wire   [1:0] trunc_ln418_fu_620_p1;
wire   [6:0] tmp_10_fu_970_p4;
wire   [4:0] tmp_s_fu_960_p4;
wire   [11:0] immediate_1_fu_980_p3;
wire   [0:0] tmp_3_fu_1020_p3;
wire   [0:0] tmp_2_fu_1012_p3;
wire   [5:0] tmp_12_fu_1002_p4;
wire   [3:0] tmp_11_fu_992_p4;
wire   [12:0] immediate_2_fu_1028_p6;
wire   [7:0] tmp_14_fu_1064_p4;
wire   [0:0] tmp_4_fu_1056_p3;
wire   [9:0] tmp_13_fu_1046_p4;
wire   [0:0] icmp_ln39_fu_1088_p2;
wire  signed [20:0] sext_ln418_1_fu_1042_p1;
wire   [20:0] immediate_4_fu_1074_p6;
wire   [0:0] icmp_ln39_1_fu_1102_p2;
wire  signed [20:0] sext_ln418_fu_988_p1;
wire   [20:0] immediate_5_fu_1094_p3;
wire   [33:0] zext_ln187_fu_1190_p1;
wire  signed [33:0] sext_ln187_fu_1193_p1;
wire   [28:0] trunc_ln187_1_fu_1199_p1;
wire   [28:0] trunc_ln187_fu_1196_p1;
wire   [28:0] add_ln187_1_fu_1212_p2;
wire   [33:0] add_ln187_fu_1202_p2;
wire   [1:0] trunc_ln187_2_fu_1208_p1;
wire   [1:0] sub_ln188_fu_1236_p2;
wire   [2:0] p_and_t_fu_1242_p3;
wire   [0:0] tmp_5_fu_1228_p3;
wire   [2:0] sub_ln188_1_fu_1250_p2;
wire   [2:0] tmp_15_fu_1256_p3;
wire   [25:0] pos_fu_1218_p4;
wire   [15:0] trunc_ln215_fu_1326_p1;
wire   [15:0] trunc_ln213_fu_1341_p1;
wire   [7:0] trunc_ln208_fu_1356_p1;
wire   [7:0] trunc_ln206_fu_1371_p1;
wire   [7:0] trunc_ln204_fu_1386_p1;
wire   [7:0] trunc_ln202_fu_1401_p1;
reg   [2:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage1_subdone;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_230;
reg    ap_condition_213;
reg    ap_condition_156;
reg    ap_condition_423;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 g_pc = 32'd0;
#0 g_error = 1'd0;
#0 g_xreg_1 = 32'd0;
#0 g_xreg_2 = 32'd0;
#0 g_xreg_3 = 32'd0;
#0 g_xreg_4 = 32'd0;
#0 g_xreg_5 = 32'd0;
#0 g_xreg_6 = 32'd0;
#0 g_xreg_7 = 32'd0;
#0 g_xreg_8 = 32'd0;
#0 g_xreg_9 = 32'd0;
#0 g_xreg_10 = 32'd0;
#0 g_xreg_11 = 32'd0;
#0 g_xreg_12 = 32'd0;
#0 g_xreg_13 = 32'd0;
#0 g_xreg_14 = 32'd0;
#0 g_xreg_15 = 32'd0;
#0 g_xreg_16 = 32'd0;
#0 g_xreg_17 = 32'd0;
#0 g_xreg_18 = 32'd0;
#0 g_xreg_19 = 32'd0;
#0 g_xreg_20 = 32'd0;
#0 g_xreg_21 = 32'd0;
#0 g_xreg_22 = 32'd0;
#0 g_xreg_23 = 32'd0;
#0 g_xreg_24 = 32'd0;
#0 g_xreg_25 = 32'd0;
#0 g_xreg_26 = 32'd0;
#0 g_xreg_27 = 32'd0;
#0 g_xreg_28 = 32'd0;
#0 g_xreg_29 = 32'd0;
#0 g_xreg_30 = 32'd0;
#0 g_xreg_31 = 32'd0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 grp_execute_load_fu_450_ap_start_reg = 1'b0;
end

processor_execute_load grp_execute_load_fu_450(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_execute_load_fu_450_ap_start),
    .ap_done(grp_execute_load_fu_450_ap_done),
    .ap_idle(grp_execute_load_fu_450_ap_idle),
    .ap_ready(grp_execute_load_fu_450_ap_ready),
    .funct3_val(funct3_reg_1701),
    .imm_val(immediate_9_reg_1627),
    .data_memory_address0(grp_execute_load_fu_450_data_memory_address0),
    .data_memory_ce0(grp_execute_load_fu_450_data_memory_ce0),
    .data_memory_q0(data_memory_q0),
    .source1_val(source1_reg_1636),
    .g_error(grp_execute_load_fu_450_g_error),
    .g_error_ap_vld(grp_execute_load_fu_450_g_error_ap_vld),
    .ap_return(grp_execute_load_fu_450_ap_return)
);

processor_execute_arithm call_ret6_execute_arithm_fu_461(
    .ap_ready(call_ret6_execute_arithm_fu_461_ap_ready),
    .op_code_val(op_code_reg_1696),
    .funct3_val(funct3_reg_1701),
    .funct7_val(funct7_reg_1707),
    .source1_val(source1_reg_1636),
    .source2_val(result_13_reg_1645),
    .imm_val(immediate_9_reg_1627),
    .pc_val(pc_reg_1611),
    .g_error(call_ret6_execute_arithm_fu_461_g_error),
    .g_error_ap_vld(call_ret6_execute_arithm_fu_461_g_error_ap_vld),
    .ap_return_0(call_ret6_execute_arithm_fu_461_ap_return_0),
    .ap_return_1(call_ret6_execute_arithm_fu_461_ap_return_1)
);

processor_mux_32_5_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_32_5_32_1_1_U14(
    .din0(32'd0),
    .din1(ap_sig_allocacmp_g_xreg_1_load),
    .din2(ap_sig_allocacmp_g_xreg_2_load),
    .din3(ap_sig_allocacmp_g_xreg_3_load),
    .din4(ap_sig_allocacmp_g_xreg_4_load),
    .din5(ap_sig_allocacmp_g_xreg_5_load),
    .din6(ap_sig_allocacmp_g_xreg_6_load),
    .din7(ap_sig_allocacmp_g_xreg_7_load),
    .din8(ap_sig_allocacmp_g_xreg_8_load),
    .din9(ap_sig_allocacmp_g_xreg_9_load),
    .din10(ap_sig_allocacmp_g_xreg_10_load),
    .din11(ap_sig_allocacmp_g_xreg_11_load),
    .din12(ap_sig_allocacmp_g_xreg_12_load),
    .din13(ap_sig_allocacmp_g_xreg_13_load),
    .din14(ap_sig_allocacmp_g_xreg_14_load),
    .din15(ap_sig_allocacmp_g_xreg_15_load),
    .din16(ap_sig_allocacmp_g_xreg_16_load),
    .din17(ap_sig_allocacmp_g_xreg_17_load),
    .din18(ap_sig_allocacmp_g_xreg_18_load),
    .din19(ap_sig_allocacmp_g_xreg_19_load),
    .din20(ap_sig_allocacmp_g_xreg_20_load),
    .din21(ap_sig_allocacmp_g_xreg_21_load),
    .din22(ap_sig_allocacmp_g_xreg_22_load),
    .din23(ap_sig_allocacmp_g_xreg_23_load),
    .din24(ap_sig_allocacmp_g_xreg_24_load),
    .din25(ap_sig_allocacmp_g_xreg_25_load),
    .din26(ap_sig_allocacmp_g_xreg_26_load),
    .din27(ap_sig_allocacmp_g_xreg_27_load),
    .din28(ap_sig_allocacmp_g_xreg_28_load),
    .din29(ap_sig_allocacmp_g_xreg_29_load),
    .din30(ap_sig_allocacmp_g_xreg_30_load),
    .din31(ap_sig_allocacmp_g_xreg_31_load),
    .din32(rs1_reg_1751),
    .dout(source1_fu_748_p34)
);

processor_mux_32_5_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_32_5_32_1_1_U15(
    .din0(32'd0),
    .din1(ap_sig_allocacmp_g_xreg_1_load),
    .din2(ap_sig_allocacmp_g_xreg_2_load),
    .din3(ap_sig_allocacmp_g_xreg_3_load),
    .din4(ap_sig_allocacmp_g_xreg_4_load),
    .din5(ap_sig_allocacmp_g_xreg_5_load),
    .din6(ap_sig_allocacmp_g_xreg_6_load),
    .din7(ap_sig_allocacmp_g_xreg_7_load),
    .din8(ap_sig_allocacmp_g_xreg_8_load),
    .din9(ap_sig_allocacmp_g_xreg_9_load),
    .din10(ap_sig_allocacmp_g_xreg_10_load),
    .din11(ap_sig_allocacmp_g_xreg_11_load),
    .din12(ap_sig_allocacmp_g_xreg_12_load),
    .din13(ap_sig_allocacmp_g_xreg_13_load),
    .din14(ap_sig_allocacmp_g_xreg_14_load),
    .din15(ap_sig_allocacmp_g_xreg_15_load),
    .din16(ap_sig_allocacmp_g_xreg_16_load),
    .din17(ap_sig_allocacmp_g_xreg_17_load),
    .din18(ap_sig_allocacmp_g_xreg_18_load),
    .din19(ap_sig_allocacmp_g_xreg_19_load),
    .din20(ap_sig_allocacmp_g_xreg_20_load),
    .din21(ap_sig_allocacmp_g_xreg_21_load),
    .din22(ap_sig_allocacmp_g_xreg_22_load),
    .din23(ap_sig_allocacmp_g_xreg_23_load),
    .din24(ap_sig_allocacmp_g_xreg_24_load),
    .din25(ap_sig_allocacmp_g_xreg_25_load),
    .din26(ap_sig_allocacmp_g_xreg_26_load),
    .din27(ap_sig_allocacmp_g_xreg_27_load),
    .din28(ap_sig_allocacmp_g_xreg_28_load),
    .din29(ap_sig_allocacmp_g_xreg_29_load),
    .din30(ap_sig_allocacmp_g_xreg_30_load),
    .din31(ap_sig_allocacmp_g_xreg_31_load),
    .din32(rs2_reg_1756),
    .dout(result_13_fu_824_p34)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        g_pc <= 32'd0;
    end else begin
        if (((~(op_code_reg_1696 == 7'd3) & ~(op_code_reg_1696 == 7'd35) & ~(op_code_reg_1696 == 7'd99) & ~(op_code_reg_1696 == 7'd111) & ~(op_code_reg_1696 == 7'd103) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (op_code_reg_1696 == 7'd3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (op_code_reg_1696 == 7'd35)))) begin
            g_pc <= grp_fu_490_p2;
        end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (op_code_reg_1696 == 7'd111))) begin
            g_pc <= grp_fu_486_p2;
        end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (op_code_reg_1696 == 7'd103))) begin
            g_pc <= grp_fu_495_p2;
        end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (op_code_reg_1696 == 7'd99))) begin
            g_pc <= ap_phi_reg_pp0_iter1_storemerge_reg_324;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_execute_load_fu_450_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (op_code_reg_1696 == 7'd3))) begin
            grp_execute_load_fu_450_ap_start_reg <= 1'b1;
        end else if ((grp_execute_load_fu_450_ap_ready == 1'b1)) begin
            grp_execute_load_fu_450_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (op_code_reg_1696 == 7'd111)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (op_code_reg_1696 == 7'd103)))) begin
        ap_phi_reg_pp0_iter1_result_12_reg_358 <= grp_fu_490_p2;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (op_code_reg_1696 == 7'd3))) begin
        ap_phi_reg_pp0_iter1_result_12_reg_358 <= grp_execute_load_fu_450_ap_return;
    end else if ((~(op_code_reg_1696 == 7'd3) & ~(op_code_reg_1696 == 7'd35) & ~(op_code_reg_1696 == 7'd99) & ~(op_code_reg_1696 == 7'd111) & ~(op_code_reg_1696 == 7'd103) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter1_result_12_reg_358 <= result_reg_1782;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_phi_reg_pp0_iter1_result_12_reg_358 <= ap_phi_reg_pp0_iter0_result_12_reg_358;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (select_ln188_reg_1761 == 3'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (funct3_reg_1701 == 3'd1) & (op_code_reg_1696 == 7'd35))) begin
        ap_phi_reg_pp0_iter1_result_77_reg_333 <= result_11_fu_1329_p5;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (select_ln188_reg_1761 == 3'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (funct3_reg_1701 == 3'd1) & (op_code_reg_1696 == 7'd35))) begin
        ap_phi_reg_pp0_iter1_result_77_reg_333 <= result_10_fu_1344_p5;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (select_ln188_reg_1761 == 3'd3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (funct3_reg_1701 == 3'd0) & (op_code_reg_1696 == 7'd35))) begin
        ap_phi_reg_pp0_iter1_result_77_reg_333 <= result_9_fu_1359_p5;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (select_ln188_reg_1761 == 3'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (funct3_reg_1701 == 3'd0) & (op_code_reg_1696 == 7'd35))) begin
        ap_phi_reg_pp0_iter1_result_77_reg_333 <= result_8_fu_1374_p5;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (select_ln188_reg_1761 == 3'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (funct3_reg_1701 == 3'd0) & (op_code_reg_1696 == 7'd35))) begin
        ap_phi_reg_pp0_iter1_result_77_reg_333 <= result_7_fu_1389_p5;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (select_ln188_reg_1761 == 3'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (funct3_reg_1701 == 3'd0) & (op_code_reg_1696 == 7'd35))) begin
        ap_phi_reg_pp0_iter1_result_77_reg_333 <= result_6_fu_1404_p5;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (funct3_reg_1701 == 3'd2) & (op_code_reg_1696 == 7'd35))) begin
        ap_phi_reg_pp0_iter1_result_77_reg_333 <= result_13_reg_1645;
    end else if (((~(select_ln188_reg_1761 == 3'd1) & ~(select_ln188_reg_1761 == 3'd3) & ~(select_ln188_reg_1761 == 3'd0) & ~(select_ln188_reg_1761 == 3'd2) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (funct3_reg_1701 == 3'd0) & (op_code_reg_1696 == 7'd35)) | (~(select_ln188_reg_1761 == 3'd0) & ~(select_ln188_reg_1761 == 3'd2) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (funct3_reg_1701 == 3'd1) & (op_code_reg_1696 == 7'd35)) | (~(funct3_reg_1701 == 3'd0) & ~(funct3_reg_1701 == 3'd2) & ~(funct3_reg_1701 == 3'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (op_code_reg_1696 == 7'd35)))) begin
        ap_phi_reg_pp0_iter1_result_77_reg_333 <= data_memory_q0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_phi_reg_pp0_iter1_result_77_reg_333 <= ap_phi_reg_pp0_iter0_result_77_reg_333;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_156)) begin
        if ((1'b1 == ap_condition_213)) begin
            ap_phi_reg_pp0_iter1_storemerge_reg_324 <= grp_fu_486_p2;
        end else if ((1'b1 == ap_condition_230)) begin
            ap_phi_reg_pp0_iter1_storemerge_reg_324 <= grp_fu_490_p2;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_storemerge_reg_324 <= ap_phi_reg_pp0_iter0_storemerge_reg_324;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((~(op_code_reg_1696 == 7'd3) & ~(op_code_reg_1696 == 7'd35) & ~(op_code_reg_1696 == 7'd99) & ~(op_code_reg_1696 == 7'd111) & ~(op_code_reg_1696 == 7'd103) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (op_code_reg_1696 == 7'd99)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (op_code_reg_1696 == 7'd3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (op_code_reg_1696 == 7'd111)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (op_code_reg_1696 == 7'd103)))) begin
        ap_phi_reg_pp0_iter1_write_mem_reg_403 <= 1'd0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_phi_reg_pp0_iter1_write_mem_reg_403 <= ap_phi_reg_pp0_iter0_write_mem_reg_403;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (op_code_reg_1696 == 7'd99))) begin
        ap_phi_reg_pp0_iter1_write_reg_1_reg_379 <= 1'd0;
    end else if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (op_code_reg_1696 == 7'd3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (op_code_reg_1696 == 7'd111)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (op_code_reg_1696 == 7'd103)))) begin
        ap_phi_reg_pp0_iter1_write_reg_1_reg_379 <= 1'd1;
    end else if ((~(op_code_reg_1696 == 7'd3) & ~(op_code_reg_1696 == 7'd35) & ~(op_code_reg_1696 == 7'd99) & ~(op_code_reg_1696 == 7'd111) & ~(op_code_reg_1696 == 7'd103) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_phi_reg_pp0_iter1_write_reg_1_reg_379 <= write_reg_reg_1787;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_phi_reg_pp0_iter1_write_reg_1_reg_379 <= ap_phi_reg_pp0_iter0_write_reg_1_reg_379;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln193_fu_1285_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_6_fu_1271_p3 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (op_code_reg_1696 == 7'd35)) | (~(funct3_reg_1701 == 3'd0) & ~(funct3_reg_1701 == 3'd2) & ~(funct3_reg_1701 == 3'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (op_code_reg_1696 == 7'd35)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (or_ln26_reg_1618 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (tmp_6_fu_1271_p3 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (op_code_reg_1696 == 7'd35)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((funct3_reg_1701 == 3'd3) & (op_code_reg_1696 == 7'd99)) | ((funct3_reg_1701 == 3'd2) & (op_code_reg_1696 == 7'd99)))))) begin
        g_error <= 1'd1;
    end else if ((~(op_code_reg_1696 == 7'd3) & ~(op_code_reg_1696 == 7'd35) & ~(op_code_reg_1696 == 7'd99) & ~(op_code_reg_1696 == 7'd111) & ~(op_code_reg_1696 == 7'd103) & (1'b0 == ap_block_pp0_stage0_11001) & (call_ret6_execute_arithm_fu_461_g_error_ap_vld == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        g_error <= call_ret6_execute_arithm_fu_461_g_error;
    end else if (((1'b0 == ap_block_pp0_stage1) & (grp_execute_load_fu_450_g_error_ap_vld == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (op_code_reg_1696 == 7'd3))) begin
        g_error <= grp_execute_load_fu_450_g_error;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (op_code_reg_1696 == 7'd35))) begin
        add_ln187_2_reg_1685 <= add_ln187_2_fu_908_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        funct3_reg_1701 <= {{instr_memory_q0[14:12]}};
        funct7_reg_1707 <= {{instr_memory_q0[31:25]}};
        icmp_ln39_2_reg_1721 <= icmp_ln39_2_fu_1116_p2;
        icmp_ln39_3_reg_1726 <= icmp_ln39_3_fu_1122_p2;
        icmp_ln39_4_reg_1731 <= icmp_ln39_4_fu_1128_p2;
        icmp_ln39_5_reg_1736 <= icmp_ln39_5_fu_1134_p2;
        icmp_ln39_6_reg_1741 <= icmp_ln39_6_fu_1140_p2;
        icmp_ln39_7_reg_1746 <= icmp_ln39_7_fu_1146_p2;
        immediate_6_reg_1716 <= immediate_6_fu_1108_p3;
        instr_reg_1690 <= instr_memory_q0;
        op_code_reg_1696 <= op_code_fu_926_p1;
        op_code_reg_1696_pp0_iter1_reg <= op_code_reg_1696;
        rd_reg_1712 <= {{instr_memory_q0[11:7]}};
        rd_reg_1712_pp0_iter1_reg <= rd_reg_1712;
        rs1_reg_1751 <= {{instr_memory_q0[19:15]}};
        rs2_reg_1756 <= {{instr_memory_q0[24:20]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        g_xreg_1 <= ap_phi_mux_result_12_phi_fu_362_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd10) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        g_xreg_10 <= ap_phi_mux_result_12_phi_fu_362_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd11) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        g_xreg_11 <= ap_phi_mux_result_12_phi_fu_362_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd12) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        g_xreg_12 <= ap_phi_mux_result_12_phi_fu_362_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd13) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        g_xreg_13 <= ap_phi_mux_result_12_phi_fu_362_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd14) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        g_xreg_14 <= ap_phi_mux_result_12_phi_fu_362_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd15) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        g_xreg_15 <= ap_phi_mux_result_12_phi_fu_362_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd16) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        g_xreg_16 <= ap_phi_mux_result_12_phi_fu_362_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd17) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        g_xreg_17 <= ap_phi_mux_result_12_phi_fu_362_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd18) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        g_xreg_18 <= ap_phi_mux_result_12_phi_fu_362_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd19) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        g_xreg_19 <= ap_phi_mux_result_12_phi_fu_362_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        g_xreg_2 <= ap_phi_mux_result_12_phi_fu_362_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd20) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        g_xreg_20 <= ap_phi_mux_result_12_phi_fu_362_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd21) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        g_xreg_21 <= ap_phi_mux_result_12_phi_fu_362_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd22) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        g_xreg_22 <= ap_phi_mux_result_12_phi_fu_362_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd23) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        g_xreg_23 <= ap_phi_mux_result_12_phi_fu_362_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd24) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        g_xreg_24 <= ap_phi_mux_result_12_phi_fu_362_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd25) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        g_xreg_25 <= ap_phi_mux_result_12_phi_fu_362_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd26) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        g_xreg_26 <= ap_phi_mux_result_12_phi_fu_362_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd27) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        g_xreg_27 <= ap_phi_mux_result_12_phi_fu_362_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd28) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        g_xreg_28 <= ap_phi_mux_result_12_phi_fu_362_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd29) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        g_xreg_29 <= ap_phi_mux_result_12_phi_fu_362_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd3) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        g_xreg_3 <= ap_phi_mux_result_12_phi_fu_362_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd30) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        g_xreg_30 <= ap_phi_mux_result_12_phi_fu_362_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd31) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        g_xreg_31 <= ap_phi_mux_result_12_phi_fu_362_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd4) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        g_xreg_4 <= ap_phi_mux_result_12_phi_fu_362_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd5) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        g_xreg_5 <= ap_phi_mux_result_12_phi_fu_362_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd6) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        g_xreg_6 <= ap_phi_mux_result_12_phi_fu_362_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd7) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        g_xreg_7 <= ap_phi_mux_result_12_phi_fu_362_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd8) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        g_xreg_8 <= ap_phi_mux_result_12_phi_fu_362_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd9) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        g_xreg_9 <= ap_phi_mux_result_12_phi_fu_362_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        immediate_9_reg_1627 <= immediate_9_fu_611_p3;
        result_13_reg_1645 <= result_13_fu_824_p34;
        source1_reg_1636 <= source1_fu_748_p34;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        or_ln26_reg_1618 <= or_ln26_fu_535_p2;
        pc_reg_1611 <= ap_sig_allocacmp_pc;
        pc_reg_1611_pp0_iter1_reg <= pc_reg_1611;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (op_code_reg_1696 == 7'd35))) begin
        pos_3_reg_1772 <= {{add_ln187_1_fu_1212_p2[17:2]}};
        select_ln188_reg_1761 <= select_ln188_fu_1263_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~(op_code_reg_1696 == 7'd3) & ~(op_code_reg_1696 == 7'd35) & ~(op_code_reg_1696 == 7'd99) & ~(op_code_reg_1696 == 7'd111) & ~(op_code_reg_1696 == 7'd103) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        result_reg_1782 <= call_ret6_execute_arithm_fu_461_ap_return_0;
        write_reg_reg_1787 <= call_ret6_execute_arithm_fu_461_ap_return_1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if ((op_code_reg_1696_pp0_iter1_reg == 7'd35)) begin
        ap_phi_mux_result_12_phi_fu_362_p12 = ap_phi_reg_pp0_iter1_result_77_reg_333;
    end else begin
        ap_phi_mux_result_12_phi_fu_362_p12 = ap_phi_reg_pp0_iter1_result_12_reg_358;
    end
end

always @ (*) begin
    if ((op_code_reg_1696_pp0_iter1_reg == 7'd35)) begin
        ap_phi_mux_write_addr_1_phi_fu_431_p12 = pos_3_reg_1772;
    end else begin
        ap_phi_mux_write_addr_1_phi_fu_431_p12 = ap_phi_reg_pp0_iter1_write_addr_1_reg_427;
    end
end

always @ (*) begin
    if ((op_code_reg_1696_pp0_iter1_reg == 7'd35)) begin
        ap_phi_mux_write_mem_phi_fu_407_p12 = 1'd1;
    end else begin
        ap_phi_mux_write_mem_phi_fu_407_p12 = ap_phi_reg_pp0_iter1_write_mem_reg_403;
    end
end

always @ (*) begin
    if ((op_code_reg_1696_pp0_iter1_reg == 7'd35)) begin
        ap_phi_mux_write_reg_1_phi_fu_384_p12 = 1'd0;
    end else begin
        ap_phi_mux_write_reg_1_phi_fu_384_p12 = ap_phi_reg_pp0_iter1_write_reg_1_reg_379;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd10) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_g_xreg_10_load = ap_phi_mux_result_12_phi_fu_362_p12;
    end else begin
        ap_sig_allocacmp_g_xreg_10_load = g_xreg_10;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd11) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_g_xreg_11_load = ap_phi_mux_result_12_phi_fu_362_p12;
    end else begin
        ap_sig_allocacmp_g_xreg_11_load = g_xreg_11;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd12) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_g_xreg_12_load = ap_phi_mux_result_12_phi_fu_362_p12;
    end else begin
        ap_sig_allocacmp_g_xreg_12_load = g_xreg_12;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd13) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_g_xreg_13_load = ap_phi_mux_result_12_phi_fu_362_p12;
    end else begin
        ap_sig_allocacmp_g_xreg_13_load = g_xreg_13;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd14) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_g_xreg_14_load = ap_phi_mux_result_12_phi_fu_362_p12;
    end else begin
        ap_sig_allocacmp_g_xreg_14_load = g_xreg_14;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd15) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_g_xreg_15_load = ap_phi_mux_result_12_phi_fu_362_p12;
    end else begin
        ap_sig_allocacmp_g_xreg_15_load = g_xreg_15;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd16) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_g_xreg_16_load = ap_phi_mux_result_12_phi_fu_362_p12;
    end else begin
        ap_sig_allocacmp_g_xreg_16_load = g_xreg_16;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd17) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_g_xreg_17_load = ap_phi_mux_result_12_phi_fu_362_p12;
    end else begin
        ap_sig_allocacmp_g_xreg_17_load = g_xreg_17;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd18) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_g_xreg_18_load = ap_phi_mux_result_12_phi_fu_362_p12;
    end else begin
        ap_sig_allocacmp_g_xreg_18_load = g_xreg_18;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd19) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_g_xreg_19_load = ap_phi_mux_result_12_phi_fu_362_p12;
    end else begin
        ap_sig_allocacmp_g_xreg_19_load = g_xreg_19;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_g_xreg_1_load = ap_phi_mux_result_12_phi_fu_362_p12;
    end else begin
        ap_sig_allocacmp_g_xreg_1_load = g_xreg_1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd20) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_g_xreg_20_load = ap_phi_mux_result_12_phi_fu_362_p12;
    end else begin
        ap_sig_allocacmp_g_xreg_20_load = g_xreg_20;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd21) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_g_xreg_21_load = ap_phi_mux_result_12_phi_fu_362_p12;
    end else begin
        ap_sig_allocacmp_g_xreg_21_load = g_xreg_21;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd22) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_g_xreg_22_load = ap_phi_mux_result_12_phi_fu_362_p12;
    end else begin
        ap_sig_allocacmp_g_xreg_22_load = g_xreg_22;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd23) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_g_xreg_23_load = ap_phi_mux_result_12_phi_fu_362_p12;
    end else begin
        ap_sig_allocacmp_g_xreg_23_load = g_xreg_23;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd24) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_g_xreg_24_load = ap_phi_mux_result_12_phi_fu_362_p12;
    end else begin
        ap_sig_allocacmp_g_xreg_24_load = g_xreg_24;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd25) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_g_xreg_25_load = ap_phi_mux_result_12_phi_fu_362_p12;
    end else begin
        ap_sig_allocacmp_g_xreg_25_load = g_xreg_25;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd26) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_g_xreg_26_load = ap_phi_mux_result_12_phi_fu_362_p12;
    end else begin
        ap_sig_allocacmp_g_xreg_26_load = g_xreg_26;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd27) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_g_xreg_27_load = ap_phi_mux_result_12_phi_fu_362_p12;
    end else begin
        ap_sig_allocacmp_g_xreg_27_load = g_xreg_27;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd28) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_g_xreg_28_load = ap_phi_mux_result_12_phi_fu_362_p12;
    end else begin
        ap_sig_allocacmp_g_xreg_28_load = g_xreg_28;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd29) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_g_xreg_29_load = ap_phi_mux_result_12_phi_fu_362_p12;
    end else begin
        ap_sig_allocacmp_g_xreg_29_load = g_xreg_29;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_g_xreg_2_load = ap_phi_mux_result_12_phi_fu_362_p12;
    end else begin
        ap_sig_allocacmp_g_xreg_2_load = g_xreg_2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd30) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_g_xreg_30_load = ap_phi_mux_result_12_phi_fu_362_p12;
    end else begin
        ap_sig_allocacmp_g_xreg_30_load = g_xreg_30;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd31) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_g_xreg_31_load = ap_phi_mux_result_12_phi_fu_362_p12;
    end else begin
        ap_sig_allocacmp_g_xreg_31_load = g_xreg_31;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd3) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_g_xreg_3_load = ap_phi_mux_result_12_phi_fu_362_p12;
    end else begin
        ap_sig_allocacmp_g_xreg_3_load = g_xreg_3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd4) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_g_xreg_4_load = ap_phi_mux_result_12_phi_fu_362_p12;
    end else begin
        ap_sig_allocacmp_g_xreg_4_load = g_xreg_4;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd5) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_g_xreg_5_load = ap_phi_mux_result_12_phi_fu_362_p12;
    end else begin
        ap_sig_allocacmp_g_xreg_5_load = g_xreg_5;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd6) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_g_xreg_6_load = ap_phi_mux_result_12_phi_fu_362_p12;
    end else begin
        ap_sig_allocacmp_g_xreg_6_load = g_xreg_6;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd7) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_g_xreg_7_load = ap_phi_mux_result_12_phi_fu_362_p12;
    end else begin
        ap_sig_allocacmp_g_xreg_7_load = g_xreg_7;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd8) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_g_xreg_8_load = ap_phi_mux_result_12_phi_fu_362_p12;
    end else begin
        ap_sig_allocacmp_g_xreg_8_load = g_xreg_8;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_phi_mux_write_reg_1_phi_fu_384_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (rd_reg_1712_pp0_iter1_reg == 5'd9) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_g_xreg_9_load = ap_phi_mux_result_12_phi_fu_362_p12;
    end else begin
        ap_sig_allocacmp_g_xreg_9_load = g_xreg_9;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_423)) begin
        if ((op_code_reg_1696 == 7'd103)) begin
            ap_sig_allocacmp_pc = grp_fu_495_p2;
        end else if ((op_code_reg_1696 == 7'd99)) begin
            ap_sig_allocacmp_pc = ap_phi_reg_pp0_iter1_storemerge_reg_324;
        end else begin
            ap_sig_allocacmp_pc = g_pc;
        end
    end else begin
        ap_sig_allocacmp_pc = g_pc;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        data_memory_address0 = zext_ln405_fu_1602_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (op_code_reg_1696 == 7'd35))) begin
        data_memory_address0 = zext_ln198_fu_1307_p1;
    end else if ((((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (op_code_reg_1696 == 7'd3)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (op_code_reg_1696 == 7'd3)))) begin
        data_memory_address0 = grp_execute_load_fu_450_data_memory_address0;
    end else begin
        data_memory_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (op_code_reg_1696 == 7'd35)))) begin
        data_memory_ce0 = 1'b1;
    end else if ((((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (op_code_reg_1696 == 7'd3)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (op_code_reg_1696 == 7'd3)))) begin
        data_memory_ce0 = grp_execute_load_fu_450_data_memory_ce0;
    end else begin
        data_memory_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_phi_mux_write_mem_phi_fu_407_p12 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        data_memory_we0 = 1'b1;
    end else begin
        data_memory_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (op_code_reg_1696 == 7'd111)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (op_code_reg_1696 == 7'd103)))) begin
        grp_fu_490_p0 = pc_reg_1611_pp0_iter1_reg;
    end else if ((((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (op_code_reg_1696 == 7'd3)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (op_code_reg_1696 == 7'd35)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (((((((((funct3_reg_1701 == 3'd3) & (op_code_reg_1696 == 7'd99)) | ((funct3_reg_1701 == 3'd2) & (op_code_reg_1696 == 7'd99))) | ((grp_fu_474_p2 == 1'd1) & (funct3_reg_1701 == 3'd7) & (op_code_reg_1696 == 7'd99))) | ((grp_fu_474_p2 == 1'd0) & (funct3_reg_1701 == 3'd6) & (op_code_reg_1696 == 7'd99))) | ((grp_fu_478_p2 == 1'd1) & (funct3_reg_1701 == 3'd5) & (op_code_reg_1696 == 7'd99))) | ((grp_fu_478_p2 == 1'd0) & (funct3_reg_1701 == 3'd4) & (op_code_reg_1696 == 7'd99))) | (~(funct3_reg_1701 == 3'd1) & ~(funct3_reg_1701 == 3'd4) & ~(funct3_reg_1701 == 3'd5) & ~(funct3_reg_1701 == 3'd6) & ~(funct3_reg_1701 == 3'd7) & (grp_fu_482_p2 == 1'd0) & (op_code_reg_1696 
    == 7'd99))) | ((grp_fu_482_p2 == 1'd1) & (funct3_reg_1701 == 3'd1) & (op_code_reg_1696 == 7'd99)))) | (~(op_code_reg_1696 == 7'd3) & ~(op_code_reg_1696 == 7'd35) & ~(op_code_reg_1696 == 7'd99) & ~(op_code_reg_1696 == 7'd111) & ~(op_code_reg_1696 == 7'd103) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_490_p0 = pc_reg_1611;
    end else begin
        grp_fu_490_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        instr_memory_ce0 = 1'b1;
    end else begin
        instr_memory_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((((1'b0 == ap_block_pp0_stage2_subdone) & (ap_reset_idle_pp0 == 1'b0)) | ((1'b0 == ap_block_pp0_stage2_subdone) & (ap_reset_idle_pp0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln187_1_fu_1212_p2 = (trunc_ln187_1_fu_1199_p1 + trunc_ln187_fu_1196_p1);

assign add_ln187_2_fu_908_p2 = (trunc_ln71_fu_820_p1 + trunc_ln418_fu_620_p1);

assign add_ln187_fu_1202_p2 = ($signed(zext_ln187_fu_1190_p1) + $signed(sext_ln187_fu_1193_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_156 = ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2));
end

always @ (*) begin
    ap_condition_213 = (((((((grp_fu_474_p2 == 1'd1) & (funct3_reg_1701 == 3'd6) & (op_code_reg_1696 == 7'd99)) | ((grp_fu_474_p2 == 1'd0) & (funct3_reg_1701 == 3'd7) & (op_code_reg_1696 == 7'd99))) | ((grp_fu_478_p2 == 1'd0) & (funct3_reg_1701 == 3'd5) & (op_code_reg_1696 == 7'd99))) | ((grp_fu_478_p2 == 1'd1) & (funct3_reg_1701 == 3'd4) & (op_code_reg_1696 == 7'd99))) | (~(funct3_reg_1701 == 3'd3) & ~(funct3_reg_1701 == 3'd2) & ~(funct3_reg_1701 == 3'd1) & ~(funct3_reg_1701 == 3'd4) & ~(funct3_reg_1701 == 3'd5) & ~(funct3_reg_1701 == 3'd6) & ~(funct3_reg_1701 == 3'd7) & (grp_fu_482_p2 == 1'd1) & (op_code_reg_1696 == 7'd99))) | ((grp_fu_482_p2 == 1'd0) & (funct3_reg_1701 == 3'd1) & (op_code_reg_1696 == 7'd99)));
end

always @ (*) begin
    ap_condition_230 = (((((((((funct3_reg_1701 == 3'd3) & (op_code_reg_1696 == 7'd99)) | ((funct3_reg_1701 == 3'd2) & (op_code_reg_1696 == 7'd99))) | ((grp_fu_474_p2 == 1'd1) & (funct3_reg_1701 == 3'd7) & (op_code_reg_1696 == 7'd99))) | ((grp_fu_474_p2 == 1'd0) & (funct3_reg_1701 == 3'd6) & (op_code_reg_1696 == 7'd99))) | ((grp_fu_478_p2 == 1'd1) & (funct3_reg_1701 == 3'd5) & (op_code_reg_1696 == 7'd99))) | ((grp_fu_478_p2 == 1'd0) & (funct3_reg_1701 == 3'd4) & (op_code_reg_1696 == 7'd99))) | (~(funct3_reg_1701 == 3'd1) & ~(funct3_reg_1701 == 3'd4) & ~(funct3_reg_1701 == 3'd5) & ~(funct3_reg_1701 == 3'd6) & ~(funct3_reg_1701 == 3'd7) & (grp_fu_482_p2 == 1'd0) & (op_code_reg_1696 == 7'd99))) | ((grp_fu_482_p2 == 1'd1) & (funct3_reg_1701 == 3'd1) & (op_code_reg_1696 == 7'd99)));
end

always @ (*) begin
    ap_condition_423 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_result_12_reg_358 = 'bx;

assign ap_phi_reg_pp0_iter0_result_77_reg_333 = 'bx;

assign ap_phi_reg_pp0_iter0_storemerge_reg_324 = 'bx;

assign ap_phi_reg_pp0_iter0_write_mem_reg_403 = 'bx;

assign ap_phi_reg_pp0_iter0_write_reg_1_reg_379 = 'bx;

assign ap_phi_reg_pp0_iter1_write_addr_1_reg_427 = 'bx;

assign ap_return = g_error;

assign data_memory_d0 = ap_phi_mux_result_12_phi_fu_362_p12;

assign grp_execute_load_fu_450_ap_start = grp_execute_load_fu_450_ap_start_reg;

assign grp_fu_474_p2 = ((source1_fu_748_p34 < result_13_fu_824_p34) ? 1'b1 : 1'b0);

assign grp_fu_478_p2 = (($signed(source1_fu_748_p34) < $signed(result_13_fu_824_p34)) ? 1'b1 : 1'b0);

assign grp_fu_482_p2 = ((source1_fu_748_p34 == result_13_fu_824_p34) ? 1'b1 : 1'b0);

assign grp_fu_486_p2 = ($signed(pc_reg_1611) + $signed(immediate_9_fu_611_p3));

assign grp_fu_490_p2 = (grp_fu_490_p0 + 32'd4);

assign grp_fu_495_p2 = (source1_reg_1636 + immediate_9_reg_1627);

assign icmp_ln193_fu_1285_p2 = ((pos_fu_1218_p4 > 26'd51199) ? 1'b1 : 1'b0);

assign icmp_ln26_1_fu_529_p2 = ((ap_sig_allocacmp_pc > 32'd204799) ? 1'b1 : 1'b0);

assign icmp_ln26_fu_513_p2 = ((trunc_ln25_fu_509_p1 != 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln39_1_fu_1102_p2 = ((op_code_fu_926_p1 == 7'd35) ? 1'b1 : 1'b0);

assign icmp_ln39_2_fu_1116_p2 = ((op_code_fu_926_p1 == 7'd55) ? 1'b1 : 1'b0);

assign icmp_ln39_3_fu_1122_p2 = ((op_code_fu_926_p1 == 7'd23) ? 1'b1 : 1'b0);

assign icmp_ln39_4_fu_1128_p2 = ((op_code_fu_926_p1 == 7'd3) ? 1'b1 : 1'b0);

assign icmp_ln39_5_fu_1134_p2 = ((op_code_fu_926_p1 == 7'd19) ? 1'b1 : 1'b0);

assign icmp_ln39_6_fu_1140_p2 = ((op_code_fu_926_p1 == 7'd103) ? 1'b1 : 1'b0);

assign icmp_ln39_7_fu_1146_p2 = ((op_code_fu_926_p1 == 7'd115) ? 1'b1 : 1'b0);

assign icmp_ln39_fu_1088_p2 = ((op_code_fu_926_p1 == 7'd99) ? 1'b1 : 1'b0);

assign immediate_1_fu_980_p3 = {{tmp_10_fu_970_p4}, {tmp_s_fu_960_p4}};

assign immediate_2_fu_1028_p6 = {{{{{tmp_3_fu_1020_p3}, {tmp_2_fu_1012_p3}}, {tmp_12_fu_1002_p4}}, {tmp_11_fu_992_p4}}, {1'd0}};

assign immediate_3_fu_574_p3 = {{tmp_fu_565_p4}, {12'd0}};

assign immediate_4_fu_1074_p6 = {{{{{tmp_3_fu_1020_p3}, {tmp_14_fu_1064_p4}}, {tmp_4_fu_1056_p3}}, {tmp_13_fu_1046_p4}}, {1'd0}};

assign immediate_5_fu_1094_p3 = ((icmp_ln39_fu_1088_p2[0:0] == 1'b1) ? sext_ln418_1_fu_1042_p1 : immediate_4_fu_1074_p6);

assign immediate_6_fu_1108_p3 = ((icmp_ln39_1_fu_1102_p2[0:0] == 1'b1) ? sext_ln418_fu_988_p1 : immediate_5_fu_1094_p3);

assign immediate_7_fu_589_p3 = ((or_ln39_fu_585_p2[0:0] == 1'b1) ? immediate_3_fu_574_p3 : sext_ln418_2_fu_582_p1);

assign immediate_9_fu_611_p3 = ((or_ln39_3_fu_605_p2[0:0] == 1'b1) ? sext_ln45_fu_561_p1 : immediate_7_fu_589_p3);

assign immediate_fu_552_p4 = {{instr_reg_1690[31:20]}};

assign instr_memory_address0 = zext_ln28_fu_541_p1;

assign lshr_ln_fu_519_p4 = {{ap_sig_allocacmp_pc[17:2]}};

assign op_code_fu_926_p1 = instr_memory_q0[6:0];

assign or_ln26_fu_535_p2 = (icmp_ln26_fu_513_p2 | icmp_ln26_1_fu_529_p2);

assign or_ln39_1_fu_597_p2 = (icmp_ln39_5_reg_1736 | icmp_ln39_4_reg_1731);

assign or_ln39_2_fu_601_p2 = (icmp_ln39_7_reg_1746 | icmp_ln39_6_reg_1741);

assign or_ln39_3_fu_605_p2 = (or_ln39_2_fu_601_p2 | or_ln39_1_fu_597_p2);

assign or_ln39_fu_585_p2 = (icmp_ln39_3_reg_1726 | icmp_ln39_2_reg_1721);

assign p_and_t_fu_1242_p3 = {{1'd0}, {sub_ln188_fu_1236_p2}};

assign pos_3_fu_1297_p4 = {{add_ln187_1_fu_1212_p2[17:2]}};

assign pos_fu_1218_p4 = {{add_ln187_1_fu_1212_p2[27:2]}};

assign result_10_fu_1344_p5 = {{data_memory_q0[31:16]}, {trunc_ln213_fu_1341_p1}};

assign result_11_fu_1329_p5 = {{trunc_ln215_fu_1326_p1}, {data_memory_q0[15:0]}};

assign result_6_fu_1404_p5 = {{data_memory_q0[31:8]}, {trunc_ln202_fu_1401_p1}};

assign result_7_fu_1389_p5 = {{data_memory_q0[31:16]}, {trunc_ln204_fu_1386_p1}, {data_memory_q0[7:0]}};

assign result_8_fu_1374_p5 = {{data_memory_q0[31:24]}, {trunc_ln206_fu_1371_p1}, {data_memory_q0[15:0]}};

assign result_9_fu_1359_p5 = {{trunc_ln208_fu_1356_p1}, {data_memory_q0[23:0]}};

assign select_ln188_fu_1263_p3 = ((tmp_5_fu_1228_p3[0:0] == 1'b1) ? sub_ln188_1_fu_1250_p2 : tmp_15_fu_1256_p3);

assign sext_ln187_fu_1193_p1 = $signed(immediate_9_reg_1627);

assign sext_ln418_1_fu_1042_p1 = $signed(immediate_2_fu_1028_p6);

assign sext_ln418_2_fu_582_p1 = $signed(immediate_6_reg_1716);

assign sext_ln418_fu_988_p1 = $signed(immediate_1_fu_980_p3);

assign sext_ln45_fu_561_p1 = $signed(immediate_fu_552_p4);

assign sub_ln188_1_fu_1250_p2 = (3'd0 - p_and_t_fu_1242_p3);

assign sub_ln188_fu_1236_p2 = (2'd0 - trunc_ln187_2_fu_1208_p1);

assign tmp_10_fu_970_p4 = {{instr_memory_q0[31:25]}};

assign tmp_11_fu_992_p4 = {{instr_memory_q0[11:8]}};

assign tmp_12_fu_1002_p4 = {{instr_memory_q0[30:25]}};

assign tmp_13_fu_1046_p4 = {{instr_memory_q0[30:21]}};

assign tmp_14_fu_1064_p4 = {{instr_memory_q0[19:12]}};

assign tmp_15_fu_1256_p3 = {{1'd0}, {add_ln187_2_reg_1685}};

assign tmp_2_fu_1012_p3 = instr_memory_q0[32'd7];

assign tmp_3_fu_1020_p3 = instr_memory_q0[32'd31];

assign tmp_4_fu_1056_p3 = instr_memory_q0[32'd20];

assign tmp_5_fu_1228_p3 = add_ln187_fu_1202_p2[32'd33];

assign tmp_6_fu_1271_p3 = add_ln187_1_fu_1212_p2[32'd28];

assign tmp_fu_565_p4 = {{instr_reg_1690[31:12]}};

assign tmp_s_fu_960_p4 = {{instr_memory_q0[11:7]}};

assign trunc_ln187_1_fu_1199_p1 = source1_reg_1636[28:0];

assign trunc_ln187_2_fu_1208_p1 = grp_fu_495_p2[1:0];

assign trunc_ln187_fu_1196_p1 = immediate_9_reg_1627[28:0];

assign trunc_ln202_fu_1401_p1 = result_13_reg_1645[7:0];

assign trunc_ln204_fu_1386_p1 = result_13_reg_1645[7:0];

assign trunc_ln206_fu_1371_p1 = result_13_reg_1645[7:0];

assign trunc_ln208_fu_1356_p1 = result_13_reg_1645[7:0];

assign trunc_ln213_fu_1341_p1 = result_13_reg_1645[15:0];

assign trunc_ln215_fu_1326_p1 = result_13_reg_1645[15:0];

assign trunc_ln25_fu_509_p1 = ap_sig_allocacmp_pc[1:0];

assign trunc_ln418_fu_620_p1 = immediate_9_fu_611_p3[1:0];

assign trunc_ln71_fu_820_p1 = source1_fu_748_p34[1:0];

assign zext_ln187_fu_1190_p1 = source1_reg_1636;

assign zext_ln198_fu_1307_p1 = pos_3_fu_1297_p4;

assign zext_ln28_fu_541_p1 = lshr_ln_fu_519_p4;

assign zext_ln405_fu_1602_p1 = ap_phi_mux_write_addr_1_phi_fu_431_p12;

endmodule //processor_do_process
