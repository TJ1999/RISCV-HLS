// ==============================================================
// Generated by Vitis HLS v2023.1.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module processor_execute_load (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        funct3_val,
        imm_val,
        data_memory_address0,
        data_memory_ce0,
        data_memory_q0,
        source1_val,
        g_error,
        g_error_ap_vld,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [2:0] funct3_val;
input  [31:0] imm_val;
output  [15:0] data_memory_address0;
output   data_memory_ce0;
input  [31:0] data_memory_q0;
input  [31:0] source1_val;
output  [0:0] g_error;
output   g_error_ap_vld;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[15:0] data_memory_address0;
reg data_memory_ce0;
reg g_error_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [2:0] funct3_val_read_read_fu_96_p2;
reg   [2:0] funct3_val_read_reg_631;
wire    ap_block_pp0_stage0_11001;
wire   [2:0] select_ln129_fu_440_p3;
reg   [2:0] select_ln129_reg_635;
wire   [0:0] or_ln130_fu_468_p2;
reg   [0:0] or_ln130_reg_639;
reg   [0:0] ap_phi_mux_g_error_flag_2_phi_fu_215_p36;
wire   [0:0] ap_phi_reg_pp0_iter0_g_error_flag_2_reg_211;
reg   [0:0] ap_phi_reg_pp0_iter1_g_error_flag_2_reg_211;
reg   [31:0] ap_phi_mux_phi_ln183_phi_fu_258_p36;
wire   [31:0] ap_phi_reg_pp0_iter1_phi_ln183_reg_254;
wire   [31:0] zext_ln175_1_fu_549_p1;
wire   [31:0] zext_ln173_1_fu_558_p1;
wire   [31:0] zext_ln168_1_fu_563_p1;
wire   [31:0] zext_ln166_1_fu_568_p1;
wire   [31:0] zext_ln164_1_fu_573_p1;
wire   [31:0] zext_ln162_1_fu_582_p1;
wire  signed [31:0] sext_ln154_fu_587_p1;
wire  signed [31:0] sext_ln152_fu_596_p1;
wire  signed [31:0] sext_ln147_fu_601_p1;
wire  signed [31:0] sext_ln145_fu_606_p1;
wire  signed [31:0] sext_ln143_fu_611_p1;
wire  signed [31:0] sext_ln141_fu_620_p1;
wire   [63:0] zext_ln175_fu_484_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln173_fu_489_p1;
wire   [63:0] zext_ln168_fu_494_p1;
wire   [63:0] zext_ln166_fu_499_p1;
wire   [63:0] zext_ln164_fu_504_p1;
wire   [63:0] zext_ln162_fu_509_p1;
wire   [63:0] zext_ln158_fu_514_p1;
wire   [63:0] zext_ln154_fu_519_p1;
wire   [63:0] zext_ln152_fu_524_p1;
wire   [63:0] zext_ln147_fu_529_p1;
wire   [63:0] zext_ln145_fu_534_p1;
wire   [63:0] zext_ln143_fu_539_p1;
wire   [63:0] zext_ln141_fu_544_p1;
wire  signed [31:0] empty_fu_342_p0;
wire  signed [31:0] sext_ln128_fu_354_p0;
wire  signed [31:0] trunc_ln128_fu_358_p0;
wire   [1:0] empty_17_fu_346_p1;
wire   [1:0] empty_fu_342_p1;
wire  signed [31:0] add_ln128_3_fu_372_p1;
wire   [33:0] zext_ln128_fu_350_p1;
wire  signed [33:0] sext_ln128_fu_354_p1;
wire   [31:0] add_ln128_3_fu_372_p2;
wire   [28:0] trunc_ln128_1_fu_362_p1;
wire   [28:0] trunc_ln128_fu_358_p1;
wire   [28:0] add_ln128_1_fu_388_p2;
wire   [33:0] add_ln128_fu_378_p2;
wire   [1:0] trunc_ln128_2_fu_384_p1;
wire   [1:0] sub_ln129_fu_412_p2;
wire   [2:0] p_and_t_fu_418_p3;
wire   [1:0] add_ln128_2_fu_366_p2;
wire   [0:0] tmp_fu_404_p3;
wire   [2:0] sub_ln129_1_fu_426_p2;
wire   [2:0] tmp_s_fu_432_p3;
wire   [0:0] tmp_1_fu_448_p3;
wire   [25:0] pos_fu_394_p4;
wire   [0:0] icmp_ln134_fu_462_p2;
wire   [0:0] xor_ln130_fu_456_p2;
wire   [15:0] pos_1_fu_474_p4;
wire   [15:0] grp_fu_302_p4;
wire   [15:0] trunc_ln173_fu_554_p1;
wire   [7:0] grp_fu_312_p4;
wire   [7:0] grp_fu_322_p4;
wire   [7:0] grp_fu_332_p4;
wire   [7:0] trunc_ln162_fu_578_p1;
wire   [15:0] trunc_ln152_fu_592_p1;
wire   [7:0] trunc_ln141_fu_616_p1;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_246;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((funct3_val_read_read_fu_96_p2 == 3'd3) | ((funct3_val_read_read_fu_96_p2 == 3'd6) | (funct3_val_read_read_fu_96_p2 == 3'd7))))) begin
        ap_phi_reg_pp0_iter1_g_error_flag_2_reg_211 <= 1'd1;
    end else if (((~(select_ln129_fu_440_p3 == 3'd1) & ~(select_ln129_fu_440_p3 == 3'd3) & ~(select_ln129_fu_440_p3 == 3'd0) & ~(select_ln129_fu_440_p3 == 3'd2) & (funct3_val_read_read_fu_96_p2 == 3'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~(select_ln129_fu_440_p3 == 3'd1) & ~(select_ln129_fu_440_p3 == 3'd3) & ~(select_ln129_fu_440_p3 == 3'd0) & ~(select_ln129_fu_440_p3 == 3'd2) & (funct3_val_read_read_fu_96_p2 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~(select_ln129_fu_440_p3 == 3'd0) & ~(select_ln129_fu_440_p3 == 3'd2) & (funct3_val_read_read_fu_96_p2 == 3'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~(select_ln129_fu_440_p3 == 3'd0) & ~(select_ln129_fu_440_p3 == 3'd2) & (funct3_val_read_read_fu_96_p2 == 3'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ap_phi_reg_pp0_iter1_g_error_flag_2_reg_211 <= or_ln130_fu_468_p2;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_g_error_flag_2_reg_211 <= ap_phi_reg_pp0_iter0_g_error_flag_2_reg_211;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        funct3_val_read_reg_631 <= funct3_val;
        or_ln130_reg_639 <= or_ln130_fu_468_p2;
        select_ln129_reg_635 <= select_ln129_fu_440_p3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((funct3_val_read_reg_631 == 3'd2) | ((select_ln129_reg_635 == 3'd1) & (funct3_val_read_reg_631 == 3'd0)) | ((select_ln129_reg_635 == 3'd1) & (funct3_val_read_reg_631 == 3'd4)) | ((select_ln129_reg_635 == 3'd3) & (funct3_val_read_reg_631 == 3'd0)) | ((select_ln129_reg_635 == 3'd3) & (funct3_val_read_reg_631 == 3'd4)) | ((select_ln129_reg_635 == 3'd0) & (funct3_val_read_reg_631 == 3'd0)) | ((select_ln129_reg_635 == 3'd0) & (funct3_val_read_reg_631 == 3'd1)) | ((select_ln129_reg_635 == 3'd0) & (funct3_val_read_reg_631 == 3'd4)) | ((select_ln129_reg_635 == 3'd0) & (funct3_val_read_reg_631 == 3'd5)) | ((select_ln129_reg_635 == 3'd2) & (funct3_val_read_reg_631 == 3'd0)) | ((select_ln129_reg_635 == 3'd2) & (funct3_val_read_reg_631 == 3'd1)) | ((select_ln129_reg_635 == 3'd2) & (funct3_val_read_reg_631 == 3'd4)) | ((select_ln129_reg_635 == 3'd2) & (funct3_val_read_reg_631 == 3'd5)))) begin
        ap_phi_mux_g_error_flag_2_phi_fu_215_p36 = or_ln130_reg_639;
    end else begin
        ap_phi_mux_g_error_flag_2_phi_fu_215_p36 = ap_phi_reg_pp0_iter1_g_error_flag_2_reg_211;
    end
end

always @ (*) begin
    if (((select_ln129_reg_635 == 3'd0) & (funct3_val_read_reg_631 == 3'd0))) begin
        ap_phi_mux_phi_ln183_phi_fu_258_p36 = sext_ln141_fu_620_p1;
    end else if (((select_ln129_reg_635 == 3'd1) & (funct3_val_read_reg_631 == 3'd0))) begin
        ap_phi_mux_phi_ln183_phi_fu_258_p36 = sext_ln143_fu_611_p1;
    end else if (((select_ln129_reg_635 == 3'd2) & (funct3_val_read_reg_631 == 3'd0))) begin
        ap_phi_mux_phi_ln183_phi_fu_258_p36 = sext_ln145_fu_606_p1;
    end else if (((select_ln129_reg_635 == 3'd3) & (funct3_val_read_reg_631 == 3'd0))) begin
        ap_phi_mux_phi_ln183_phi_fu_258_p36 = sext_ln147_fu_601_p1;
    end else if (((select_ln129_reg_635 == 3'd0) & (funct3_val_read_reg_631 == 3'd1))) begin
        ap_phi_mux_phi_ln183_phi_fu_258_p36 = sext_ln152_fu_596_p1;
    end else if (((select_ln129_reg_635 == 3'd2) & (funct3_val_read_reg_631 == 3'd1))) begin
        ap_phi_mux_phi_ln183_phi_fu_258_p36 = sext_ln154_fu_587_p1;
    end else if (((select_ln129_reg_635 == 3'd0) & (funct3_val_read_reg_631 == 3'd4))) begin
        ap_phi_mux_phi_ln183_phi_fu_258_p36 = zext_ln162_1_fu_582_p1;
    end else if (((select_ln129_reg_635 == 3'd1) & (funct3_val_read_reg_631 == 3'd4))) begin
        ap_phi_mux_phi_ln183_phi_fu_258_p36 = zext_ln164_1_fu_573_p1;
    end else if (((select_ln129_reg_635 == 3'd2) & (funct3_val_read_reg_631 == 3'd4))) begin
        ap_phi_mux_phi_ln183_phi_fu_258_p36 = zext_ln166_1_fu_568_p1;
    end else if (((select_ln129_reg_635 == 3'd3) & (funct3_val_read_reg_631 == 3'd4))) begin
        ap_phi_mux_phi_ln183_phi_fu_258_p36 = zext_ln168_1_fu_563_p1;
    end else if (((select_ln129_reg_635 == 3'd0) & (funct3_val_read_reg_631 == 3'd5))) begin
        ap_phi_mux_phi_ln183_phi_fu_258_p36 = zext_ln173_1_fu_558_p1;
    end else if (((select_ln129_reg_635 == 3'd2) & (funct3_val_read_reg_631 == 3'd5))) begin
        ap_phi_mux_phi_ln183_phi_fu_258_p36 = zext_ln175_1_fu_549_p1;
    end else if ((funct3_val_read_reg_631 == 3'd2)) begin
        ap_phi_mux_phi_ln183_phi_fu_258_p36 = data_memory_q0;
    end else begin
        ap_phi_mux_phi_ln183_phi_fu_258_p36 = ap_phi_reg_pp0_iter1_phi_ln183_reg_254;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_246)) begin
        if (((select_ln129_fu_440_p3 == 3'd0) & (funct3_val_read_read_fu_96_p2 == 3'd0))) begin
            data_memory_address0 = zext_ln141_fu_544_p1;
        end else if (((select_ln129_fu_440_p3 == 3'd1) & (funct3_val_read_read_fu_96_p2 == 3'd0))) begin
            data_memory_address0 = zext_ln143_fu_539_p1;
        end else if (((select_ln129_fu_440_p3 == 3'd2) & (funct3_val_read_read_fu_96_p2 == 3'd0))) begin
            data_memory_address0 = zext_ln145_fu_534_p1;
        end else if (((select_ln129_fu_440_p3 == 3'd3) & (funct3_val_read_read_fu_96_p2 == 3'd0))) begin
            data_memory_address0 = zext_ln147_fu_529_p1;
        end else if (((select_ln129_fu_440_p3 == 3'd0) & (funct3_val_read_read_fu_96_p2 == 3'd1))) begin
            data_memory_address0 = zext_ln152_fu_524_p1;
        end else if (((select_ln129_fu_440_p3 == 3'd2) & (funct3_val_read_read_fu_96_p2 == 3'd1))) begin
            data_memory_address0 = zext_ln154_fu_519_p1;
        end else if ((funct3_val_read_read_fu_96_p2 == 3'd2)) begin
            data_memory_address0 = zext_ln158_fu_514_p1;
        end else if (((select_ln129_fu_440_p3 == 3'd0) & (funct3_val_read_read_fu_96_p2 == 3'd4))) begin
            data_memory_address0 = zext_ln162_fu_509_p1;
        end else if (((select_ln129_fu_440_p3 == 3'd1) & (funct3_val_read_read_fu_96_p2 == 3'd4))) begin
            data_memory_address0 = zext_ln164_fu_504_p1;
        end else if (((select_ln129_fu_440_p3 == 3'd2) & (funct3_val_read_read_fu_96_p2 == 3'd4))) begin
            data_memory_address0 = zext_ln166_fu_499_p1;
        end else if (((select_ln129_fu_440_p3 == 3'd3) & (funct3_val_read_read_fu_96_p2 == 3'd4))) begin
            data_memory_address0 = zext_ln168_fu_494_p1;
        end else if (((select_ln129_fu_440_p3 == 3'd0) & (funct3_val_read_read_fu_96_p2 == 3'd5))) begin
            data_memory_address0 = zext_ln173_fu_489_p1;
        end else if (((select_ln129_fu_440_p3 == 3'd2) & (funct3_val_read_read_fu_96_p2 == 3'd5))) begin
            data_memory_address0 = zext_ln175_fu_484_p1;
        end else begin
            data_memory_address0 = 'bx;
        end
    end else begin
        data_memory_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((select_ln129_fu_440_p3 == 3'd1) & (funct3_val_read_read_fu_96_p2 == 3'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((select_ln129_fu_440_p3 == 3'd1) & (funct3_val_read_read_fu_96_p2 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((select_ln129_fu_440_p3 == 3'd3) & (funct3_val_read_read_fu_96_p2 == 3'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((select_ln129_fu_440_p3 == 3'd3) & (funct3_val_read_read_fu_96_p2 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((select_ln129_fu_440_p3 == 3'd0) & (funct3_val_read_read_fu_96_p2 == 3'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((select_ln129_fu_440_p3 == 3'd0) & (funct3_val_read_read_fu_96_p2 == 3'd5) & (1'b0 == ap_block_pp0_stage0_11001) 
    & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((select_ln129_fu_440_p3 == 3'd0) & (funct3_val_read_read_fu_96_p2 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((select_ln129_fu_440_p3 == 3'd0) & (funct3_val_read_read_fu_96_p2 == 3'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((select_ln129_fu_440_p3 == 3'd2) & (funct3_val_read_read_fu_96_p2 == 3'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((select_ln129_fu_440_p3 == 3'd2) & (funct3_val_read_read_fu_96_p2 == 3'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((select_ln129_fu_440_p3 == 3'd2) & (funct3_val_read_read_fu_96_p2 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((select_ln129_fu_440_p3 
    == 3'd2) & (funct3_val_read_read_fu_96_p2 == 3'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((funct3_val_read_read_fu_96_p2 == 3'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        data_memory_ce0 = 1'b1;
    end else begin
        data_memory_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_phi_mux_g_error_flag_2_phi_fu_215_p36 == 1'd1))) begin
        g_error_ap_vld = 1'b1;
    end else begin
        g_error_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln128_1_fu_388_p2 = (trunc_ln128_1_fu_362_p1 + trunc_ln128_fu_358_p1);

assign add_ln128_2_fu_366_p2 = (empty_17_fu_346_p1 + empty_fu_342_p1);

assign add_ln128_3_fu_372_p1 = imm_val;

assign add_ln128_3_fu_372_p2 = ($signed(source1_val) + $signed(add_ln128_3_fu_372_p1));

assign add_ln128_fu_378_p2 = ($signed(zext_ln128_fu_350_p1) + $signed(sext_ln128_fu_354_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_246 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_g_error_flag_2_reg_211 = 'bx;

assign ap_phi_reg_pp0_iter1_phi_ln183_reg_254 = 'bx;

assign ap_return = ap_phi_mux_phi_ln183_phi_fu_258_p36;

assign empty_17_fu_346_p1 = source1_val[1:0];

assign empty_fu_342_p0 = imm_val;

assign empty_fu_342_p1 = empty_fu_342_p0[1:0];

assign funct3_val_read_read_fu_96_p2 = funct3_val;

assign g_error = 1'd1;

assign grp_fu_302_p4 = {{data_memory_q0[31:16]}};

assign grp_fu_312_p4 = {{data_memory_q0[31:24]}};

assign grp_fu_322_p4 = {{data_memory_q0[23:16]}};

assign grp_fu_332_p4 = {{data_memory_q0[15:8]}};

assign icmp_ln134_fu_462_p2 = ((pos_fu_394_p4 > 26'd51199) ? 1'b1 : 1'b0);

assign or_ln130_fu_468_p2 = (xor_ln130_fu_456_p2 | icmp_ln134_fu_462_p2);

assign p_and_t_fu_418_p3 = {{1'd0}, {sub_ln129_fu_412_p2}};

assign pos_1_fu_474_p4 = {{add_ln128_1_fu_388_p2[17:2]}};

assign pos_fu_394_p4 = {{add_ln128_1_fu_388_p2[27:2]}};

assign select_ln129_fu_440_p3 = ((tmp_fu_404_p3[0:0] == 1'b1) ? sub_ln129_1_fu_426_p2 : tmp_s_fu_432_p3);

assign sext_ln128_fu_354_p0 = imm_val;

assign sext_ln128_fu_354_p1 = sext_ln128_fu_354_p0;

assign sext_ln141_fu_620_p1 = $signed(trunc_ln141_fu_616_p1);

assign sext_ln143_fu_611_p1 = $signed(grp_fu_332_p4);

assign sext_ln145_fu_606_p1 = $signed(grp_fu_322_p4);

assign sext_ln147_fu_601_p1 = $signed(grp_fu_312_p4);

assign sext_ln152_fu_596_p1 = $signed(trunc_ln152_fu_592_p1);

assign sext_ln154_fu_587_p1 = $signed(grp_fu_302_p4);

assign sub_ln129_1_fu_426_p2 = (3'd0 - p_and_t_fu_418_p3);

assign sub_ln129_fu_412_p2 = (2'd0 - trunc_ln128_2_fu_384_p1);

assign tmp_1_fu_448_p3 = add_ln128_1_fu_388_p2[32'd28];

assign tmp_fu_404_p3 = add_ln128_fu_378_p2[32'd33];

assign tmp_s_fu_432_p3 = {{1'd0}, {add_ln128_2_fu_366_p2}};

assign trunc_ln128_1_fu_362_p1 = source1_val[28:0];

assign trunc_ln128_2_fu_384_p1 = add_ln128_3_fu_372_p2[1:0];

assign trunc_ln128_fu_358_p0 = imm_val;

assign trunc_ln128_fu_358_p1 = trunc_ln128_fu_358_p0[28:0];

assign trunc_ln141_fu_616_p1 = data_memory_q0[7:0];

assign trunc_ln152_fu_592_p1 = data_memory_q0[15:0];

assign trunc_ln162_fu_578_p1 = data_memory_q0[7:0];

assign trunc_ln173_fu_554_p1 = data_memory_q0[15:0];

assign xor_ln130_fu_456_p2 = (tmp_1_fu_448_p3 ^ 1'd1);

assign zext_ln128_fu_350_p1 = source1_val;

assign zext_ln141_fu_544_p1 = pos_1_fu_474_p4;

assign zext_ln143_fu_539_p1 = pos_1_fu_474_p4;

assign zext_ln145_fu_534_p1 = pos_1_fu_474_p4;

assign zext_ln147_fu_529_p1 = pos_1_fu_474_p4;

assign zext_ln152_fu_524_p1 = pos_1_fu_474_p4;

assign zext_ln154_fu_519_p1 = pos_1_fu_474_p4;

assign zext_ln158_fu_514_p1 = pos_1_fu_474_p4;

assign zext_ln162_1_fu_582_p1 = trunc_ln162_fu_578_p1;

assign zext_ln162_fu_509_p1 = pos_1_fu_474_p4;

assign zext_ln164_1_fu_573_p1 = grp_fu_332_p4;

assign zext_ln164_fu_504_p1 = pos_1_fu_474_p4;

assign zext_ln166_1_fu_568_p1 = grp_fu_322_p4;

assign zext_ln166_fu_499_p1 = pos_1_fu_474_p4;

assign zext_ln168_1_fu_563_p1 = grp_fu_312_p4;

assign zext_ln168_fu_494_p1 = pos_1_fu_474_p4;

assign zext_ln173_1_fu_558_p1 = trunc_ln173_fu_554_p1;

assign zext_ln173_fu_489_p1 = pos_1_fu_474_p4;

assign zext_ln175_1_fu_549_p1 = grp_fu_302_p4;

assign zext_ln175_fu_484_p1 = pos_1_fu_474_p4;

endmodule //processor_execute_load
